
gas_detection_system.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004cd4  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003b8  08004e78  08004e78  00005e78  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005230  08005230  000071d0  2**0
                  CONTENTS
  4 .ARM          00000008  08005230  08005230  00006230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08005238  08005238  000071d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005238  08005238  00006238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800523c  0800523c  0000623c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d0  20000000  08005240  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000178  200001d0  08005410  000071d0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000348  08005410  00007348  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000071d0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00003a2f  00000000  00000000  00007200  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000011db  00000000  00000000  0000ac2f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000450  00000000  00000000  0000be10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000002fa  00000000  00000000  0000c260  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000169ad  00000000  00000000  0000c55a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00007169  00000000  00000000  00022f07  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000864d3  00000000  00000000  0002a070  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b0543  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000205c  00000000  00000000  000b0588  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006f  00000000  00000000  000b25e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001d0 	.word	0x200001d0
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004e5c 	.word	0x08004e5c

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001d4 	.word	0x200001d4
 80001dc:	08004e5c 	.word	0x08004e5c

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	@ 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000bb8:	b480      	push	{r7}
 8000bba:	b083      	sub	sp, #12
 8000bbc:	af00      	add	r7, sp, #0
 8000bbe:	4603      	mov	r3, r0
 8000bc0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000bc2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bc6:	2b00      	cmp	r3, #0
 8000bc8:	db0b      	blt.n	8000be2 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000bca:	79fb      	ldrb	r3, [r7, #7]
 8000bcc:	f003 021f 	and.w	r2, r3, #31
 8000bd0:	4907      	ldr	r1, [pc, #28]	@ (8000bf0 <__NVIC_EnableIRQ+0x38>)
 8000bd2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bd6:	095b      	lsrs	r3, r3, #5
 8000bd8:	2001      	movs	r0, #1
 8000bda:	fa00 f202 	lsl.w	r2, r0, r2
 8000bde:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8000be2:	bf00      	nop
 8000be4:	370c      	adds	r7, #12
 8000be6:	46bd      	mov	sp, r7
 8000be8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bec:	4770      	bx	lr
 8000bee:	bf00      	nop
 8000bf0:	e000e100 	.word	0xe000e100

08000bf4 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000bf4:	b480      	push	{r7}
 8000bf6:	b083      	sub	sp, #12
 8000bf8:	af00      	add	r7, sp, #0
 8000bfa:	4603      	mov	r3, r0
 8000bfc:	6039      	str	r1, [r7, #0]
 8000bfe:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000c00:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000c04:	2b00      	cmp	r3, #0
 8000c06:	db0a      	blt.n	8000c1e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000c08:	683b      	ldr	r3, [r7, #0]
 8000c0a:	b2da      	uxtb	r2, r3
 8000c0c:	490c      	ldr	r1, [pc, #48]	@ (8000c40 <__NVIC_SetPriority+0x4c>)
 8000c0e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000c12:	0112      	lsls	r2, r2, #4
 8000c14:	b2d2      	uxtb	r2, r2
 8000c16:	440b      	add	r3, r1
 8000c18:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000c1c:	e00a      	b.n	8000c34 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000c1e:	683b      	ldr	r3, [r7, #0]
 8000c20:	b2da      	uxtb	r2, r3
 8000c22:	4908      	ldr	r1, [pc, #32]	@ (8000c44 <__NVIC_SetPriority+0x50>)
 8000c24:	79fb      	ldrb	r3, [r7, #7]
 8000c26:	f003 030f 	and.w	r3, r3, #15
 8000c2a:	3b04      	subs	r3, #4
 8000c2c:	0112      	lsls	r2, r2, #4
 8000c2e:	b2d2      	uxtb	r2, r2
 8000c30:	440b      	add	r3, r1
 8000c32:	761a      	strb	r2, [r3, #24]
}
 8000c34:	bf00      	nop
 8000c36:	370c      	adds	r7, #12
 8000c38:	46bd      	mov	sp, r7
 8000c3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c3e:	4770      	bx	lr
 8000c40:	e000e100 	.word	0xe000e100
 8000c44:	e000ed00 	.word	0xe000ed00

08000c48 <Button_EXTI_Init>:

extern void Buzzer_OFF(void);
extern void Relay_OFF(void);


void Button_EXTI_Init(void) {
 8000c48:	b580      	push	{r7, lr}
 8000c4a:	af00      	add	r7, sp, #0

	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 8000c4c:	4b22      	ldr	r3, [pc, #136]	@ (8000cd8 <Button_EXTI_Init+0x90>)
 8000c4e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c50:	4a21      	ldr	r2, [pc, #132]	@ (8000cd8 <Button_EXTI_Init+0x90>)
 8000c52:	f043 0302 	orr.w	r3, r3, #2
 8000c56:	6313      	str	r3, [r2, #48]	@ 0x30
    RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 8000c58:	4b1f      	ldr	r3, [pc, #124]	@ (8000cd8 <Button_EXTI_Init+0x90>)
 8000c5a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c5c:	4a1e      	ldr	r2, [pc, #120]	@ (8000cd8 <Button_EXTI_Init+0x90>)
 8000c5e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000c62:	6453      	str	r3, [r2, #68]	@ 0x44

    // Cấu hình PB4, PB5 là input và pull-up
    GPIOB->MODER &= ~((3 << (SW1_PIN * 2)) | (3 << (SW2_PIN * 2)));   // Input mode
 8000c64:	4b1d      	ldr	r3, [pc, #116]	@ (8000cdc <Button_EXTI_Init+0x94>)
 8000c66:	681b      	ldr	r3, [r3, #0]
 8000c68:	4a1c      	ldr	r2, [pc, #112]	@ (8000cdc <Button_EXTI_Init+0x94>)
 8000c6a:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8000c6e:	6013      	str	r3, [r2, #0]
    GPIOB->PUPDR &= ~((3 << (SW1_PIN * 2)) | (3 << (SW2_PIN * 2)));   // Clear pull
 8000c70:	4b1a      	ldr	r3, [pc, #104]	@ (8000cdc <Button_EXTI_Init+0x94>)
 8000c72:	68db      	ldr	r3, [r3, #12]
 8000c74:	4a19      	ldr	r2, [pc, #100]	@ (8000cdc <Button_EXTI_Init+0x94>)
 8000c76:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8000c7a:	60d3      	str	r3, [r2, #12]
    GPIOB->PUPDR |=  ((1 << (SW1_PIN * 2)) | (1 << (SW2_PIN * 2)));   // Pull-up
 8000c7c:	4b17      	ldr	r3, [pc, #92]	@ (8000cdc <Button_EXTI_Init+0x94>)
 8000c7e:	68db      	ldr	r3, [r3, #12]
 8000c80:	4a16      	ldr	r2, [pc, #88]	@ (8000cdc <Button_EXTI_Init+0x94>)
 8000c82:	f443 63a0 	orr.w	r3, r3, #1280	@ 0x500
 8000c86:	60d3      	str	r3, [r2, #12]

    // SYSCFG cấu hình EXTI4 và EXTI5 cho port B
    SYSCFG->EXTICR[1] &= ~((0xF << 0) | (0xF << 4));  // clear EXTI4, EXTI5
 8000c88:	4b15      	ldr	r3, [pc, #84]	@ (8000ce0 <Button_EXTI_Init+0x98>)
 8000c8a:	68db      	ldr	r3, [r3, #12]
 8000c8c:	4a14      	ldr	r2, [pc, #80]	@ (8000ce0 <Button_EXTI_Init+0x98>)
 8000c8e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8000c92:	60d3      	str	r3, [r2, #12]
    SYSCFG->EXTICR[1] |=  ((1 << 0) | (1 << 4));      // EXTI4 = PB4, EXTI5 = PB5
 8000c94:	4b12      	ldr	r3, [pc, #72]	@ (8000ce0 <Button_EXTI_Init+0x98>)
 8000c96:	68db      	ldr	r3, [r3, #12]
 8000c98:	4a11      	ldr	r2, [pc, #68]	@ (8000ce0 <Button_EXTI_Init+0x98>)
 8000c9a:	f043 0311 	orr.w	r3, r3, #17
 8000c9e:	60d3      	str	r3, [r2, #12]

    // Cấu hình EXTI4 và EXTI5 ngắt cạnh xuống
    EXTI->IMR  |= (1 << SW1_PIN) | (1 << SW2_PIN);  // Unmask EXTI4 và EXTI5
 8000ca0:	4b10      	ldr	r3, [pc, #64]	@ (8000ce4 <Button_EXTI_Init+0x9c>)
 8000ca2:	681b      	ldr	r3, [r3, #0]
 8000ca4:	4a0f      	ldr	r2, [pc, #60]	@ (8000ce4 <Button_EXTI_Init+0x9c>)
 8000ca6:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 8000caa:	6013      	str	r3, [r2, #0]
    EXTI->FTSR |= (1 << SW1_PIN) | (1 << SW2_PIN);  // Falling edge
 8000cac:	4b0d      	ldr	r3, [pc, #52]	@ (8000ce4 <Button_EXTI_Init+0x9c>)
 8000cae:	68db      	ldr	r3, [r3, #12]
 8000cb0:	4a0c      	ldr	r2, [pc, #48]	@ (8000ce4 <Button_EXTI_Init+0x9c>)
 8000cb2:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 8000cb6:	60d3      	str	r3, [r2, #12]

    // Enable ngắt trong NVIC
    NVIC_EnableIRQ(EXTI4_IRQn);        // Cho EXTI4
 8000cb8:	200a      	movs	r0, #10
 8000cba:	f7ff ff7d 	bl	8000bb8 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(EXTI9_5_IRQn);      // Cho EXTI5 đến EXTI9
 8000cbe:	2017      	movs	r0, #23
 8000cc0:	f7ff ff7a 	bl	8000bb8 <__NVIC_EnableIRQ>
    NVIC_SetPriority(EXTI4_IRQn, 0);   // Độ ưu tiên cao nhất
 8000cc4:	2100      	movs	r1, #0
 8000cc6:	200a      	movs	r0, #10
 8000cc8:	f7ff ff94 	bl	8000bf4 <__NVIC_SetPriority>
    NVIC_SetPriority(EXTI9_5_IRQn, 1); // Độ ưu tiên cao nhất
 8000ccc:	2101      	movs	r1, #1
 8000cce:	2017      	movs	r0, #23
 8000cd0:	f7ff ff90 	bl	8000bf4 <__NVIC_SetPriority>
}
 8000cd4:	bf00      	nop
 8000cd6:	bd80      	pop	{r7, pc}
 8000cd8:	40023800 	.word	0x40023800
 8000cdc:	40020400 	.word	0x40020400
 8000ce0:	40013800 	.word	0x40013800
 8000ce4:	40013c00 	.word	0x40013c00

08000ce8 <EXTI4_IRQHandler>:

// Xử lý nút PB4 (SW1)
void EXTI4_IRQHandler(void) {
 8000ce8:	b480      	push	{r7}
 8000cea:	af00      	add	r7, sp, #0
    if (EXTI->PR & (1 << SW1_PIN)) {
 8000cec:	4b0c      	ldr	r3, [pc, #48]	@ (8000d20 <EXTI4_IRQHandler+0x38>)
 8000cee:	695b      	ldr	r3, [r3, #20]
 8000cf0:	f003 0310 	and.w	r3, r3, #16
 8000cf4:	2b00      	cmp	r3, #0
 8000cf6:	d00d      	beq.n	8000d14 <EXTI4_IRQHandler+0x2c>
    	system_state ^= 1;
 8000cf8:	4b0a      	ldr	r3, [pc, #40]	@ (8000d24 <EXTI4_IRQHandler+0x3c>)
 8000cfa:	781b      	ldrb	r3, [r3, #0]
 8000cfc:	b2db      	uxtb	r3, r3
 8000cfe:	f083 0301 	eor.w	r3, r3, #1
 8000d02:	b2da      	uxtb	r2, r3
 8000d04:	4b07      	ldr	r3, [pc, #28]	@ (8000d24 <EXTI4_IRQHandler+0x3c>)
 8000d06:	701a      	strb	r2, [r3, #0]
        EXTI->PR |= (1 << SW1_PIN);                  // Xóa cờ
 8000d08:	4b05      	ldr	r3, [pc, #20]	@ (8000d20 <EXTI4_IRQHandler+0x38>)
 8000d0a:	695b      	ldr	r3, [r3, #20]
 8000d0c:	4a04      	ldr	r2, [pc, #16]	@ (8000d20 <EXTI4_IRQHandler+0x38>)
 8000d0e:	f043 0310 	orr.w	r3, r3, #16
 8000d12:	6153      	str	r3, [r2, #20]
    }
}
 8000d14:	bf00      	nop
 8000d16:	46bd      	mov	sp, r7
 8000d18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d1c:	4770      	bx	lr
 8000d1e:	bf00      	nop
 8000d20:	40013c00 	.word	0x40013c00
 8000d24:	20000004 	.word	0x20000004

08000d28 <EXTI9_5_IRQHandler>:
// Xử lý nút PB5 (SW2)
void EXTI9_5_IRQHandler(void) {
 8000d28:	b580      	push	{r7, lr}
 8000d2a:	af00      	add	r7, sp, #0
    if (EXTI->PR & (1 << SW2_PIN)) {
 8000d2c:	4b0a      	ldr	r3, [pc, #40]	@ (8000d58 <EXTI9_5_IRQHandler+0x30>)
 8000d2e:	695b      	ldr	r3, [r3, #20]
 8000d30:	f003 0320 	and.w	r3, r3, #32
 8000d34:	2b00      	cmp	r3, #0
 8000d36:	d00c      	beq.n	8000d52 <EXTI9_5_IRQHandler+0x2a>
        EXTI->PR |= (1 << SW2_PIN);  // Xoá cờ ngắt EXTI5
 8000d38:	4b07      	ldr	r3, [pc, #28]	@ (8000d58 <EXTI9_5_IRQHandler+0x30>)
 8000d3a:	695b      	ldr	r3, [r3, #20]
 8000d3c:	4a06      	ldr	r2, [pc, #24]	@ (8000d58 <EXTI9_5_IRQHandler+0x30>)
 8000d3e:	f043 0320 	orr.w	r3, r3, #32
 8000d42:	6153      	str	r3, [r2, #20]
        // Xử lý nút SW2 (PB5)
        system_state = STATE_STOPPED;
 8000d44:	4b05      	ldr	r3, [pc, #20]	@ (8000d5c <EXTI9_5_IRQHandler+0x34>)
 8000d46:	2200      	movs	r2, #0
 8000d48:	701a      	strb	r2, [r3, #0]
        Buzzer_OFF();
 8000d4a:	f000 f847 	bl	8000ddc <Buzzer_OFF>
        Relay_OFF();
 8000d4e:	f000 fcbf 	bl	80016d0 <Relay_OFF>
    }
}
 8000d52:	bf00      	nop
 8000d54:	bd80      	pop	{r7, pc}
 8000d56:	bf00      	nop
 8000d58:	40013c00 	.word	0x40013c00
 8000d5c:	20000004 	.word	0x20000004

08000d60 <Buzzer_Init>:
#include "stm32f4xx.h"
#include "buzzer.h"

void Buzzer_Init(void) {
 8000d60:	b580      	push	{r7, lr}
 8000d62:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= (1 << 1); // Enable clock cho GPIOB
 8000d64:	4b13      	ldr	r3, [pc, #76]	@ (8000db4 <Buzzer_Init+0x54>)
 8000d66:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d68:	4a12      	ldr	r2, [pc, #72]	@ (8000db4 <Buzzer_Init+0x54>)
 8000d6a:	f043 0302 	orr.w	r3, r3, #2
 8000d6e:	6313      	str	r3, [r2, #48]	@ 0x30

    // Set mode = output
    GPIOB->MODER &= ~(3 << (BUZZER_PIN * 2));
 8000d70:	4b11      	ldr	r3, [pc, #68]	@ (8000db8 <Buzzer_Init+0x58>)
 8000d72:	681b      	ldr	r3, [r3, #0]
 8000d74:	4a10      	ldr	r2, [pc, #64]	@ (8000db8 <Buzzer_Init+0x58>)
 8000d76:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8000d7a:	6013      	str	r3, [r2, #0]
    GPIOB->MODER |=  (1 << (BUZZER_PIN * 2));
 8000d7c:	4b0e      	ldr	r3, [pc, #56]	@ (8000db8 <Buzzer_Init+0x58>)
 8000d7e:	681b      	ldr	r3, [r3, #0]
 8000d80:	4a0d      	ldr	r2, [pc, #52]	@ (8000db8 <Buzzer_Init+0x58>)
 8000d82:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000d86:	6013      	str	r3, [r2, #0]

    // Push-pull
    GPIOB->OTYPER &= ~(1 << BUZZER_PIN);
 8000d88:	4b0b      	ldr	r3, [pc, #44]	@ (8000db8 <Buzzer_Init+0x58>)
 8000d8a:	685b      	ldr	r3, [r3, #4]
 8000d8c:	4a0a      	ldr	r2, [pc, #40]	@ (8000db8 <Buzzer_Init+0x58>)
 8000d8e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000d92:	6053      	str	r3, [r2, #4]

    // High speed
    GPIOB->OSPEEDR |= (3 << (BUZZER_PIN * 2));
 8000d94:	4b08      	ldr	r3, [pc, #32]	@ (8000db8 <Buzzer_Init+0x58>)
 8000d96:	689b      	ldr	r3, [r3, #8]
 8000d98:	4a07      	ldr	r2, [pc, #28]	@ (8000db8 <Buzzer_Init+0x58>)
 8000d9a:	f443 5340 	orr.w	r3, r3, #12288	@ 0x3000
 8000d9e:	6093      	str	r3, [r2, #8]

    // No pull
    GPIOB->PUPDR &= ~(3 << (BUZZER_PIN * 2));
 8000da0:	4b05      	ldr	r3, [pc, #20]	@ (8000db8 <Buzzer_Init+0x58>)
 8000da2:	68db      	ldr	r3, [r3, #12]
 8000da4:	4a04      	ldr	r2, [pc, #16]	@ (8000db8 <Buzzer_Init+0x58>)
 8000da6:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8000daa:	60d3      	str	r3, [r2, #12]

    // Tắt mặc định
    Buzzer_OFF();
 8000dac:	f000 f816 	bl	8000ddc <Buzzer_OFF>
}
 8000db0:	bf00      	nop
 8000db2:	bd80      	pop	{r7, pc}
 8000db4:	40023800 	.word	0x40023800
 8000db8:	40020400 	.word	0x40020400

08000dbc <Buzzer_ON>:

void Buzzer_ON (void){
 8000dbc:	b480      	push	{r7}
 8000dbe:	af00      	add	r7, sp, #0
	GPIOB->ODR |= (1 << BUZZER_PIN);
 8000dc0:	4b05      	ldr	r3, [pc, #20]	@ (8000dd8 <Buzzer_ON+0x1c>)
 8000dc2:	695b      	ldr	r3, [r3, #20]
 8000dc4:	4a04      	ldr	r2, [pc, #16]	@ (8000dd8 <Buzzer_ON+0x1c>)
 8000dc6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000dca:	6153      	str	r3, [r2, #20]
}
 8000dcc:	bf00      	nop
 8000dce:	46bd      	mov	sp, r7
 8000dd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dd4:	4770      	bx	lr
 8000dd6:	bf00      	nop
 8000dd8:	40020400 	.word	0x40020400

08000ddc <Buzzer_OFF>:

void Buzzer_OFF (void){
 8000ddc:	b480      	push	{r7}
 8000dde:	af00      	add	r7, sp, #0
	GPIOB->ODR &= ~(1 << BUZZER_PIN);
 8000de0:	4b05      	ldr	r3, [pc, #20]	@ (8000df8 <Buzzer_OFF+0x1c>)
 8000de2:	695b      	ldr	r3, [r3, #20]
 8000de4:	4a04      	ldr	r2, [pc, #16]	@ (8000df8 <Buzzer_OFF+0x1c>)
 8000de6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000dea:	6153      	str	r3, [r2, #20]
}
 8000dec:	bf00      	nop
 8000dee:	46bd      	mov	sp, r7
 8000df0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000df4:	4770      	bx	lr
 8000df6:	bf00      	nop
 8000df8:	40020400 	.word	0x40020400

08000dfc <I2C1_Init>:
#define RW               0x00
#define RS               0x01

extern void delay_ms(uint32_t ms); // Hàm delay riêng

void I2C1_Init(void) {
 8000dfc:	b480      	push	{r7}
 8000dfe:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 8000e00:	4b24      	ldr	r3, [pc, #144]	@ (8000e94 <I2C1_Init+0x98>)
 8000e02:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e04:	4a23      	ldr	r2, [pc, #140]	@ (8000e94 <I2C1_Init+0x98>)
 8000e06:	f043 0302 	orr.w	r3, r3, #2
 8000e0a:	6313      	str	r3, [r2, #48]	@ 0x30
    RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 8000e0c:	4b21      	ldr	r3, [pc, #132]	@ (8000e94 <I2C1_Init+0x98>)
 8000e0e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000e10:	4a20      	ldr	r2, [pc, #128]	@ (8000e94 <I2C1_Init+0x98>)
 8000e12:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000e16:	6413      	str	r3, [r2, #64]	@ 0x40

    // PB8 -> SCL, PB9 -> SDA (AF4)
    GPIOB->MODER &= ~((3 << (8*2)) | (3 << (9*2)));
 8000e18:	4b1f      	ldr	r3, [pc, #124]	@ (8000e98 <I2C1_Init+0x9c>)
 8000e1a:	681b      	ldr	r3, [r3, #0]
 8000e1c:	4a1e      	ldr	r2, [pc, #120]	@ (8000e98 <I2C1_Init+0x9c>)
 8000e1e:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
 8000e22:	6013      	str	r3, [r2, #0]
    GPIOB->MODER |=  (2 << (8*2)) | (2 << (9*2));  // AF
 8000e24:	4b1c      	ldr	r3, [pc, #112]	@ (8000e98 <I2C1_Init+0x9c>)
 8000e26:	681b      	ldr	r3, [r3, #0]
 8000e28:	4a1b      	ldr	r2, [pc, #108]	@ (8000e98 <I2C1_Init+0x9c>)
 8000e2a:	f443 2320 	orr.w	r3, r3, #655360	@ 0xa0000
 8000e2e:	6013      	str	r3, [r2, #0]
    GPIOB->AFR[1] |= (4 << ((8-8)*4)) | (4 << ((9-8)*4)); // AF4
 8000e30:	4b19      	ldr	r3, [pc, #100]	@ (8000e98 <I2C1_Init+0x9c>)
 8000e32:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000e34:	4a18      	ldr	r2, [pc, #96]	@ (8000e98 <I2C1_Init+0x9c>)
 8000e36:	f043 0344 	orr.w	r3, r3, #68	@ 0x44
 8000e3a:	6253      	str	r3, [r2, #36]	@ 0x24
    GPIOB->OTYPER |= (1 << 8) | (1 << 9); // Open-drain
 8000e3c:	4b16      	ldr	r3, [pc, #88]	@ (8000e98 <I2C1_Init+0x9c>)
 8000e3e:	685b      	ldr	r3, [r3, #4]
 8000e40:	4a15      	ldr	r2, [pc, #84]	@ (8000e98 <I2C1_Init+0x9c>)
 8000e42:	f443 7340 	orr.w	r3, r3, #768	@ 0x300
 8000e46:	6053      	str	r3, [r2, #4]
    GPIOB->OSPEEDR |= (3 << (8*2)) | (3 << (9*2)); // High speed
 8000e48:	4b13      	ldr	r3, [pc, #76]	@ (8000e98 <I2C1_Init+0x9c>)
 8000e4a:	689b      	ldr	r3, [r3, #8]
 8000e4c:	4a12      	ldr	r2, [pc, #72]	@ (8000e98 <I2C1_Init+0x9c>)
 8000e4e:	f443 2370 	orr.w	r3, r3, #983040	@ 0xf0000
 8000e52:	6093      	str	r3, [r2, #8]
    GPIOB->PUPDR |= (1 << (8*2)) | (1 << (9*2)); // Pull-up
 8000e54:	4b10      	ldr	r3, [pc, #64]	@ (8000e98 <I2C1_Init+0x9c>)
 8000e56:	68db      	ldr	r3, [r3, #12]
 8000e58:	4a0f      	ldr	r2, [pc, #60]	@ (8000e98 <I2C1_Init+0x9c>)
 8000e5a:	f443 23a0 	orr.w	r3, r3, #327680	@ 0x50000
 8000e5e:	60d3      	str	r3, [r2, #12]

    I2C1->CR1 &= ~I2C_CR1_PE;
 8000e60:	4b0e      	ldr	r3, [pc, #56]	@ (8000e9c <I2C1_Init+0xa0>)
 8000e62:	681b      	ldr	r3, [r3, #0]
 8000e64:	4a0d      	ldr	r2, [pc, #52]	@ (8000e9c <I2C1_Init+0xa0>)
 8000e66:	f023 0301 	bic.w	r3, r3, #1
 8000e6a:	6013      	str	r3, [r2, #0]
    I2C1->CR2 = 16;
 8000e6c:	4b0b      	ldr	r3, [pc, #44]	@ (8000e9c <I2C1_Init+0xa0>)
 8000e6e:	2210      	movs	r2, #16
 8000e70:	605a      	str	r2, [r3, #4]
    I2C1->CCR = 80;
 8000e72:	4b0a      	ldr	r3, [pc, #40]	@ (8000e9c <I2C1_Init+0xa0>)
 8000e74:	2250      	movs	r2, #80	@ 0x50
 8000e76:	61da      	str	r2, [r3, #28]
    I2C1->TRISE = 17;
 8000e78:	4b08      	ldr	r3, [pc, #32]	@ (8000e9c <I2C1_Init+0xa0>)
 8000e7a:	2211      	movs	r2, #17
 8000e7c:	621a      	str	r2, [r3, #32]
    I2C1->CR1 |= I2C_CR1_PE;
 8000e7e:	4b07      	ldr	r3, [pc, #28]	@ (8000e9c <I2C1_Init+0xa0>)
 8000e80:	681b      	ldr	r3, [r3, #0]
 8000e82:	4a06      	ldr	r2, [pc, #24]	@ (8000e9c <I2C1_Init+0xa0>)
 8000e84:	f043 0301 	orr.w	r3, r3, #1
 8000e88:	6013      	str	r3, [r2, #0]
}
 8000e8a:	bf00      	nop
 8000e8c:	46bd      	mov	sp, r7
 8000e8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e92:	4770      	bx	lr
 8000e94:	40023800 	.word	0x40023800
 8000e98:	40020400 	.word	0x40020400
 8000e9c:	40005400 	.word	0x40005400

08000ea0 <I2C1_Write>:
// --- I2C send byte ---
void I2C1_Write(uint8_t addr, uint8_t *data, uint8_t len) {
 8000ea0:	b480      	push	{r7}
 8000ea2:	b085      	sub	sp, #20
 8000ea4:	af00      	add	r7, sp, #0
 8000ea6:	4603      	mov	r3, r0
 8000ea8:	6039      	str	r1, [r7, #0]
 8000eaa:	71fb      	strb	r3, [r7, #7]
 8000eac:	4613      	mov	r3, r2
 8000eae:	71bb      	strb	r3, [r7, #6]
    while(I2C1->SR2 & I2C_SR2_BUSY);
 8000eb0:	bf00      	nop
 8000eb2:	4b26      	ldr	r3, [pc, #152]	@ (8000f4c <I2C1_Write+0xac>)
 8000eb4:	699b      	ldr	r3, [r3, #24]
 8000eb6:	f003 0302 	and.w	r3, r3, #2
 8000eba:	2b00      	cmp	r3, #0
 8000ebc:	d1f9      	bne.n	8000eb2 <I2C1_Write+0x12>
    I2C1->CR1 |= I2C_CR1_START;
 8000ebe:	4b23      	ldr	r3, [pc, #140]	@ (8000f4c <I2C1_Write+0xac>)
 8000ec0:	681b      	ldr	r3, [r3, #0]
 8000ec2:	4a22      	ldr	r2, [pc, #136]	@ (8000f4c <I2C1_Write+0xac>)
 8000ec4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000ec8:	6013      	str	r3, [r2, #0]
    while(!(I2C1->SR1 & I2C_SR1_SB));
 8000eca:	bf00      	nop
 8000ecc:	4b1f      	ldr	r3, [pc, #124]	@ (8000f4c <I2C1_Write+0xac>)
 8000ece:	695b      	ldr	r3, [r3, #20]
 8000ed0:	f003 0301 	and.w	r3, r3, #1
 8000ed4:	2b00      	cmp	r3, #0
 8000ed6:	d0f9      	beq.n	8000ecc <I2C1_Write+0x2c>
    (void)I2C1->SR1;
 8000ed8:	4b1c      	ldr	r3, [pc, #112]	@ (8000f4c <I2C1_Write+0xac>)
 8000eda:	695b      	ldr	r3, [r3, #20]
    I2C1->DR = addr << 1;
 8000edc:	79fb      	ldrb	r3, [r7, #7]
 8000ede:	4a1b      	ldr	r2, [pc, #108]	@ (8000f4c <I2C1_Write+0xac>)
 8000ee0:	005b      	lsls	r3, r3, #1
 8000ee2:	6113      	str	r3, [r2, #16]
    while(!(I2C1->SR1 & I2C_SR1_ADDR));
 8000ee4:	bf00      	nop
 8000ee6:	4b19      	ldr	r3, [pc, #100]	@ (8000f4c <I2C1_Write+0xac>)
 8000ee8:	695b      	ldr	r3, [r3, #20]
 8000eea:	f003 0302 	and.w	r3, r3, #2
 8000eee:	2b00      	cmp	r3, #0
 8000ef0:	d0f9      	beq.n	8000ee6 <I2C1_Write+0x46>
    (void)I2C1->SR2;
 8000ef2:	4b16      	ldr	r3, [pc, #88]	@ (8000f4c <I2C1_Write+0xac>)
 8000ef4:	699b      	ldr	r3, [r3, #24]
    for(uint8_t i = 0; i < len; i++) {
 8000ef6:	2300      	movs	r3, #0
 8000ef8:	73fb      	strb	r3, [r7, #15]
 8000efa:	e00f      	b.n	8000f1c <I2C1_Write+0x7c>
        while(!(I2C1->SR1 & I2C_SR1_TXE));
 8000efc:	bf00      	nop
 8000efe:	4b13      	ldr	r3, [pc, #76]	@ (8000f4c <I2C1_Write+0xac>)
 8000f00:	695b      	ldr	r3, [r3, #20]
 8000f02:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000f06:	2b00      	cmp	r3, #0
 8000f08:	d0f9      	beq.n	8000efe <I2C1_Write+0x5e>
        I2C1->DR = data[i];
 8000f0a:	7bfb      	ldrb	r3, [r7, #15]
 8000f0c:	683a      	ldr	r2, [r7, #0]
 8000f0e:	4413      	add	r3, r2
 8000f10:	781a      	ldrb	r2, [r3, #0]
 8000f12:	4b0e      	ldr	r3, [pc, #56]	@ (8000f4c <I2C1_Write+0xac>)
 8000f14:	611a      	str	r2, [r3, #16]
    for(uint8_t i = 0; i < len; i++) {
 8000f16:	7bfb      	ldrb	r3, [r7, #15]
 8000f18:	3301      	adds	r3, #1
 8000f1a:	73fb      	strb	r3, [r7, #15]
 8000f1c:	7bfa      	ldrb	r2, [r7, #15]
 8000f1e:	79bb      	ldrb	r3, [r7, #6]
 8000f20:	429a      	cmp	r2, r3
 8000f22:	d3eb      	bcc.n	8000efc <I2C1_Write+0x5c>
    }
    while(!(I2C1->SR1 & I2C_SR1_BTF));
 8000f24:	bf00      	nop
 8000f26:	4b09      	ldr	r3, [pc, #36]	@ (8000f4c <I2C1_Write+0xac>)
 8000f28:	695b      	ldr	r3, [r3, #20]
 8000f2a:	f003 0304 	and.w	r3, r3, #4
 8000f2e:	2b00      	cmp	r3, #0
 8000f30:	d0f9      	beq.n	8000f26 <I2C1_Write+0x86>
    I2C1->CR1 |= I2C_CR1_STOP;
 8000f32:	4b06      	ldr	r3, [pc, #24]	@ (8000f4c <I2C1_Write+0xac>)
 8000f34:	681b      	ldr	r3, [r3, #0]
 8000f36:	4a05      	ldr	r2, [pc, #20]	@ (8000f4c <I2C1_Write+0xac>)
 8000f38:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000f3c:	6013      	str	r3, [r2, #0]
}
 8000f3e:	bf00      	nop
 8000f40:	3714      	adds	r7, #20
 8000f42:	46bd      	mov	sp, r7
 8000f44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f48:	4770      	bx	lr
 8000f4a:	bf00      	nop
 8000f4c:	40005400 	.word	0x40005400

08000f50 <LCD_SendNibble>:

// --- LCD lower-level functions ---
void LCD_SendNibble(uint8_t nibble, uint8_t control) {
 8000f50:	b580      	push	{r7, lr}
 8000f52:	b084      	sub	sp, #16
 8000f54:	af00      	add	r7, sp, #0
 8000f56:	4603      	mov	r3, r0
 8000f58:	460a      	mov	r2, r1
 8000f5a:	71fb      	strb	r3, [r7, #7]
 8000f5c:	4613      	mov	r3, r2
 8000f5e:	71bb      	strb	r3, [r7, #6]
    uint8_t data[2];
    data[0] = nibble | LCD_BACKLIGHT | control | ENABLE;
 8000f60:	79fa      	ldrb	r2, [r7, #7]
 8000f62:	79bb      	ldrb	r3, [r7, #6]
 8000f64:	4313      	orrs	r3, r2
 8000f66:	b2db      	uxtb	r3, r3
 8000f68:	f043 030c 	orr.w	r3, r3, #12
 8000f6c:	b2db      	uxtb	r3, r3
 8000f6e:	733b      	strb	r3, [r7, #12]
    data[1] = nibble | LCD_BACKLIGHT | control;
 8000f70:	79fa      	ldrb	r2, [r7, #7]
 8000f72:	79bb      	ldrb	r3, [r7, #6]
 8000f74:	4313      	orrs	r3, r2
 8000f76:	b2db      	uxtb	r3, r3
 8000f78:	f043 0308 	orr.w	r3, r3, #8
 8000f7c:	b2db      	uxtb	r3, r3
 8000f7e:	737b      	strb	r3, [r7, #13]
    I2C1_Write(LCD_ADDR, data, 2);
 8000f80:	f107 030c 	add.w	r3, r7, #12
 8000f84:	2202      	movs	r2, #2
 8000f86:	4619      	mov	r1, r3
 8000f88:	2027      	movs	r0, #39	@ 0x27
 8000f8a:	f7ff ff89 	bl	8000ea0 <I2C1_Write>
}
 8000f8e:	bf00      	nop
 8000f90:	3710      	adds	r7, #16
 8000f92:	46bd      	mov	sp, r7
 8000f94:	bd80      	pop	{r7, pc}

08000f96 <LCD_SendByte>:

void LCD_SendByte(uint8_t byte, uint8_t mode) {
 8000f96:	b580      	push	{r7, lr}
 8000f98:	b082      	sub	sp, #8
 8000f9a:	af00      	add	r7, sp, #0
 8000f9c:	4603      	mov	r3, r0
 8000f9e:	460a      	mov	r2, r1
 8000fa0:	71fb      	strb	r3, [r7, #7]
 8000fa2:	4613      	mov	r3, r2
 8000fa4:	71bb      	strb	r3, [r7, #6]
    LCD_SendNibble(byte & 0xF0, mode);
 8000fa6:	79fb      	ldrb	r3, [r7, #7]
 8000fa8:	f023 030f 	bic.w	r3, r3, #15
 8000fac:	b2db      	uxtb	r3, r3
 8000fae:	79ba      	ldrb	r2, [r7, #6]
 8000fb0:	4611      	mov	r1, r2
 8000fb2:	4618      	mov	r0, r3
 8000fb4:	f7ff ffcc 	bl	8000f50 <LCD_SendNibble>
    LCD_SendNibble((byte << 4) & 0xF0, mode);
 8000fb8:	79fb      	ldrb	r3, [r7, #7]
 8000fba:	011b      	lsls	r3, r3, #4
 8000fbc:	b2db      	uxtb	r3, r3
 8000fbe:	79ba      	ldrb	r2, [r7, #6]
 8000fc0:	4611      	mov	r1, r2
 8000fc2:	4618      	mov	r0, r3
 8000fc4:	f7ff ffc4 	bl	8000f50 <LCD_SendNibble>
}
 8000fc8:	bf00      	nop
 8000fca:	3708      	adds	r7, #8
 8000fcc:	46bd      	mov	sp, r7
 8000fce:	bd80      	pop	{r7, pc}

08000fd0 <LCD_Command>:

void LCD_Command(uint8_t cmd) {
 8000fd0:	b580      	push	{r7, lr}
 8000fd2:	b082      	sub	sp, #8
 8000fd4:	af00      	add	r7, sp, #0
 8000fd6:	4603      	mov	r3, r0
 8000fd8:	71fb      	strb	r3, [r7, #7]
    LCD_SendByte(cmd, 0x00);
 8000fda:	79fb      	ldrb	r3, [r7, #7]
 8000fdc:	2100      	movs	r1, #0
 8000fde:	4618      	mov	r0, r3
 8000fe0:	f7ff ffd9 	bl	8000f96 <LCD_SendByte>
    delay_ms(2);
 8000fe4:	2002      	movs	r0, #2
 8000fe6:	f000 fcbf 	bl	8001968 <delay_ms>
}
 8000fea:	bf00      	nop
 8000fec:	3708      	adds	r7, #8
 8000fee:	46bd      	mov	sp, r7
 8000ff0:	bd80      	pop	{r7, pc}

08000ff2 <LCD_Data>:

void LCD_Data(uint8_t data) {
 8000ff2:	b580      	push	{r7, lr}
 8000ff4:	b082      	sub	sp, #8
 8000ff6:	af00      	add	r7, sp, #0
 8000ff8:	4603      	mov	r3, r0
 8000ffa:	71fb      	strb	r3, [r7, #7]
    LCD_SendByte(data, RS);
 8000ffc:	79fb      	ldrb	r3, [r7, #7]
 8000ffe:	2101      	movs	r1, #1
 8001000:	4618      	mov	r0, r3
 8001002:	f7ff ffc8 	bl	8000f96 <LCD_SendByte>
}
 8001006:	bf00      	nop
 8001008:	3708      	adds	r7, #8
 800100a:	46bd      	mov	sp, r7
 800100c:	bd80      	pop	{r7, pc}

0800100e <LCD_Init>:

void LCD_Init(void) {
 800100e:	b580      	push	{r7, lr}
 8001010:	af00      	add	r7, sp, #0
    delay_ms(50);
 8001012:	2032      	movs	r0, #50	@ 0x32
 8001014:	f000 fca8 	bl	8001968 <delay_ms>
    LCD_SendNibble(0x30, 0);
 8001018:	2100      	movs	r1, #0
 800101a:	2030      	movs	r0, #48	@ 0x30
 800101c:	f7ff ff98 	bl	8000f50 <LCD_SendNibble>
    delay_ms(5);
 8001020:	2005      	movs	r0, #5
 8001022:	f000 fca1 	bl	8001968 <delay_ms>
    LCD_SendNibble(0x30, 0);
 8001026:	2100      	movs	r1, #0
 8001028:	2030      	movs	r0, #48	@ 0x30
 800102a:	f7ff ff91 	bl	8000f50 <LCD_SendNibble>
    delay_ms(1);
 800102e:	2001      	movs	r0, #1
 8001030:	f000 fc9a 	bl	8001968 <delay_ms>
    LCD_SendNibble(0x30, 0);
 8001034:	2100      	movs	r1, #0
 8001036:	2030      	movs	r0, #48	@ 0x30
 8001038:	f7ff ff8a 	bl	8000f50 <LCD_SendNibble>
    LCD_SendNibble(0x20, 0); // 4-bit mode
 800103c:	2100      	movs	r1, #0
 800103e:	2020      	movs	r0, #32
 8001040:	f7ff ff86 	bl	8000f50 <LCD_SendNibble>

    LCD_Command(0x28); // 4-bit, 2 line
 8001044:	2028      	movs	r0, #40	@ 0x28
 8001046:	f7ff ffc3 	bl	8000fd0 <LCD_Command>
    LCD_Command(0x0C); // Display ON
 800104a:	200c      	movs	r0, #12
 800104c:	f7ff ffc0 	bl	8000fd0 <LCD_Command>
    LCD_Command(0x06); // Entry mode
 8001050:	2006      	movs	r0, #6
 8001052:	f7ff ffbd 	bl	8000fd0 <LCD_Command>
    LCD_Command(0x01); // Clear
 8001056:	2001      	movs	r0, #1
 8001058:	f7ff ffba 	bl	8000fd0 <LCD_Command>
}
 800105c:	bf00      	nop
 800105e:	bd80      	pop	{r7, pc}

08001060 <LCD_SetCursor>:

void LCD_SetCursor(uint8_t row, uint8_t col) {
 8001060:	b580      	push	{r7, lr}
 8001062:	b084      	sub	sp, #16
 8001064:	af00      	add	r7, sp, #0
 8001066:	4603      	mov	r3, r0
 8001068:	460a      	mov	r2, r1
 800106a:	71fb      	strb	r3, [r7, #7]
 800106c:	4613      	mov	r3, r2
 800106e:	71bb      	strb	r3, [r7, #6]
    uint8_t addr = (row == 0) ? 0x00 : 0x40;
 8001070:	79fb      	ldrb	r3, [r7, #7]
 8001072:	2b00      	cmp	r3, #0
 8001074:	d101      	bne.n	800107a <LCD_SetCursor+0x1a>
 8001076:	2300      	movs	r3, #0
 8001078:	e000      	b.n	800107c <LCD_SetCursor+0x1c>
 800107a:	2340      	movs	r3, #64	@ 0x40
 800107c:	73fb      	strb	r3, [r7, #15]
    LCD_Command(0x80 | (addr + col));
 800107e:	7bfa      	ldrb	r2, [r7, #15]
 8001080:	79bb      	ldrb	r3, [r7, #6]
 8001082:	4413      	add	r3, r2
 8001084:	b2db      	uxtb	r3, r3
 8001086:	b25b      	sxtb	r3, r3
 8001088:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800108c:	b25b      	sxtb	r3, r3
 800108e:	b2db      	uxtb	r3, r3
 8001090:	4618      	mov	r0, r3
 8001092:	f7ff ff9d 	bl	8000fd0 <LCD_Command>
}
 8001096:	bf00      	nop
 8001098:	3710      	adds	r7, #16
 800109a:	46bd      	mov	sp, r7
 800109c:	bd80      	pop	{r7, pc}

0800109e <LCD_Print>:

void LCD_Print(char *str) {
 800109e:	b580      	push	{r7, lr}
 80010a0:	b082      	sub	sp, #8
 80010a2:	af00      	add	r7, sp, #0
 80010a4:	6078      	str	r0, [r7, #4]
    while(*str) LCD_Data(*str++);
 80010a6:	e006      	b.n	80010b6 <LCD_Print+0x18>
 80010a8:	687b      	ldr	r3, [r7, #4]
 80010aa:	1c5a      	adds	r2, r3, #1
 80010ac:	607a      	str	r2, [r7, #4]
 80010ae:	781b      	ldrb	r3, [r3, #0]
 80010b0:	4618      	mov	r0, r3
 80010b2:	f7ff ff9e 	bl	8000ff2 <LCD_Data>
 80010b6:	687b      	ldr	r3, [r7, #4]
 80010b8:	781b      	ldrb	r3, [r3, #0]
 80010ba:	2b00      	cmp	r3, #0
 80010bc:	d1f4      	bne.n	80010a8 <LCD_Print+0xa>
}
 80010be:	bf00      	nop
 80010c0:	bf00      	nop
 80010c2:	3708      	adds	r7, #8
 80010c4:	46bd      	mov	sp, r7
 80010c6:	bd80      	pop	{r7, pc}

080010c8 <LED_Init>:
#include "util.h"

extern uint8_t system_state;
extern uint8_t warning_level;

void LED_Init(void) {
 80010c8:	b480      	push	{r7}
 80010ca:	b083      	sub	sp, #12
 80010cc:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= (1 << 1);  // Enable clock cho GPIOB
 80010ce:	4b16      	ldr	r3, [pc, #88]	@ (8001128 <LED_Init+0x60>)
 80010d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010d2:	4a15      	ldr	r2, [pc, #84]	@ (8001128 <LED_Init+0x60>)
 80010d4:	f043 0302 	orr.w	r3, r3, #2
 80010d8:	6313      	str	r3, [r2, #48]	@ 0x30

    for (int i = LED_BLUE_PIN; i <= LED_GREEN_PIN; i++) {
 80010da:	2300      	movs	r3, #0
 80010dc:	607b      	str	r3, [r7, #4]
 80010de:	e019      	b.n	8001114 <LED_Init+0x4c>
    	GPIOB->MODER &= ~(3 << (i * 2));  // clear 2 bit
 80010e0:	4b12      	ldr	r3, [pc, #72]	@ (800112c <LED_Init+0x64>)
 80010e2:	681b      	ldr	r3, [r3, #0]
 80010e4:	687a      	ldr	r2, [r7, #4]
 80010e6:	0052      	lsls	r2, r2, #1
 80010e8:	2103      	movs	r1, #3
 80010ea:	fa01 f202 	lsl.w	r2, r1, r2
 80010ee:	43d2      	mvns	r2, r2
 80010f0:	4611      	mov	r1, r2
 80010f2:	4a0e      	ldr	r2, [pc, #56]	@ (800112c <LED_Init+0x64>)
 80010f4:	400b      	ands	r3, r1
 80010f6:	6013      	str	r3, [r2, #0]
		GPIOB->MODER |= (1 << (i * 2));
 80010f8:	4b0c      	ldr	r3, [pc, #48]	@ (800112c <LED_Init+0x64>)
 80010fa:	681b      	ldr	r3, [r3, #0]
 80010fc:	687a      	ldr	r2, [r7, #4]
 80010fe:	0052      	lsls	r2, r2, #1
 8001100:	2101      	movs	r1, #1
 8001102:	fa01 f202 	lsl.w	r2, r1, r2
 8001106:	4611      	mov	r1, r2
 8001108:	4a08      	ldr	r2, [pc, #32]	@ (800112c <LED_Init+0x64>)
 800110a:	430b      	orrs	r3, r1
 800110c:	6013      	str	r3, [r2, #0]
    for (int i = LED_BLUE_PIN; i <= LED_GREEN_PIN; i++) {
 800110e:	687b      	ldr	r3, [r7, #4]
 8001110:	3301      	adds	r3, #1
 8001112:	607b      	str	r3, [r7, #4]
 8001114:	687b      	ldr	r3, [r7, #4]
 8001116:	2b03      	cmp	r3, #3
 8001118:	dde2      	ble.n	80010e0 <LED_Init+0x18>
	}
}
 800111a:	bf00      	nop
 800111c:	bf00      	nop
 800111e:	370c      	adds	r7, #12
 8001120:	46bd      	mov	sp, r7
 8001122:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001126:	4770      	bx	lr
 8001128:	40023800 	.word	0x40023800
 800112c:	40020400 	.word	0x40020400

08001130 <blink_red_led>:

void blink_red_led(float freq_hz, int duration_ms) {
 8001130:	b580      	push	{r7, lr}
 8001132:	b086      	sub	sp, #24
 8001134:	af00      	add	r7, sp, #0
 8001136:	ed87 0a01 	vstr	s0, [r7, #4]
 800113a:	6038      	str	r0, [r7, #0]

    int total_blinks = (int)(freq_hz * duration_ms / 1000.0f);
 800113c:	683b      	ldr	r3, [r7, #0]
 800113e:	ee07 3a90 	vmov	s15, r3
 8001142:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001146:	edd7 7a01 	vldr	s15, [r7, #4]
 800114a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800114e:	eddf 6a21 	vldr	s13, [pc, #132]	@ 80011d4 <blink_red_led+0xa4>
 8001152:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001156:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800115a:	ee17 3a90 	vmov	r3, s15
 800115e:	613b      	str	r3, [r7, #16]
    int delay_half = (int)(500.0f / freq_hz); // ms mỗi nửa chu kỳ
 8001160:	eddf 6a1d 	vldr	s13, [pc, #116]	@ 80011d8 <blink_red_led+0xa8>
 8001164:	ed97 7a01 	vldr	s14, [r7, #4]
 8001168:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800116c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001170:	ee17 3a90 	vmov	r3, s15
 8001174:	60fb      	str	r3, [r7, #12]

    // Tắt các LED khác
    GPIOA->ODR &= ~((1 << 6) | (1 << 7) | (1 << 8));
 8001176:	4b19      	ldr	r3, [pc, #100]	@ (80011dc <blink_red_led+0xac>)
 8001178:	695b      	ldr	r3, [r3, #20]
 800117a:	4a18      	ldr	r2, [pc, #96]	@ (80011dc <blink_red_led+0xac>)
 800117c:	f423 73e0 	bic.w	r3, r3, #448	@ 0x1c0
 8001180:	6153      	str	r3, [r2, #20]

    for (int i = 0; i < total_blinks; i++) {
 8001182:	2300      	movs	r3, #0
 8001184:	617b      	str	r3, [r7, #20]
 8001186:	e016      	b.n	80011b6 <blink_red_led+0x86>
        GPIOB->ODR ^= (1 << 2); // Đảo trạng thái led đỏ
 8001188:	4b15      	ldr	r3, [pc, #84]	@ (80011e0 <blink_red_led+0xb0>)
 800118a:	695b      	ldr	r3, [r3, #20]
 800118c:	4a14      	ldr	r2, [pc, #80]	@ (80011e0 <blink_red_led+0xb0>)
 800118e:	f083 0304 	eor.w	r3, r3, #4
 8001192:	6153      	str	r3, [r2, #20]
        delay_ms(delay_half);
 8001194:	68fb      	ldr	r3, [r7, #12]
 8001196:	4618      	mov	r0, r3
 8001198:	f000 fbe6 	bl	8001968 <delay_ms>
        GPIOB->ODR ^= (1 << 2);
 800119c:	4b10      	ldr	r3, [pc, #64]	@ (80011e0 <blink_red_led+0xb0>)
 800119e:	695b      	ldr	r3, [r3, #20]
 80011a0:	4a0f      	ldr	r2, [pc, #60]	@ (80011e0 <blink_red_led+0xb0>)
 80011a2:	f083 0304 	eor.w	r3, r3, #4
 80011a6:	6153      	str	r3, [r2, #20]
        delay_ms(delay_half);
 80011a8:	68fb      	ldr	r3, [r7, #12]
 80011aa:	4618      	mov	r0, r3
 80011ac:	f000 fbdc 	bl	8001968 <delay_ms>
    for (int i = 0; i < total_blinks; i++) {
 80011b0:	697b      	ldr	r3, [r7, #20]
 80011b2:	3301      	adds	r3, #1
 80011b4:	617b      	str	r3, [r7, #20]
 80011b6:	697a      	ldr	r2, [r7, #20]
 80011b8:	693b      	ldr	r3, [r7, #16]
 80011ba:	429a      	cmp	r2, r3
 80011bc:	dbe4      	blt.n	8001188 <blink_red_led+0x58>
    }
    GPIOB->ODR &= ~(1 << 2); // Đảm bảo tắt led đỏ khi xong
 80011be:	4b08      	ldr	r3, [pc, #32]	@ (80011e0 <blink_red_led+0xb0>)
 80011c0:	695b      	ldr	r3, [r3, #20]
 80011c2:	4a07      	ldr	r2, [pc, #28]	@ (80011e0 <blink_red_led+0xb0>)
 80011c4:	f023 0304 	bic.w	r3, r3, #4
 80011c8:	6153      	str	r3, [r2, #20]
}
 80011ca:	bf00      	nop
 80011cc:	3718      	adds	r7, #24
 80011ce:	46bd      	mov	sp, r7
 80011d0:	bd80      	pop	{r7, pc}
 80011d2:	bf00      	nop
 80011d4:	447a0000 	.word	0x447a0000
 80011d8:	43fa0000 	.word	0x43fa0000
 80011dc:	40020000 	.word	0x40020000
 80011e0:	40020400 	.word	0x40020400

080011e4 <get_freq>:

// Hàm tính tần số nháy LED đỏ dựa vào ppm khí gas so với ngưỡng nguy hiểm
float get_freq(float ppm, float ppm_danger) {
 80011e4:	b480      	push	{r7}
 80011e6:	b085      	sub	sp, #20
 80011e8:	af00      	add	r7, sp, #0
 80011ea:	ed87 0a01 	vstr	s0, [r7, #4]
 80011ee:	edc7 0a00 	vstr	s1, [r7]
    float k = (ppm - ppm_danger) / (ppm_danger);  // 0 ~ tăng dần
 80011f2:	ed97 7a01 	vldr	s14, [r7, #4]
 80011f6:	edd7 7a00 	vldr	s15, [r7]
 80011fa:	ee77 6a67 	vsub.f32	s13, s14, s15
 80011fe:	ed97 7a00 	vldr	s14, [r7]
 8001202:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001206:	edc7 7a02 	vstr	s15, [r7, #8]
    float freq = 2.0f + k * 8.0f;                 // 2Hz đến 10Hz
 800120a:	edd7 7a02 	vldr	s15, [r7, #8]
 800120e:	eeb2 7a00 	vmov.f32	s14, #32	@ 0x41000000  8.0
 8001212:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001216:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 800121a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800121e:	edc7 7a03 	vstr	s15, [r7, #12]
    if (freq > 10.0f) freq = 10.0f;
 8001222:	edd7 7a03 	vldr	s15, [r7, #12]
 8001226:	eeb2 7a04 	vmov.f32	s14, #36	@ 0x41200000  10.0
 800122a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800122e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001232:	dd01      	ble.n	8001238 <get_freq+0x54>
 8001234:	4b0b      	ldr	r3, [pc, #44]	@ (8001264 <get_freq+0x80>)
 8001236:	60fb      	str	r3, [r7, #12]
    if (freq < 2.0f) freq = 2.0f;
 8001238:	edd7 7a03 	vldr	s15, [r7, #12]
 800123c:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 8001240:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001244:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001248:	d502      	bpl.n	8001250 <get_freq+0x6c>
 800124a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800124e:	60fb      	str	r3, [r7, #12]
    return freq;
 8001250:	68fb      	ldr	r3, [r7, #12]
 8001252:	ee07 3a90 	vmov	s15, r3
}
 8001256:	eeb0 0a67 	vmov.f32	s0, s15
 800125a:	3714      	adds	r7, #20
 800125c:	46bd      	mov	sp, r7
 800125e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001262:	4770      	bx	lr
 8001264:	41200000 	.word	0x41200000

08001268 <update_sensor_readings>:

void update_sensor_readings(void);
void update_lcd_display(void);
void update_outputs(void);

void update_sensor_readings(void) {
 8001268:	b580      	push	{r7, lr}
 800126a:	b082      	sub	sp, #8
 800126c:	af00      	add	r7, sp, #0
	if (system_state == STATE_STOPPED) {
 800126e:	4b12      	ldr	r3, [pc, #72]	@ (80012b8 <update_sensor_readings+0x50>)
 8001270:	781b      	ldrb	r3, [r3, #0]
 8001272:	b2db      	uxtb	r3, r3
 8001274:	2b00      	cmp	r3, #0
 8001276:	d104      	bne.n	8001282 <update_sensor_readings+0x1a>
	        ppm = 0.0f;
 8001278:	4b10      	ldr	r3, [pc, #64]	@ (80012bc <update_sensor_readings+0x54>)
 800127a:	f04f 0200 	mov.w	r2, #0
 800127e:	601a      	str	r2, [r3, #0]
	        return;
 8001280:	e017      	b.n	80012b2 <update_sensor_readings+0x4a>
	}
    float rs = read_rs();
 8001282:	f000 f97d 	bl	8001580 <read_rs>
 8001286:	ed87 0a01 	vstr	s0, [r7, #4]
    ppm = get_ppm(rs);
 800128a:	ed97 0a01 	vldr	s0, [r7, #4]
 800128e:	f000 f9a7 	bl	80015e0 <get_ppm>
 8001292:	eef0 7a40 	vmov.f32	s15, s0
 8001296:	4b09      	ldr	r3, [pc, #36]	@ (80012bc <update_sensor_readings+0x54>)
 8001298:	edc3 7a00 	vstr	s15, [r3]
    warning_level = get_warning_level(ppm);
 800129c:	4b07      	ldr	r3, [pc, #28]	@ (80012bc <update_sensor_readings+0x54>)
 800129e:	edd3 7a00 	vldr	s15, [r3]
 80012a2:	eeb0 0a67 	vmov.f32	s0, s15
 80012a6:	f000 fa23 	bl	80016f0 <get_warning_level>
 80012aa:	4603      	mov	r3, r0
 80012ac:	461a      	mov	r2, r3
 80012ae:	4b04      	ldr	r3, [pc, #16]	@ (80012c0 <update_sensor_readings+0x58>)
 80012b0:	701a      	strb	r2, [r3, #0]
}
 80012b2:	3708      	adds	r7, #8
 80012b4:	46bd      	mov	sp, r7
 80012b6:	bd80      	pop	{r7, pc}
 80012b8:	20000004 	.word	0x20000004
 80012bc:	200001ec 	.word	0x200001ec
 80012c0:	200001f0 	.word	0x200001f0

080012c4 <update_lcd_display>:

void update_lcd_display(void) {
 80012c4:	b580      	push	{r7, lr}
 80012c6:	b08a      	sub	sp, #40	@ 0x28
 80012c8:	af00      	add	r7, sp, #0
    char line1[17], line2[17];
    sprintf(line1, "Gas: %.0f ppm", ppm);
 80012ca:	4b1d      	ldr	r3, [pc, #116]	@ (8001340 <update_lcd_display+0x7c>)
 80012cc:	681b      	ldr	r3, [r3, #0]
 80012ce:	4618      	mov	r0, r3
 80012d0:	f7ff f942 	bl	8000558 <__aeabi_f2d>
 80012d4:	4602      	mov	r2, r0
 80012d6:	460b      	mov	r3, r1
 80012d8:	f107 0014 	add.w	r0, r7, #20
 80012dc:	4919      	ldr	r1, [pc, #100]	@ (8001344 <update_lcd_display+0x80>)
 80012de:	f001 f8c5 	bl	800246c <siprintf>
    sprintf(line2, "Sys:%d Warn:%d", system_state, warning_level);
 80012e2:	4b19      	ldr	r3, [pc, #100]	@ (8001348 <update_lcd_display+0x84>)
 80012e4:	781b      	ldrb	r3, [r3, #0]
 80012e6:	b2db      	uxtb	r3, r3
 80012e8:	461a      	mov	r2, r3
 80012ea:	4b18      	ldr	r3, [pc, #96]	@ (800134c <update_lcd_display+0x88>)
 80012ec:	781b      	ldrb	r3, [r3, #0]
 80012ee:	b2db      	uxtb	r3, r3
 80012f0:	4638      	mov	r0, r7
 80012f2:	4917      	ldr	r1, [pc, #92]	@ (8001350 <update_lcd_display+0x8c>)
 80012f4:	f001 f8ba 	bl	800246c <siprintf>

    LCD_SetCursor(0, 0); LCD_Print("                ");
 80012f8:	2100      	movs	r1, #0
 80012fa:	2000      	movs	r0, #0
 80012fc:	f7ff feb0 	bl	8001060 <LCD_SetCursor>
 8001300:	4814      	ldr	r0, [pc, #80]	@ (8001354 <update_lcd_display+0x90>)
 8001302:	f7ff fecc 	bl	800109e <LCD_Print>
    LCD_SetCursor(1, 0); LCD_Print("                ");
 8001306:	2100      	movs	r1, #0
 8001308:	2001      	movs	r0, #1
 800130a:	f7ff fea9 	bl	8001060 <LCD_SetCursor>
 800130e:	4811      	ldr	r0, [pc, #68]	@ (8001354 <update_lcd_display+0x90>)
 8001310:	f7ff fec5 	bl	800109e <LCD_Print>
    LCD_SetCursor(0, 0); LCD_Print(line1);
 8001314:	2100      	movs	r1, #0
 8001316:	2000      	movs	r0, #0
 8001318:	f7ff fea2 	bl	8001060 <LCD_SetCursor>
 800131c:	f107 0314 	add.w	r3, r7, #20
 8001320:	4618      	mov	r0, r3
 8001322:	f7ff febc 	bl	800109e <LCD_Print>
    LCD_SetCursor(1, 0); LCD_Print(line2);
 8001326:	2100      	movs	r1, #0
 8001328:	2001      	movs	r0, #1
 800132a:	f7ff fe99 	bl	8001060 <LCD_SetCursor>
 800132e:	463b      	mov	r3, r7
 8001330:	4618      	mov	r0, r3
 8001332:	f7ff feb4 	bl	800109e <LCD_Print>
}
 8001336:	bf00      	nop
 8001338:	3728      	adds	r7, #40	@ 0x28
 800133a:	46bd      	mov	sp, r7
 800133c:	bd80      	pop	{r7, pc}
 800133e:	bf00      	nop
 8001340:	200001ec 	.word	0x200001ec
 8001344:	08004e78 	.word	0x08004e78
 8001348:	20000004 	.word	0x20000004
 800134c:	200001f0 	.word	0x200001f0
 8001350:	08004e88 	.word	0x08004e88
 8001354:	08004e98 	.word	0x08004e98

08001358 <update_outputs>:

void update_outputs(void) {
 8001358:	b580      	push	{r7, lr}
 800135a:	af00      	add	r7, sp, #0
	// Tắt hết các LED trước khi bật đúng cái cần thiết
	GPIOB->ODR &= ~((1 << LED_BLUE_PIN) | (1 << LED_YELLOW_PIN) | (1 << LED_RED_PIN) | (1 << LED_GREEN_PIN));
 800135c:	4b22      	ldr	r3, [pc, #136]	@ (80013e8 <update_outputs+0x90>)
 800135e:	695b      	ldr	r3, [r3, #20]
 8001360:	4a21      	ldr	r2, [pc, #132]	@ (80013e8 <update_outputs+0x90>)
 8001362:	f023 030f 	bic.w	r3, r3, #15
 8001366:	6153      	str	r3, [r2, #20]
	GPIOB->ODR &= ~(1 << BUZZER_PIN);
 8001368:	4b1f      	ldr	r3, [pc, #124]	@ (80013e8 <update_outputs+0x90>)
 800136a:	695b      	ldr	r3, [r3, #20]
 800136c:	4a1e      	ldr	r2, [pc, #120]	@ (80013e8 <update_outputs+0x90>)
 800136e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8001372:	6153      	str	r3, [r2, #20]

	if (system_state == STATE_STOPPED) {
 8001374:	4b1d      	ldr	r3, [pc, #116]	@ (80013ec <update_outputs+0x94>)
 8001376:	781b      	ldrb	r3, [r3, #0]
 8001378:	b2db      	uxtb	r3, r3
 800137a:	2b00      	cmp	r3, #0
 800137c:	d10a      	bne.n	8001394 <update_outputs+0x3c>
		GPIOB->ODR |= (1 << LED_GREEN_PIN);
 800137e:	4b1a      	ldr	r3, [pc, #104]	@ (80013e8 <update_outputs+0x90>)
 8001380:	695b      	ldr	r3, [r3, #20]
 8001382:	4a19      	ldr	r2, [pc, #100]	@ (80013e8 <update_outputs+0x90>)
 8001384:	f043 0308 	orr.w	r3, r3, #8
 8001388:	6153      	str	r3, [r2, #20]
		Relay_OFF();
 800138a:	f000 f9a1 	bl	80016d0 <Relay_OFF>
		Buzzer_OFF();
 800138e:	f7ff fd25 	bl	8000ddc <Buzzer_OFF>
		return;
 8001392:	e028      	b.n	80013e6 <update_outputs+0x8e>
	}

	if (warning_level == WARNING_HIGH) {
 8001394:	4b16      	ldr	r3, [pc, #88]	@ (80013f0 <update_outputs+0x98>)
 8001396:	781b      	ldrb	r3, [r3, #0]
 8001398:	b2db      	uxtb	r3, r3
 800139a:	2b03      	cmp	r3, #3
 800139c:	d104      	bne.n	80013a8 <update_outputs+0x50>
		Relay_ON();
 800139e:	f000 f987 	bl	80016b0 <Relay_ON>
		Buzzer_ON();
 80013a2:	f7ff fd0b 	bl	8000dbc <Buzzer_ON>
 80013a6:	e003      	b.n	80013b0 <update_outputs+0x58>
	} else {
		Relay_OFF();
 80013a8:	f000 f992 	bl	80016d0 <Relay_OFF>
		Buzzer_OFF();
 80013ac:	f7ff fd16 	bl	8000ddc <Buzzer_OFF>
	}

	switch (warning_level) {
 80013b0:	4b0f      	ldr	r3, [pc, #60]	@ (80013f0 <update_outputs+0x98>)
 80013b2:	781b      	ldrb	r3, [r3, #0]
 80013b4:	b2db      	uxtb	r3, r3
 80013b6:	2b03      	cmp	r3, #3
 80013b8:	dc15      	bgt.n	80013e6 <update_outputs+0x8e>
 80013ba:	2b02      	cmp	r3, #2
 80013bc:	da12      	bge.n	80013e4 <update_outputs+0x8c>
 80013be:	2b00      	cmp	r3, #0
 80013c0:	d002      	beq.n	80013c8 <update_outputs+0x70>
 80013c2:	2b01      	cmp	r3, #1
 80013c4:	d007      	beq.n	80013d6 <update_outputs+0x7e>
 80013c6:	e00e      	b.n	80013e6 <update_outputs+0x8e>
		case WARNING_NONE:
			GPIOB->ODR |= (1 << LED_BLUE_PIN);
 80013c8:	4b07      	ldr	r3, [pc, #28]	@ (80013e8 <update_outputs+0x90>)
 80013ca:	695b      	ldr	r3, [r3, #20]
 80013cc:	4a06      	ldr	r2, [pc, #24]	@ (80013e8 <update_outputs+0x90>)
 80013ce:	f043 0301 	orr.w	r3, r3, #1
 80013d2:	6153      	str	r3, [r2, #20]
			break;
 80013d4:	e007      	b.n	80013e6 <update_outputs+0x8e>
		case WARNING_LOW:
			GPIOB->ODR |= (1 << LED_YELLOW_PIN);
 80013d6:	4b04      	ldr	r3, [pc, #16]	@ (80013e8 <update_outputs+0x90>)
 80013d8:	695b      	ldr	r3, [r3, #20]
 80013da:	4a03      	ldr	r2, [pc, #12]	@ (80013e8 <update_outputs+0x90>)
 80013dc:	f043 0302 	orr.w	r3, r3, #2
 80013e0:	6153      	str	r3, [r2, #20]
			break;
 80013e2:	e000      	b.n	80013e6 <update_outputs+0x8e>
		case WARNING_MEDIUM:
		case WARNING_HIGH:
			break;
 80013e4:	bf00      	nop
	}
}
 80013e6:	bd80      	pop	{r7, pc}
 80013e8:	40020400 	.word	0x40020400
 80013ec:	20000004 	.word	0x20000004
 80013f0:	200001f0 	.word	0x200001f0

080013f4 <main>:

int main(void) {
 80013f4:	b580      	push	{r7, lr}
 80013f6:	b082      	sub	sp, #8
 80013f8:	af00      	add	r7, sp, #0
    // Khởi tạo hệ thống
    I2C1_Init();
 80013fa:	f7ff fcff 	bl	8000dfc <I2C1_Init>
    LCD_Init();
 80013fe:	f7ff fe06 	bl	800100e <LCD_Init>
    LED_Init();
 8001402:	f7ff fe61 	bl	80010c8 <LED_Init>
    Buzzer_Init();
 8001406:	f7ff fcab 	bl	8000d60 <Buzzer_Init>
    Relay_Init();
 800140a:	f000 f923 	bl	8001654 <Relay_Init>
    ADC1_Init();
 800140e:	f000 f82f 	bl	8001470 <ADC1_Init>
    Button_EXTI_Init();
 8001412:	f7ff fc19 	bl	8000c48 <Button_EXTI_Init>

    while (1) {
        update_sensor_readings();
 8001416:	f7ff ff27 	bl	8001268 <update_sensor_readings>
        update_lcd_display();
 800141a:	f7ff ff53 	bl	80012c4 <update_lcd_display>
        update_outputs();
 800141e:	f7ff ff9b 	bl	8001358 <update_outputs>

		if (system_state == STATE_RUNNING && warning_level == WARNING_HIGH) {
 8001422:	4b0f      	ldr	r3, [pc, #60]	@ (8001460 <main+0x6c>)
 8001424:	781b      	ldrb	r3, [r3, #0]
 8001426:	b2db      	uxtb	r3, r3
 8001428:	2b01      	cmp	r3, #1
 800142a:	d115      	bne.n	8001458 <main+0x64>
 800142c:	4b0d      	ldr	r3, [pc, #52]	@ (8001464 <main+0x70>)
 800142e:	781b      	ldrb	r3, [r3, #0]
 8001430:	b2db      	uxtb	r3, r3
 8001432:	2b03      	cmp	r3, #3
 8001434:	d110      	bne.n	8001458 <main+0x64>
			float freq = get_freq(ppm, 2000.0f);
 8001436:	4b0c      	ldr	r3, [pc, #48]	@ (8001468 <main+0x74>)
 8001438:	edd3 7a00 	vldr	s15, [r3]
 800143c:	eddf 0a0b 	vldr	s1, [pc, #44]	@ 800146c <main+0x78>
 8001440:	eeb0 0a67 	vmov.f32	s0, s15
 8001444:	f7ff fece 	bl	80011e4 <get_freq>
 8001448:	ed87 0a01 	vstr	s0, [r7, #4]
			blink_red_led(freq, 1000);
 800144c:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001450:	ed97 0a01 	vldr	s0, [r7, #4]
 8001454:	f7ff fe6c 	bl	8001130 <blink_red_led>
		}
        delay_ms(20);
 8001458:	2014      	movs	r0, #20
 800145a:	f000 fa85 	bl	8001968 <delay_ms>
        update_sensor_readings();
 800145e:	e7da      	b.n	8001416 <main+0x22>
 8001460:	20000004 	.word	0x20000004
 8001464:	200001f0 	.word	0x200001f0
 8001468:	200001ec 	.word	0x200001ec
 800146c:	44fa0000 	.word	0x44fa0000

08001470 <ADC1_Init>:
#include <math.h>

float Ro = 1100;

// --- ADC ---
void ADC1_Init(void) {
 8001470:	b480      	push	{r7}
 8001472:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 8001474:	4b12      	ldr	r3, [pc, #72]	@ (80014c0 <ADC1_Init+0x50>)
 8001476:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001478:	4a11      	ldr	r2, [pc, #68]	@ (80014c0 <ADC1_Init+0x50>)
 800147a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800147e:	6453      	str	r3, [r2, #68]	@ 0x44
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8001480:	4b0f      	ldr	r3, [pc, #60]	@ (80014c0 <ADC1_Init+0x50>)
 8001482:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001484:	4a0e      	ldr	r2, [pc, #56]	@ (80014c0 <ADC1_Init+0x50>)
 8001486:	f043 0301 	orr.w	r3, r3, #1
 800148a:	6313      	str	r3, [r2, #48]	@ 0x30


    GPIOA->MODER |= (3 << (0 * 2)); // PA0 analog
 800148c:	4b0d      	ldr	r3, [pc, #52]	@ (80014c4 <ADC1_Init+0x54>)
 800148e:	681b      	ldr	r3, [r3, #0]
 8001490:	4a0c      	ldr	r2, [pc, #48]	@ (80014c4 <ADC1_Init+0x54>)
 8001492:	f043 0303 	orr.w	r3, r3, #3
 8001496:	6013      	str	r3, [r2, #0]
    ADC1->SQR3 = 0;
 8001498:	4b0b      	ldr	r3, [pc, #44]	@ (80014c8 <ADC1_Init+0x58>)
 800149a:	2200      	movs	r2, #0
 800149c:	635a      	str	r2, [r3, #52]	@ 0x34
    ADC1->SMPR2 |= (7 << 0);
 800149e:	4b0a      	ldr	r3, [pc, #40]	@ (80014c8 <ADC1_Init+0x58>)
 80014a0:	691b      	ldr	r3, [r3, #16]
 80014a2:	4a09      	ldr	r2, [pc, #36]	@ (80014c8 <ADC1_Init+0x58>)
 80014a4:	f043 0307 	orr.w	r3, r3, #7
 80014a8:	6113      	str	r3, [r2, #16]
    ADC1->CR2 |= ADC_CR2_ADON;
 80014aa:	4b07      	ldr	r3, [pc, #28]	@ (80014c8 <ADC1_Init+0x58>)
 80014ac:	689b      	ldr	r3, [r3, #8]
 80014ae:	4a06      	ldr	r2, [pc, #24]	@ (80014c8 <ADC1_Init+0x58>)
 80014b0:	f043 0301 	orr.w	r3, r3, #1
 80014b4:	6093      	str	r3, [r2, #8]
}
 80014b6:	bf00      	nop
 80014b8:	46bd      	mov	sp, r7
 80014ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014be:	4770      	bx	lr
 80014c0:	40023800 	.word	0x40023800
 80014c4:	40020000 	.word	0x40020000
 80014c8:	40012000 	.word	0x40012000

080014cc <ADC1_Read>:

uint16_t ADC1_Read(void) {
 80014cc:	b480      	push	{r7}
 80014ce:	af00      	add	r7, sp, #0
    ADC1->CR2 |= ADC_CR2_SWSTART;
 80014d0:	4b0a      	ldr	r3, [pc, #40]	@ (80014fc <ADC1_Read+0x30>)
 80014d2:	689b      	ldr	r3, [r3, #8]
 80014d4:	4a09      	ldr	r2, [pc, #36]	@ (80014fc <ADC1_Read+0x30>)
 80014d6:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80014da:	6093      	str	r3, [r2, #8]
    while(!(ADC1->SR & ADC_SR_EOC));
 80014dc:	bf00      	nop
 80014de:	4b07      	ldr	r3, [pc, #28]	@ (80014fc <ADC1_Read+0x30>)
 80014e0:	681b      	ldr	r3, [r3, #0]
 80014e2:	f003 0302 	and.w	r3, r3, #2
 80014e6:	2b00      	cmp	r3, #0
 80014e8:	d0f9      	beq.n	80014de <ADC1_Read+0x12>
    return ADC1->DR;
 80014ea:	4b04      	ldr	r3, [pc, #16]	@ (80014fc <ADC1_Read+0x30>)
 80014ec:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80014ee:	b29b      	uxth	r3, r3
}
 80014f0:	4618      	mov	r0, r3
 80014f2:	46bd      	mov	sp, r7
 80014f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014f8:	4770      	bx	lr
 80014fa:	bf00      	nop
 80014fc:	40012000 	.word	0x40012000

08001500 <calculate_Rs>:

float calculate_Rs(uint16_t adc_value) {
 8001500:	b480      	push	{r7}
 8001502:	b085      	sub	sp, #20
 8001504:	af00      	add	r7, sp, #0
 8001506:	4603      	mov	r3, r0
 8001508:	80fb      	strh	r3, [r7, #6]
    float voltage = (adc_value / 4095.0f) * 3.3f;
 800150a:	88fb      	ldrh	r3, [r7, #6]
 800150c:	ee07 3a90 	vmov	s15, r3
 8001510:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001514:	eddf 6a15 	vldr	s13, [pc, #84]	@ 800156c <calculate_Rs+0x6c>
 8001518:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800151c:	ed9f 7a14 	vldr	s14, [pc, #80]	@ 8001570 <calculate_Rs+0x70>
 8001520:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001524:	edc7 7a03 	vstr	s15, [r7, #12]
    if (voltage < 0.001f) voltage = 0.001f;
 8001528:	edd7 7a03 	vldr	s15, [r7, #12]
 800152c:	ed9f 7a11 	vldr	s14, [pc, #68]	@ 8001574 <calculate_Rs+0x74>
 8001530:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001534:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001538:	d501      	bpl.n	800153e <calculate_Rs+0x3e>
 800153a:	4b0f      	ldr	r3, [pc, #60]	@ (8001578 <calculate_Rs+0x78>)
 800153c:	60fb      	str	r3, [r7, #12]
    return (float)RL_VALUE * (5.0f - voltage) / voltage;
 800153e:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 8001542:	edd7 7a03 	vldr	s15, [r7, #12]
 8001546:	ee77 7a67 	vsub.f32	s15, s14, s15
 800154a:	ed9f 7a0c 	vldr	s14, [pc, #48]	@ 800157c <calculate_Rs+0x7c>
 800154e:	ee27 7a87 	vmul.f32	s14, s15, s14
 8001552:	edd7 7a03 	vldr	s15, [r7, #12]
 8001556:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800155a:	eef0 7a66 	vmov.f32	s15, s13
}
 800155e:	eeb0 0a67 	vmov.f32	s0, s15
 8001562:	3714      	adds	r7, #20
 8001564:	46bd      	mov	sp, r7
 8001566:	f85d 7b04 	ldr.w	r7, [sp], #4
 800156a:	4770      	bx	lr
 800156c:	457ff000 	.word	0x457ff000
 8001570:	40533333 	.word	0x40533333
 8001574:	3a83126f 	.word	0x3a83126f
 8001578:	3a83126f 	.word	0x3a83126f
 800157c:	447a0000 	.word	0x447a0000

08001580 <read_rs>:

float read_rs(void) {
 8001580:	b580      	push	{r7, lr}
 8001582:	b082      	sub	sp, #8
 8001584:	af00      	add	r7, sp, #0
    float rs_sum = 0;
 8001586:	f04f 0300 	mov.w	r3, #0
 800158a:	607b      	str	r3, [r7, #4]
    for (int i = 0; i < 50; i++) {
 800158c:	2300      	movs	r3, #0
 800158e:	603b      	str	r3, [r7, #0]
 8001590:	e013      	b.n	80015ba <read_rs+0x3a>
        rs_sum += calculate_Rs(ADC1_Read());
 8001592:	f7ff ff9b 	bl	80014cc <ADC1_Read>
 8001596:	4603      	mov	r3, r0
 8001598:	4618      	mov	r0, r3
 800159a:	f7ff ffb1 	bl	8001500 <calculate_Rs>
 800159e:	eeb0 7a40 	vmov.f32	s14, s0
 80015a2:	edd7 7a01 	vldr	s15, [r7, #4]
 80015a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80015aa:	edc7 7a01 	vstr	s15, [r7, #4]
        delay_ms(5);
 80015ae:	2005      	movs	r0, #5
 80015b0:	f000 f9da 	bl	8001968 <delay_ms>
    for (int i = 0; i < 50; i++) {
 80015b4:	683b      	ldr	r3, [r7, #0]
 80015b6:	3301      	adds	r3, #1
 80015b8:	603b      	str	r3, [r7, #0]
 80015ba:	683b      	ldr	r3, [r7, #0]
 80015bc:	2b31      	cmp	r3, #49	@ 0x31
 80015be:	dde8      	ble.n	8001592 <read_rs+0x12>
    }
    return (float)rs_sum / (50.0f);
 80015c0:	edd7 7a01 	vldr	s15, [r7, #4]
 80015c4:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 80015dc <read_rs+0x5c>
 80015c8:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80015cc:	eef0 7a66 	vmov.f32	s15, s13
}
 80015d0:	eeb0 0a67 	vmov.f32	s0, s15
 80015d4:	3708      	adds	r7, #8
 80015d6:	46bd      	mov	sp, r7
 80015d8:	bd80      	pop	{r7, pc}
 80015da:	bf00      	nop
 80015dc:	42480000 	.word	0x42480000

080015e0 <get_ppm>:

float get_ppm(float rs) {
 80015e0:	b580      	push	{r7, lr}
 80015e2:	b084      	sub	sp, #16
 80015e4:	af00      	add	r7, sp, #0
 80015e6:	ed87 0a01 	vstr	s0, [r7, #4]

    float ratio = rs / (Ro);
 80015ea:	4b15      	ldr	r3, [pc, #84]	@ (8001640 <get_ppm+0x60>)
 80015ec:	ed93 7a00 	vldr	s14, [r3]
 80015f0:	edd7 6a01 	vldr	s13, [r7, #4]
 80015f4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80015f8:	edc7 7a03 	vstr	s15, [r7, #12]

    float ppm = 590.2f *powf(ratio,-2.041f);
 80015fc:	eddf 0a11 	vldr	s1, [pc, #68]	@ 8001644 <get_ppm+0x64>
 8001600:	ed97 0a03 	vldr	s0, [r7, #12]
 8001604:	f003 f860 	bl	80046c8 <powf>
 8001608:	eef0 7a40 	vmov.f32	s15, s0
 800160c:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8001648 <get_ppm+0x68>
 8001610:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001614:	edc7 7a02 	vstr	s15, [r7, #8]
    if(ppm > 20000) return 20000;
 8001618:	edd7 7a02 	vldr	s15, [r7, #8]
 800161c:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 800164c <get_ppm+0x6c>
 8001620:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001624:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001628:	dd01      	ble.n	800162e <get_ppm+0x4e>
 800162a:	4b09      	ldr	r3, [pc, #36]	@ (8001650 <get_ppm+0x70>)
 800162c:	e000      	b.n	8001630 <get_ppm+0x50>
    return  ppm;
 800162e:	68bb      	ldr	r3, [r7, #8]
}
 8001630:	ee07 3a90 	vmov	s15, r3
 8001634:	eeb0 0a67 	vmov.f32	s0, s15
 8001638:	3710      	adds	r7, #16
 800163a:	46bd      	mov	sp, r7
 800163c:	bd80      	pop	{r7, pc}
 800163e:	bf00      	nop
 8001640:	20000000 	.word	0x20000000
 8001644:	c0029fbe 	.word	0xc0029fbe
 8001648:	44138ccd 	.word	0x44138ccd
 800164c:	469c4000 	.word	0x469c4000
 8001650:	469c4000 	.word	0x469c4000

08001654 <Relay_Init>:
#include "stm32f4xx.h"
#include "relay.h"

void Relay_Init(void) {
 8001654:	b580      	push	{r7, lr}
 8001656:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN; // Bật clock cho GPIOB
 8001658:	4b13      	ldr	r3, [pc, #76]	@ (80016a8 <Relay_Init+0x54>)
 800165a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800165c:	4a12      	ldr	r2, [pc, #72]	@ (80016a8 <Relay_Init+0x54>)
 800165e:	f043 0302 	orr.w	r3, r3, #2
 8001662:	6313      	str	r3, [r2, #48]	@ 0x30

    // Cấu hình chân PB7 làm output
    GPIOB->MODER &= ~(3 << (RELAY_PIN * 2));  // Clear mode
 8001664:	4b11      	ldr	r3, [pc, #68]	@ (80016ac <Relay_Init+0x58>)
 8001666:	681b      	ldr	r3, [r3, #0]
 8001668:	4a10      	ldr	r2, [pc, #64]	@ (80016ac <Relay_Init+0x58>)
 800166a:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 800166e:	6013      	str	r3, [r2, #0]
    GPIOB->MODER |=  (1 << (RELAY_PIN * 2));  // Output mode
 8001670:	4b0e      	ldr	r3, [pc, #56]	@ (80016ac <Relay_Init+0x58>)
 8001672:	681b      	ldr	r3, [r3, #0]
 8001674:	4a0d      	ldr	r2, [pc, #52]	@ (80016ac <Relay_Init+0x58>)
 8001676:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800167a:	6013      	str	r3, [r2, #0]

    GPIOB->OTYPER &= ~(1 << RELAY_PIN);       // Push-pull
 800167c:	4b0b      	ldr	r3, [pc, #44]	@ (80016ac <Relay_Init+0x58>)
 800167e:	685b      	ldr	r3, [r3, #4]
 8001680:	4a0a      	ldr	r2, [pc, #40]	@ (80016ac <Relay_Init+0x58>)
 8001682:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8001686:	6053      	str	r3, [r2, #4]
    GPIOB->OSPEEDR |= (3 << (RELAY_PIN * 2)); // High speed
 8001688:	4b08      	ldr	r3, [pc, #32]	@ (80016ac <Relay_Init+0x58>)
 800168a:	689b      	ldr	r3, [r3, #8]
 800168c:	4a07      	ldr	r2, [pc, #28]	@ (80016ac <Relay_Init+0x58>)
 800168e:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8001692:	6093      	str	r3, [r2, #8]
    GPIOB->PUPDR &= ~(3 << (RELAY_PIN * 2));  // No pull-up/pull-down
 8001694:	4b05      	ldr	r3, [pc, #20]	@ (80016ac <Relay_Init+0x58>)
 8001696:	68db      	ldr	r3, [r3, #12]
 8001698:	4a04      	ldr	r2, [pc, #16]	@ (80016ac <Relay_Init+0x58>)
 800169a:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 800169e:	60d3      	str	r3, [r2, #12]

    Relay_OFF(); // Mặc định tắt
 80016a0:	f000 f816 	bl	80016d0 <Relay_OFF>
}
 80016a4:	bf00      	nop
 80016a6:	bd80      	pop	{r7, pc}
 80016a8:	40023800 	.word	0x40023800
 80016ac:	40020400 	.word	0x40020400

080016b0 <Relay_ON>:

void Relay_ON(void) {
 80016b0:	b480      	push	{r7}
 80016b2:	af00      	add	r7, sp, #0
    GPIOB->ODR |= (1 << RELAY_PIN);
 80016b4:	4b05      	ldr	r3, [pc, #20]	@ (80016cc <Relay_ON+0x1c>)
 80016b6:	695b      	ldr	r3, [r3, #20]
 80016b8:	4a04      	ldr	r2, [pc, #16]	@ (80016cc <Relay_ON+0x1c>)
 80016ba:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80016be:	6153      	str	r3, [r2, #20]
}
 80016c0:	bf00      	nop
 80016c2:	46bd      	mov	sp, r7
 80016c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016c8:	4770      	bx	lr
 80016ca:	bf00      	nop
 80016cc:	40020400 	.word	0x40020400

080016d0 <Relay_OFF>:

void Relay_OFF(void) {
 80016d0:	b480      	push	{r7}
 80016d2:	af00      	add	r7, sp, #0
    GPIOB->ODR &= ~(1 << RELAY_PIN);
 80016d4:	4b05      	ldr	r3, [pc, #20]	@ (80016ec <Relay_OFF+0x1c>)
 80016d6:	695b      	ldr	r3, [r3, #20]
 80016d8:	4a04      	ldr	r2, [pc, #16]	@ (80016ec <Relay_OFF+0x1c>)
 80016da:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80016de:	6153      	str	r3, [r2, #20]
}
 80016e0:	bf00      	nop
 80016e2:	46bd      	mov	sp, r7
 80016e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016e8:	4770      	bx	lr
 80016ea:	bf00      	nop
 80016ec:	40020400 	.word	0x40020400

080016f0 <get_warning_level>:
#include "state.h"

uint8_t volatile system_state = STATE_RUNNING;
uint8_t volatile warning_level;

uint8_t get_warning_level(float ppm) {
 80016f0:	b480      	push	{r7}
 80016f2:	b083      	sub	sp, #12
 80016f4:	af00      	add	r7, sp, #0
 80016f6:	ed87 0a01 	vstr	s0, [r7, #4]
    if (ppm < 100) return WARNING_NONE;
 80016fa:	edd7 7a01 	vldr	s15, [r7, #4]
 80016fe:	ed9f 7a13 	vldr	s14, [pc, #76]	@ 800174c <get_warning_level+0x5c>
 8001702:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001706:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800170a:	d501      	bpl.n	8001710 <get_warning_level+0x20>
 800170c:	2300      	movs	r3, #0
 800170e:	e016      	b.n	800173e <get_warning_level+0x4e>
    else if (ppm < 1000) return WARNING_LOW;
 8001710:	edd7 7a01 	vldr	s15, [r7, #4]
 8001714:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8001750 <get_warning_level+0x60>
 8001718:	eef4 7ac7 	vcmpe.f32	s15, s14
 800171c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001720:	d501      	bpl.n	8001726 <get_warning_level+0x36>
 8001722:	2301      	movs	r3, #1
 8001724:	e00b      	b.n	800173e <get_warning_level+0x4e>
    else if (ppm < 2000) return WARNING_MEDIUM;
 8001726:	edd7 7a01 	vldr	s15, [r7, #4]
 800172a:	ed9f 7a0a 	vldr	s14, [pc, #40]	@ 8001754 <get_warning_level+0x64>
 800172e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001732:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001736:	d501      	bpl.n	800173c <get_warning_level+0x4c>
 8001738:	2302      	movs	r3, #2
 800173a:	e000      	b.n	800173e <get_warning_level+0x4e>
    else return WARNING_HIGH;
 800173c:	2303      	movs	r3, #3
}
 800173e:	4618      	mov	r0, r3
 8001740:	370c      	adds	r7, #12
 8001742:	46bd      	mov	sp, r7
 8001744:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001748:	4770      	bx	lr
 800174a:	bf00      	nop
 800174c:	42c80000 	.word	0x42c80000
 8001750:	447a0000 	.word	0x447a0000
 8001754:	44fa0000 	.word	0x44fa0000

08001758 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001758:	b480      	push	{r7}
 800175a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800175c:	bf00      	nop
 800175e:	e7fd      	b.n	800175c <NMI_Handler+0x4>

08001760 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001760:	b480      	push	{r7}
 8001762:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001764:	bf00      	nop
 8001766:	e7fd      	b.n	8001764 <HardFault_Handler+0x4>

08001768 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001768:	b480      	push	{r7}
 800176a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800176c:	bf00      	nop
 800176e:	e7fd      	b.n	800176c <MemManage_Handler+0x4>

08001770 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001770:	b480      	push	{r7}
 8001772:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001774:	bf00      	nop
 8001776:	e7fd      	b.n	8001774 <BusFault_Handler+0x4>

08001778 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001778:	b480      	push	{r7}
 800177a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800177c:	bf00      	nop
 800177e:	e7fd      	b.n	800177c <UsageFault_Handler+0x4>

08001780 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001780:	b480      	push	{r7}
 8001782:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001784:	bf00      	nop
 8001786:	46bd      	mov	sp, r7
 8001788:	f85d 7b04 	ldr.w	r7, [sp], #4
 800178c:	4770      	bx	lr

0800178e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800178e:	b480      	push	{r7}
 8001790:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001792:	bf00      	nop
 8001794:	46bd      	mov	sp, r7
 8001796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800179a:	4770      	bx	lr

0800179c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800179c:	b480      	push	{r7}
 800179e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80017a0:	bf00      	nop
 80017a2:	46bd      	mov	sp, r7
 80017a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a8:	4770      	bx	lr

080017aa <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80017aa:	b580      	push	{r7, lr}
 80017ac:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80017ae:	f000 f92f 	bl	8001a10 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80017b2:	bf00      	nop
 80017b4:	bd80      	pop	{r7, pc}

080017b6 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80017b6:	b480      	push	{r7}
 80017b8:	af00      	add	r7, sp, #0
  return 1;
 80017ba:	2301      	movs	r3, #1
}
 80017bc:	4618      	mov	r0, r3
 80017be:	46bd      	mov	sp, r7
 80017c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017c4:	4770      	bx	lr

080017c6 <_kill>:

int _kill(int pid, int sig)
{
 80017c6:	b580      	push	{r7, lr}
 80017c8:	b082      	sub	sp, #8
 80017ca:	af00      	add	r7, sp, #0
 80017cc:	6078      	str	r0, [r7, #4]
 80017ce:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80017d0:	f000 ff02 	bl	80025d8 <__errno>
 80017d4:	4603      	mov	r3, r0
 80017d6:	2216      	movs	r2, #22
 80017d8:	601a      	str	r2, [r3, #0]
  return -1;
 80017da:	f04f 33ff 	mov.w	r3, #4294967295
}
 80017de:	4618      	mov	r0, r3
 80017e0:	3708      	adds	r7, #8
 80017e2:	46bd      	mov	sp, r7
 80017e4:	bd80      	pop	{r7, pc}

080017e6 <_exit>:

void _exit (int status)
{
 80017e6:	b580      	push	{r7, lr}
 80017e8:	b082      	sub	sp, #8
 80017ea:	af00      	add	r7, sp, #0
 80017ec:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80017ee:	f04f 31ff 	mov.w	r1, #4294967295
 80017f2:	6878      	ldr	r0, [r7, #4]
 80017f4:	f7ff ffe7 	bl	80017c6 <_kill>
  while (1) {}    /* Make sure we hang here */
 80017f8:	bf00      	nop
 80017fa:	e7fd      	b.n	80017f8 <_exit+0x12>

080017fc <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80017fc:	b580      	push	{r7, lr}
 80017fe:	b086      	sub	sp, #24
 8001800:	af00      	add	r7, sp, #0
 8001802:	60f8      	str	r0, [r7, #12]
 8001804:	60b9      	str	r1, [r7, #8]
 8001806:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001808:	2300      	movs	r3, #0
 800180a:	617b      	str	r3, [r7, #20]
 800180c:	e00a      	b.n	8001824 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800180e:	f3af 8000 	nop.w
 8001812:	4601      	mov	r1, r0
 8001814:	68bb      	ldr	r3, [r7, #8]
 8001816:	1c5a      	adds	r2, r3, #1
 8001818:	60ba      	str	r2, [r7, #8]
 800181a:	b2ca      	uxtb	r2, r1
 800181c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800181e:	697b      	ldr	r3, [r7, #20]
 8001820:	3301      	adds	r3, #1
 8001822:	617b      	str	r3, [r7, #20]
 8001824:	697a      	ldr	r2, [r7, #20]
 8001826:	687b      	ldr	r3, [r7, #4]
 8001828:	429a      	cmp	r2, r3
 800182a:	dbf0      	blt.n	800180e <_read+0x12>
  }

  return len;
 800182c:	687b      	ldr	r3, [r7, #4]
}
 800182e:	4618      	mov	r0, r3
 8001830:	3718      	adds	r7, #24
 8001832:	46bd      	mov	sp, r7
 8001834:	bd80      	pop	{r7, pc}

08001836 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001836:	b580      	push	{r7, lr}
 8001838:	b086      	sub	sp, #24
 800183a:	af00      	add	r7, sp, #0
 800183c:	60f8      	str	r0, [r7, #12]
 800183e:	60b9      	str	r1, [r7, #8]
 8001840:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001842:	2300      	movs	r3, #0
 8001844:	617b      	str	r3, [r7, #20]
 8001846:	e009      	b.n	800185c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001848:	68bb      	ldr	r3, [r7, #8]
 800184a:	1c5a      	adds	r2, r3, #1
 800184c:	60ba      	str	r2, [r7, #8]
 800184e:	781b      	ldrb	r3, [r3, #0]
 8001850:	4618      	mov	r0, r3
 8001852:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001856:	697b      	ldr	r3, [r7, #20]
 8001858:	3301      	adds	r3, #1
 800185a:	617b      	str	r3, [r7, #20]
 800185c:	697a      	ldr	r2, [r7, #20]
 800185e:	687b      	ldr	r3, [r7, #4]
 8001860:	429a      	cmp	r2, r3
 8001862:	dbf1      	blt.n	8001848 <_write+0x12>
  }
  return len;
 8001864:	687b      	ldr	r3, [r7, #4]
}
 8001866:	4618      	mov	r0, r3
 8001868:	3718      	adds	r7, #24
 800186a:	46bd      	mov	sp, r7
 800186c:	bd80      	pop	{r7, pc}

0800186e <_close>:

int _close(int file)
{
 800186e:	b480      	push	{r7}
 8001870:	b083      	sub	sp, #12
 8001872:	af00      	add	r7, sp, #0
 8001874:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001876:	f04f 33ff 	mov.w	r3, #4294967295
}
 800187a:	4618      	mov	r0, r3
 800187c:	370c      	adds	r7, #12
 800187e:	46bd      	mov	sp, r7
 8001880:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001884:	4770      	bx	lr

08001886 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001886:	b480      	push	{r7}
 8001888:	b083      	sub	sp, #12
 800188a:	af00      	add	r7, sp, #0
 800188c:	6078      	str	r0, [r7, #4]
 800188e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001890:	683b      	ldr	r3, [r7, #0]
 8001892:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001896:	605a      	str	r2, [r3, #4]
  return 0;
 8001898:	2300      	movs	r3, #0
}
 800189a:	4618      	mov	r0, r3
 800189c:	370c      	adds	r7, #12
 800189e:	46bd      	mov	sp, r7
 80018a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018a4:	4770      	bx	lr

080018a6 <_isatty>:

int _isatty(int file)
{
 80018a6:	b480      	push	{r7}
 80018a8:	b083      	sub	sp, #12
 80018aa:	af00      	add	r7, sp, #0
 80018ac:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80018ae:	2301      	movs	r3, #1
}
 80018b0:	4618      	mov	r0, r3
 80018b2:	370c      	adds	r7, #12
 80018b4:	46bd      	mov	sp, r7
 80018b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018ba:	4770      	bx	lr

080018bc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80018bc:	b480      	push	{r7}
 80018be:	b085      	sub	sp, #20
 80018c0:	af00      	add	r7, sp, #0
 80018c2:	60f8      	str	r0, [r7, #12]
 80018c4:	60b9      	str	r1, [r7, #8]
 80018c6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80018c8:	2300      	movs	r3, #0
}
 80018ca:	4618      	mov	r0, r3
 80018cc:	3714      	adds	r7, #20
 80018ce:	46bd      	mov	sp, r7
 80018d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018d4:	4770      	bx	lr
	...

080018d8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80018d8:	b580      	push	{r7, lr}
 80018da:	b086      	sub	sp, #24
 80018dc:	af00      	add	r7, sp, #0
 80018de:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80018e0:	4a14      	ldr	r2, [pc, #80]	@ (8001934 <_sbrk+0x5c>)
 80018e2:	4b15      	ldr	r3, [pc, #84]	@ (8001938 <_sbrk+0x60>)
 80018e4:	1ad3      	subs	r3, r2, r3
 80018e6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80018e8:	697b      	ldr	r3, [r7, #20]
 80018ea:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80018ec:	4b13      	ldr	r3, [pc, #76]	@ (800193c <_sbrk+0x64>)
 80018ee:	681b      	ldr	r3, [r3, #0]
 80018f0:	2b00      	cmp	r3, #0
 80018f2:	d102      	bne.n	80018fa <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80018f4:	4b11      	ldr	r3, [pc, #68]	@ (800193c <_sbrk+0x64>)
 80018f6:	4a12      	ldr	r2, [pc, #72]	@ (8001940 <_sbrk+0x68>)
 80018f8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80018fa:	4b10      	ldr	r3, [pc, #64]	@ (800193c <_sbrk+0x64>)
 80018fc:	681a      	ldr	r2, [r3, #0]
 80018fe:	687b      	ldr	r3, [r7, #4]
 8001900:	4413      	add	r3, r2
 8001902:	693a      	ldr	r2, [r7, #16]
 8001904:	429a      	cmp	r2, r3
 8001906:	d207      	bcs.n	8001918 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001908:	f000 fe66 	bl	80025d8 <__errno>
 800190c:	4603      	mov	r3, r0
 800190e:	220c      	movs	r2, #12
 8001910:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001912:	f04f 33ff 	mov.w	r3, #4294967295
 8001916:	e009      	b.n	800192c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001918:	4b08      	ldr	r3, [pc, #32]	@ (800193c <_sbrk+0x64>)
 800191a:	681b      	ldr	r3, [r3, #0]
 800191c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800191e:	4b07      	ldr	r3, [pc, #28]	@ (800193c <_sbrk+0x64>)
 8001920:	681a      	ldr	r2, [r3, #0]
 8001922:	687b      	ldr	r3, [r7, #4]
 8001924:	4413      	add	r3, r2
 8001926:	4a05      	ldr	r2, [pc, #20]	@ (800193c <_sbrk+0x64>)
 8001928:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800192a:	68fb      	ldr	r3, [r7, #12]
}
 800192c:	4618      	mov	r0, r3
 800192e:	3718      	adds	r7, #24
 8001930:	46bd      	mov	sp, r7
 8001932:	bd80      	pop	{r7, pc}
 8001934:	20018000 	.word	0x20018000
 8001938:	00000400 	.word	0x00000400
 800193c:	200001f4 	.word	0x200001f4
 8001940:	20000348 	.word	0x20000348

08001944 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001944:	b480      	push	{r7}
 8001946:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001948:	4b06      	ldr	r3, [pc, #24]	@ (8001964 <SystemInit+0x20>)
 800194a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800194e:	4a05      	ldr	r2, [pc, #20]	@ (8001964 <SystemInit+0x20>)
 8001950:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001954:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001958:	bf00      	nop
 800195a:	46bd      	mov	sp, r7
 800195c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001960:	4770      	bx	lr
 8001962:	bf00      	nop
 8001964:	e000ed00 	.word	0xe000ed00

08001968 <delay_ms>:
#include "stm32f4xx.h"
#include "util.h"

void delay_ms(uint32_t ms) {
 8001968:	b480      	push	{r7}
 800196a:	b085      	sub	sp, #20
 800196c:	af00      	add	r7, sp, #0
 800196e:	6078      	str	r0, [r7, #4]
    SysTick->LOAD = 16000 - 1;
 8001970:	4b11      	ldr	r3, [pc, #68]	@ (80019b8 <delay_ms+0x50>)
 8001972:	f643 627f 	movw	r2, #15999	@ 0x3e7f
 8001976:	605a      	str	r2, [r3, #4]
    SysTick->VAL = 0;
 8001978:	4b0f      	ldr	r3, [pc, #60]	@ (80019b8 <delay_ms+0x50>)
 800197a:	2200      	movs	r2, #0
 800197c:	609a      	str	r2, [r3, #8]
    SysTick->CTRL = 5;
 800197e:	4b0e      	ldr	r3, [pc, #56]	@ (80019b8 <delay_ms+0x50>)
 8001980:	2205      	movs	r2, #5
 8001982:	601a      	str	r2, [r3, #0]
    for(uint32_t i = 0; i < ms; i++) {
 8001984:	2300      	movs	r3, #0
 8001986:	60fb      	str	r3, [r7, #12]
 8001988:	e009      	b.n	800199e <delay_ms+0x36>
        while((SysTick->CTRL & 0x10000) == 0);
 800198a:	bf00      	nop
 800198c:	4b0a      	ldr	r3, [pc, #40]	@ (80019b8 <delay_ms+0x50>)
 800198e:	681b      	ldr	r3, [r3, #0]
 8001990:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001994:	2b00      	cmp	r3, #0
 8001996:	d0f9      	beq.n	800198c <delay_ms+0x24>
    for(uint32_t i = 0; i < ms; i++) {
 8001998:	68fb      	ldr	r3, [r7, #12]
 800199a:	3301      	adds	r3, #1
 800199c:	60fb      	str	r3, [r7, #12]
 800199e:	68fa      	ldr	r2, [r7, #12]
 80019a0:	687b      	ldr	r3, [r7, #4]
 80019a2:	429a      	cmp	r2, r3
 80019a4:	d3f1      	bcc.n	800198a <delay_ms+0x22>
    }
    SysTick->CTRL = 0;
 80019a6:	4b04      	ldr	r3, [pc, #16]	@ (80019b8 <delay_ms+0x50>)
 80019a8:	2200      	movs	r2, #0
 80019aa:	601a      	str	r2, [r3, #0]
}
 80019ac:	bf00      	nop
 80019ae:	3714      	adds	r7, #20
 80019b0:	46bd      	mov	sp, r7
 80019b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019b6:	4770      	bx	lr
 80019b8:	e000e010 	.word	0xe000e010

080019bc <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 80019bc:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80019f4 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit  
 80019c0:	f7ff ffc0 	bl	8001944 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80019c4:	480c      	ldr	r0, [pc, #48]	@ (80019f8 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 80019c6:	490d      	ldr	r1, [pc, #52]	@ (80019fc <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 80019c8:	4a0d      	ldr	r2, [pc, #52]	@ (8001a00 <LoopFillZerobss+0x1a>)
  movs r3, #0
 80019ca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80019cc:	e002      	b.n	80019d4 <LoopCopyDataInit>

080019ce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80019ce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80019d0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80019d2:	3304      	adds	r3, #4

080019d4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80019d4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80019d6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80019d8:	d3f9      	bcc.n	80019ce <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80019da:	4a0a      	ldr	r2, [pc, #40]	@ (8001a04 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 80019dc:	4c0a      	ldr	r4, [pc, #40]	@ (8001a08 <LoopFillZerobss+0x22>)
  movs r3, #0
 80019de:	2300      	movs	r3, #0
  b LoopFillZerobss
 80019e0:	e001      	b.n	80019e6 <LoopFillZerobss>

080019e2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80019e2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80019e4:	3204      	adds	r2, #4

080019e6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80019e6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80019e8:	d3fb      	bcc.n	80019e2 <FillZerobss>
 
/* Call static constructors */
    bl __libc_init_array
 80019ea:	f000 fdfb 	bl	80025e4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80019ee:	f7ff fd01 	bl	80013f4 <main>
  bx  lr    
 80019f2:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 80019f4:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80019f8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80019fc:	200001d0 	.word	0x200001d0
  ldr r2, =_sidata
 8001a00:	08005240 	.word	0x08005240
  ldr r2, =_sbss
 8001a04:	200001d0 	.word	0x200001d0
  ldr r4, =_ebss
 8001a08:	20000348 	.word	0x20000348

08001a0c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001a0c:	e7fe      	b.n	8001a0c <ADC_IRQHandler>
	...

08001a10 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001a10:	b480      	push	{r7}
 8001a12:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001a14:	4b06      	ldr	r3, [pc, #24]	@ (8001a30 <HAL_IncTick+0x20>)
 8001a16:	781b      	ldrb	r3, [r3, #0]
 8001a18:	461a      	mov	r2, r3
 8001a1a:	4b06      	ldr	r3, [pc, #24]	@ (8001a34 <HAL_IncTick+0x24>)
 8001a1c:	681b      	ldr	r3, [r3, #0]
 8001a1e:	4413      	add	r3, r2
 8001a20:	4a04      	ldr	r2, [pc, #16]	@ (8001a34 <HAL_IncTick+0x24>)
 8001a22:	6013      	str	r3, [r2, #0]
}
 8001a24:	bf00      	nop
 8001a26:	46bd      	mov	sp, r7
 8001a28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a2c:	4770      	bx	lr
 8001a2e:	bf00      	nop
 8001a30:	20000005 	.word	0x20000005
 8001a34:	200001f8 	.word	0x200001f8

08001a38 <__cvt>:
 8001a38:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001a3c:	ec57 6b10 	vmov	r6, r7, d0
 8001a40:	2f00      	cmp	r7, #0
 8001a42:	460c      	mov	r4, r1
 8001a44:	4619      	mov	r1, r3
 8001a46:	463b      	mov	r3, r7
 8001a48:	bfbb      	ittet	lt
 8001a4a:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8001a4e:	461f      	movlt	r7, r3
 8001a50:	2300      	movge	r3, #0
 8001a52:	232d      	movlt	r3, #45	@ 0x2d
 8001a54:	700b      	strb	r3, [r1, #0]
 8001a56:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001a58:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8001a5c:	4691      	mov	r9, r2
 8001a5e:	f023 0820 	bic.w	r8, r3, #32
 8001a62:	bfbc      	itt	lt
 8001a64:	4632      	movlt	r2, r6
 8001a66:	4616      	movlt	r6, r2
 8001a68:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001a6c:	d005      	beq.n	8001a7a <__cvt+0x42>
 8001a6e:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001a72:	d100      	bne.n	8001a76 <__cvt+0x3e>
 8001a74:	3401      	adds	r4, #1
 8001a76:	2102      	movs	r1, #2
 8001a78:	e000      	b.n	8001a7c <__cvt+0x44>
 8001a7a:	2103      	movs	r1, #3
 8001a7c:	ab03      	add	r3, sp, #12
 8001a7e:	9301      	str	r3, [sp, #4]
 8001a80:	ab02      	add	r3, sp, #8
 8001a82:	9300      	str	r3, [sp, #0]
 8001a84:	ec47 6b10 	vmov	d0, r6, r7
 8001a88:	4653      	mov	r3, sl
 8001a8a:	4622      	mov	r2, r4
 8001a8c:	f000 fe5c 	bl	8002748 <_dtoa_r>
 8001a90:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001a94:	4605      	mov	r5, r0
 8001a96:	d119      	bne.n	8001acc <__cvt+0x94>
 8001a98:	f019 0f01 	tst.w	r9, #1
 8001a9c:	d00e      	beq.n	8001abc <__cvt+0x84>
 8001a9e:	eb00 0904 	add.w	r9, r0, r4
 8001aa2:	2200      	movs	r2, #0
 8001aa4:	2300      	movs	r3, #0
 8001aa6:	4630      	mov	r0, r6
 8001aa8:	4639      	mov	r1, r7
 8001aaa:	f7ff f815 	bl	8000ad8 <__aeabi_dcmpeq>
 8001aae:	b108      	cbz	r0, 8001ab4 <__cvt+0x7c>
 8001ab0:	f8cd 900c 	str.w	r9, [sp, #12]
 8001ab4:	2230      	movs	r2, #48	@ 0x30
 8001ab6:	9b03      	ldr	r3, [sp, #12]
 8001ab8:	454b      	cmp	r3, r9
 8001aba:	d31e      	bcc.n	8001afa <__cvt+0xc2>
 8001abc:	9b03      	ldr	r3, [sp, #12]
 8001abe:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001ac0:	1b5b      	subs	r3, r3, r5
 8001ac2:	4628      	mov	r0, r5
 8001ac4:	6013      	str	r3, [r2, #0]
 8001ac6:	b004      	add	sp, #16
 8001ac8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001acc:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001ad0:	eb00 0904 	add.w	r9, r0, r4
 8001ad4:	d1e5      	bne.n	8001aa2 <__cvt+0x6a>
 8001ad6:	7803      	ldrb	r3, [r0, #0]
 8001ad8:	2b30      	cmp	r3, #48	@ 0x30
 8001ada:	d10a      	bne.n	8001af2 <__cvt+0xba>
 8001adc:	2200      	movs	r2, #0
 8001ade:	2300      	movs	r3, #0
 8001ae0:	4630      	mov	r0, r6
 8001ae2:	4639      	mov	r1, r7
 8001ae4:	f7fe fff8 	bl	8000ad8 <__aeabi_dcmpeq>
 8001ae8:	b918      	cbnz	r0, 8001af2 <__cvt+0xba>
 8001aea:	f1c4 0401 	rsb	r4, r4, #1
 8001aee:	f8ca 4000 	str.w	r4, [sl]
 8001af2:	f8da 3000 	ldr.w	r3, [sl]
 8001af6:	4499      	add	r9, r3
 8001af8:	e7d3      	b.n	8001aa2 <__cvt+0x6a>
 8001afa:	1c59      	adds	r1, r3, #1
 8001afc:	9103      	str	r1, [sp, #12]
 8001afe:	701a      	strb	r2, [r3, #0]
 8001b00:	e7d9      	b.n	8001ab6 <__cvt+0x7e>

08001b02 <__exponent>:
 8001b02:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001b04:	2900      	cmp	r1, #0
 8001b06:	bfba      	itte	lt
 8001b08:	4249      	neglt	r1, r1
 8001b0a:	232d      	movlt	r3, #45	@ 0x2d
 8001b0c:	232b      	movge	r3, #43	@ 0x2b
 8001b0e:	2909      	cmp	r1, #9
 8001b10:	7002      	strb	r2, [r0, #0]
 8001b12:	7043      	strb	r3, [r0, #1]
 8001b14:	dd29      	ble.n	8001b6a <__exponent+0x68>
 8001b16:	f10d 0307 	add.w	r3, sp, #7
 8001b1a:	461d      	mov	r5, r3
 8001b1c:	270a      	movs	r7, #10
 8001b1e:	461a      	mov	r2, r3
 8001b20:	fbb1 f6f7 	udiv	r6, r1, r7
 8001b24:	fb07 1416 	mls	r4, r7, r6, r1
 8001b28:	3430      	adds	r4, #48	@ 0x30
 8001b2a:	f802 4c01 	strb.w	r4, [r2, #-1]
 8001b2e:	460c      	mov	r4, r1
 8001b30:	2c63      	cmp	r4, #99	@ 0x63
 8001b32:	f103 33ff 	add.w	r3, r3, #4294967295
 8001b36:	4631      	mov	r1, r6
 8001b38:	dcf1      	bgt.n	8001b1e <__exponent+0x1c>
 8001b3a:	3130      	adds	r1, #48	@ 0x30
 8001b3c:	1e94      	subs	r4, r2, #2
 8001b3e:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001b42:	1c41      	adds	r1, r0, #1
 8001b44:	4623      	mov	r3, r4
 8001b46:	42ab      	cmp	r3, r5
 8001b48:	d30a      	bcc.n	8001b60 <__exponent+0x5e>
 8001b4a:	f10d 0309 	add.w	r3, sp, #9
 8001b4e:	1a9b      	subs	r3, r3, r2
 8001b50:	42ac      	cmp	r4, r5
 8001b52:	bf88      	it	hi
 8001b54:	2300      	movhi	r3, #0
 8001b56:	3302      	adds	r3, #2
 8001b58:	4403      	add	r3, r0
 8001b5a:	1a18      	subs	r0, r3, r0
 8001b5c:	b003      	add	sp, #12
 8001b5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b60:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001b64:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001b68:	e7ed      	b.n	8001b46 <__exponent+0x44>
 8001b6a:	2330      	movs	r3, #48	@ 0x30
 8001b6c:	3130      	adds	r1, #48	@ 0x30
 8001b6e:	7083      	strb	r3, [r0, #2]
 8001b70:	70c1      	strb	r1, [r0, #3]
 8001b72:	1d03      	adds	r3, r0, #4
 8001b74:	e7f1      	b.n	8001b5a <__exponent+0x58>
	...

08001b78 <_printf_float>:
 8001b78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001b7c:	b08d      	sub	sp, #52	@ 0x34
 8001b7e:	460c      	mov	r4, r1
 8001b80:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8001b84:	4616      	mov	r6, r2
 8001b86:	461f      	mov	r7, r3
 8001b88:	4605      	mov	r5, r0
 8001b8a:	f000 fcdb 	bl	8002544 <_localeconv_r>
 8001b8e:	6803      	ldr	r3, [r0, #0]
 8001b90:	9304      	str	r3, [sp, #16]
 8001b92:	4618      	mov	r0, r3
 8001b94:	f7fe fb74 	bl	8000280 <strlen>
 8001b98:	2300      	movs	r3, #0
 8001b9a:	930a      	str	r3, [sp, #40]	@ 0x28
 8001b9c:	f8d8 3000 	ldr.w	r3, [r8]
 8001ba0:	9005      	str	r0, [sp, #20]
 8001ba2:	3307      	adds	r3, #7
 8001ba4:	f023 0307 	bic.w	r3, r3, #7
 8001ba8:	f103 0208 	add.w	r2, r3, #8
 8001bac:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001bb0:	f8d4 b000 	ldr.w	fp, [r4]
 8001bb4:	f8c8 2000 	str.w	r2, [r8]
 8001bb8:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001bbc:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001bc0:	9307      	str	r3, [sp, #28]
 8001bc2:	f8cd 8018 	str.w	r8, [sp, #24]
 8001bc6:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001bca:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001bce:	4b9c      	ldr	r3, [pc, #624]	@ (8001e40 <_printf_float+0x2c8>)
 8001bd0:	f04f 32ff 	mov.w	r2, #4294967295
 8001bd4:	f7fe ffb2 	bl	8000b3c <__aeabi_dcmpun>
 8001bd8:	bb70      	cbnz	r0, 8001c38 <_printf_float+0xc0>
 8001bda:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001bde:	4b98      	ldr	r3, [pc, #608]	@ (8001e40 <_printf_float+0x2c8>)
 8001be0:	f04f 32ff 	mov.w	r2, #4294967295
 8001be4:	f7fe ff8c 	bl	8000b00 <__aeabi_dcmple>
 8001be8:	bb30      	cbnz	r0, 8001c38 <_printf_float+0xc0>
 8001bea:	2200      	movs	r2, #0
 8001bec:	2300      	movs	r3, #0
 8001bee:	4640      	mov	r0, r8
 8001bf0:	4649      	mov	r1, r9
 8001bf2:	f7fe ff7b 	bl	8000aec <__aeabi_dcmplt>
 8001bf6:	b110      	cbz	r0, 8001bfe <_printf_float+0x86>
 8001bf8:	232d      	movs	r3, #45	@ 0x2d
 8001bfa:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001bfe:	4a91      	ldr	r2, [pc, #580]	@ (8001e44 <_printf_float+0x2cc>)
 8001c00:	4b91      	ldr	r3, [pc, #580]	@ (8001e48 <_printf_float+0x2d0>)
 8001c02:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001c06:	bf94      	ite	ls
 8001c08:	4690      	movls	r8, r2
 8001c0a:	4698      	movhi	r8, r3
 8001c0c:	2303      	movs	r3, #3
 8001c0e:	6123      	str	r3, [r4, #16]
 8001c10:	f02b 0304 	bic.w	r3, fp, #4
 8001c14:	6023      	str	r3, [r4, #0]
 8001c16:	f04f 0900 	mov.w	r9, #0
 8001c1a:	9700      	str	r7, [sp, #0]
 8001c1c:	4633      	mov	r3, r6
 8001c1e:	aa0b      	add	r2, sp, #44	@ 0x2c
 8001c20:	4621      	mov	r1, r4
 8001c22:	4628      	mov	r0, r5
 8001c24:	f000 f9d2 	bl	8001fcc <_printf_common>
 8001c28:	3001      	adds	r0, #1
 8001c2a:	f040 808d 	bne.w	8001d48 <_printf_float+0x1d0>
 8001c2e:	f04f 30ff 	mov.w	r0, #4294967295
 8001c32:	b00d      	add	sp, #52	@ 0x34
 8001c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001c38:	4642      	mov	r2, r8
 8001c3a:	464b      	mov	r3, r9
 8001c3c:	4640      	mov	r0, r8
 8001c3e:	4649      	mov	r1, r9
 8001c40:	f7fe ff7c 	bl	8000b3c <__aeabi_dcmpun>
 8001c44:	b140      	cbz	r0, 8001c58 <_printf_float+0xe0>
 8001c46:	464b      	mov	r3, r9
 8001c48:	2b00      	cmp	r3, #0
 8001c4a:	bfbc      	itt	lt
 8001c4c:	232d      	movlt	r3, #45	@ 0x2d
 8001c4e:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8001c52:	4a7e      	ldr	r2, [pc, #504]	@ (8001e4c <_printf_float+0x2d4>)
 8001c54:	4b7e      	ldr	r3, [pc, #504]	@ (8001e50 <_printf_float+0x2d8>)
 8001c56:	e7d4      	b.n	8001c02 <_printf_float+0x8a>
 8001c58:	6863      	ldr	r3, [r4, #4]
 8001c5a:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8001c5e:	9206      	str	r2, [sp, #24]
 8001c60:	1c5a      	adds	r2, r3, #1
 8001c62:	d13b      	bne.n	8001cdc <_printf_float+0x164>
 8001c64:	2306      	movs	r3, #6
 8001c66:	6063      	str	r3, [r4, #4]
 8001c68:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8001c6c:	2300      	movs	r3, #0
 8001c6e:	6022      	str	r2, [r4, #0]
 8001c70:	9303      	str	r3, [sp, #12]
 8001c72:	ab0a      	add	r3, sp, #40	@ 0x28
 8001c74:	e9cd a301 	strd	sl, r3, [sp, #4]
 8001c78:	ab09      	add	r3, sp, #36	@ 0x24
 8001c7a:	9300      	str	r3, [sp, #0]
 8001c7c:	6861      	ldr	r1, [r4, #4]
 8001c7e:	ec49 8b10 	vmov	d0, r8, r9
 8001c82:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8001c86:	4628      	mov	r0, r5
 8001c88:	f7ff fed6 	bl	8001a38 <__cvt>
 8001c8c:	9b06      	ldr	r3, [sp, #24]
 8001c8e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8001c90:	2b47      	cmp	r3, #71	@ 0x47
 8001c92:	4680      	mov	r8, r0
 8001c94:	d129      	bne.n	8001cea <_printf_float+0x172>
 8001c96:	1cc8      	adds	r0, r1, #3
 8001c98:	db02      	blt.n	8001ca0 <_printf_float+0x128>
 8001c9a:	6863      	ldr	r3, [r4, #4]
 8001c9c:	4299      	cmp	r1, r3
 8001c9e:	dd41      	ble.n	8001d24 <_printf_float+0x1ac>
 8001ca0:	f1aa 0a02 	sub.w	sl, sl, #2
 8001ca4:	fa5f fa8a 	uxtb.w	sl, sl
 8001ca8:	3901      	subs	r1, #1
 8001caa:	4652      	mov	r2, sl
 8001cac:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001cb0:	9109      	str	r1, [sp, #36]	@ 0x24
 8001cb2:	f7ff ff26 	bl	8001b02 <__exponent>
 8001cb6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001cb8:	1813      	adds	r3, r2, r0
 8001cba:	2a01      	cmp	r2, #1
 8001cbc:	4681      	mov	r9, r0
 8001cbe:	6123      	str	r3, [r4, #16]
 8001cc0:	dc02      	bgt.n	8001cc8 <_printf_float+0x150>
 8001cc2:	6822      	ldr	r2, [r4, #0]
 8001cc4:	07d2      	lsls	r2, r2, #31
 8001cc6:	d501      	bpl.n	8001ccc <_printf_float+0x154>
 8001cc8:	3301      	adds	r3, #1
 8001cca:	6123      	str	r3, [r4, #16]
 8001ccc:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8001cd0:	2b00      	cmp	r3, #0
 8001cd2:	d0a2      	beq.n	8001c1a <_printf_float+0xa2>
 8001cd4:	232d      	movs	r3, #45	@ 0x2d
 8001cd6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001cda:	e79e      	b.n	8001c1a <_printf_float+0xa2>
 8001cdc:	9a06      	ldr	r2, [sp, #24]
 8001cde:	2a47      	cmp	r2, #71	@ 0x47
 8001ce0:	d1c2      	bne.n	8001c68 <_printf_float+0xf0>
 8001ce2:	2b00      	cmp	r3, #0
 8001ce4:	d1c0      	bne.n	8001c68 <_printf_float+0xf0>
 8001ce6:	2301      	movs	r3, #1
 8001ce8:	e7bd      	b.n	8001c66 <_printf_float+0xee>
 8001cea:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001cee:	d9db      	bls.n	8001ca8 <_printf_float+0x130>
 8001cf0:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001cf4:	d118      	bne.n	8001d28 <_printf_float+0x1b0>
 8001cf6:	2900      	cmp	r1, #0
 8001cf8:	6863      	ldr	r3, [r4, #4]
 8001cfa:	dd0b      	ble.n	8001d14 <_printf_float+0x19c>
 8001cfc:	6121      	str	r1, [r4, #16]
 8001cfe:	b913      	cbnz	r3, 8001d06 <_printf_float+0x18e>
 8001d00:	6822      	ldr	r2, [r4, #0]
 8001d02:	07d0      	lsls	r0, r2, #31
 8001d04:	d502      	bpl.n	8001d0c <_printf_float+0x194>
 8001d06:	3301      	adds	r3, #1
 8001d08:	440b      	add	r3, r1
 8001d0a:	6123      	str	r3, [r4, #16]
 8001d0c:	65a1      	str	r1, [r4, #88]	@ 0x58
 8001d0e:	f04f 0900 	mov.w	r9, #0
 8001d12:	e7db      	b.n	8001ccc <_printf_float+0x154>
 8001d14:	b913      	cbnz	r3, 8001d1c <_printf_float+0x1a4>
 8001d16:	6822      	ldr	r2, [r4, #0]
 8001d18:	07d2      	lsls	r2, r2, #31
 8001d1a:	d501      	bpl.n	8001d20 <_printf_float+0x1a8>
 8001d1c:	3302      	adds	r3, #2
 8001d1e:	e7f4      	b.n	8001d0a <_printf_float+0x192>
 8001d20:	2301      	movs	r3, #1
 8001d22:	e7f2      	b.n	8001d0a <_printf_float+0x192>
 8001d24:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8001d28:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001d2a:	4299      	cmp	r1, r3
 8001d2c:	db05      	blt.n	8001d3a <_printf_float+0x1c2>
 8001d2e:	6823      	ldr	r3, [r4, #0]
 8001d30:	6121      	str	r1, [r4, #16]
 8001d32:	07d8      	lsls	r0, r3, #31
 8001d34:	d5ea      	bpl.n	8001d0c <_printf_float+0x194>
 8001d36:	1c4b      	adds	r3, r1, #1
 8001d38:	e7e7      	b.n	8001d0a <_printf_float+0x192>
 8001d3a:	2900      	cmp	r1, #0
 8001d3c:	bfd4      	ite	le
 8001d3e:	f1c1 0202 	rsble	r2, r1, #2
 8001d42:	2201      	movgt	r2, #1
 8001d44:	4413      	add	r3, r2
 8001d46:	e7e0      	b.n	8001d0a <_printf_float+0x192>
 8001d48:	6823      	ldr	r3, [r4, #0]
 8001d4a:	055a      	lsls	r2, r3, #21
 8001d4c:	d407      	bmi.n	8001d5e <_printf_float+0x1e6>
 8001d4e:	6923      	ldr	r3, [r4, #16]
 8001d50:	4642      	mov	r2, r8
 8001d52:	4631      	mov	r1, r6
 8001d54:	4628      	mov	r0, r5
 8001d56:	47b8      	blx	r7
 8001d58:	3001      	adds	r0, #1
 8001d5a:	d12b      	bne.n	8001db4 <_printf_float+0x23c>
 8001d5c:	e767      	b.n	8001c2e <_printf_float+0xb6>
 8001d5e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001d62:	f240 80dd 	bls.w	8001f20 <_printf_float+0x3a8>
 8001d66:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001d6a:	2200      	movs	r2, #0
 8001d6c:	2300      	movs	r3, #0
 8001d6e:	f7fe feb3 	bl	8000ad8 <__aeabi_dcmpeq>
 8001d72:	2800      	cmp	r0, #0
 8001d74:	d033      	beq.n	8001dde <_printf_float+0x266>
 8001d76:	4a37      	ldr	r2, [pc, #220]	@ (8001e54 <_printf_float+0x2dc>)
 8001d78:	2301      	movs	r3, #1
 8001d7a:	4631      	mov	r1, r6
 8001d7c:	4628      	mov	r0, r5
 8001d7e:	47b8      	blx	r7
 8001d80:	3001      	adds	r0, #1
 8001d82:	f43f af54 	beq.w	8001c2e <_printf_float+0xb6>
 8001d86:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8001d8a:	4543      	cmp	r3, r8
 8001d8c:	db02      	blt.n	8001d94 <_printf_float+0x21c>
 8001d8e:	6823      	ldr	r3, [r4, #0]
 8001d90:	07d8      	lsls	r0, r3, #31
 8001d92:	d50f      	bpl.n	8001db4 <_printf_float+0x23c>
 8001d94:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001d98:	4631      	mov	r1, r6
 8001d9a:	4628      	mov	r0, r5
 8001d9c:	47b8      	blx	r7
 8001d9e:	3001      	adds	r0, #1
 8001da0:	f43f af45 	beq.w	8001c2e <_printf_float+0xb6>
 8001da4:	f04f 0900 	mov.w	r9, #0
 8001da8:	f108 38ff 	add.w	r8, r8, #4294967295
 8001dac:	f104 0a1a 	add.w	sl, r4, #26
 8001db0:	45c8      	cmp	r8, r9
 8001db2:	dc09      	bgt.n	8001dc8 <_printf_float+0x250>
 8001db4:	6823      	ldr	r3, [r4, #0]
 8001db6:	079b      	lsls	r3, r3, #30
 8001db8:	f100 8103 	bmi.w	8001fc2 <_printf_float+0x44a>
 8001dbc:	68e0      	ldr	r0, [r4, #12]
 8001dbe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8001dc0:	4298      	cmp	r0, r3
 8001dc2:	bfb8      	it	lt
 8001dc4:	4618      	movlt	r0, r3
 8001dc6:	e734      	b.n	8001c32 <_printf_float+0xba>
 8001dc8:	2301      	movs	r3, #1
 8001dca:	4652      	mov	r2, sl
 8001dcc:	4631      	mov	r1, r6
 8001dce:	4628      	mov	r0, r5
 8001dd0:	47b8      	blx	r7
 8001dd2:	3001      	adds	r0, #1
 8001dd4:	f43f af2b 	beq.w	8001c2e <_printf_float+0xb6>
 8001dd8:	f109 0901 	add.w	r9, r9, #1
 8001ddc:	e7e8      	b.n	8001db0 <_printf_float+0x238>
 8001dde:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001de0:	2b00      	cmp	r3, #0
 8001de2:	dc39      	bgt.n	8001e58 <_printf_float+0x2e0>
 8001de4:	4a1b      	ldr	r2, [pc, #108]	@ (8001e54 <_printf_float+0x2dc>)
 8001de6:	2301      	movs	r3, #1
 8001de8:	4631      	mov	r1, r6
 8001dea:	4628      	mov	r0, r5
 8001dec:	47b8      	blx	r7
 8001dee:	3001      	adds	r0, #1
 8001df0:	f43f af1d 	beq.w	8001c2e <_printf_float+0xb6>
 8001df4:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8001df8:	ea59 0303 	orrs.w	r3, r9, r3
 8001dfc:	d102      	bne.n	8001e04 <_printf_float+0x28c>
 8001dfe:	6823      	ldr	r3, [r4, #0]
 8001e00:	07d9      	lsls	r1, r3, #31
 8001e02:	d5d7      	bpl.n	8001db4 <_printf_float+0x23c>
 8001e04:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001e08:	4631      	mov	r1, r6
 8001e0a:	4628      	mov	r0, r5
 8001e0c:	47b8      	blx	r7
 8001e0e:	3001      	adds	r0, #1
 8001e10:	f43f af0d 	beq.w	8001c2e <_printf_float+0xb6>
 8001e14:	f04f 0a00 	mov.w	sl, #0
 8001e18:	f104 0b1a 	add.w	fp, r4, #26
 8001e1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001e1e:	425b      	negs	r3, r3
 8001e20:	4553      	cmp	r3, sl
 8001e22:	dc01      	bgt.n	8001e28 <_printf_float+0x2b0>
 8001e24:	464b      	mov	r3, r9
 8001e26:	e793      	b.n	8001d50 <_printf_float+0x1d8>
 8001e28:	2301      	movs	r3, #1
 8001e2a:	465a      	mov	r2, fp
 8001e2c:	4631      	mov	r1, r6
 8001e2e:	4628      	mov	r0, r5
 8001e30:	47b8      	blx	r7
 8001e32:	3001      	adds	r0, #1
 8001e34:	f43f aefb 	beq.w	8001c2e <_printf_float+0xb6>
 8001e38:	f10a 0a01 	add.w	sl, sl, #1
 8001e3c:	e7ee      	b.n	8001e1c <_printf_float+0x2a4>
 8001e3e:	bf00      	nop
 8001e40:	7fefffff 	.word	0x7fefffff
 8001e44:	08004ea9 	.word	0x08004ea9
 8001e48:	08004ead 	.word	0x08004ead
 8001e4c:	08004eb1 	.word	0x08004eb1
 8001e50:	08004eb5 	.word	0x08004eb5
 8001e54:	08004eb9 	.word	0x08004eb9
 8001e58:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001e5a:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001e5e:	4553      	cmp	r3, sl
 8001e60:	bfa8      	it	ge
 8001e62:	4653      	movge	r3, sl
 8001e64:	2b00      	cmp	r3, #0
 8001e66:	4699      	mov	r9, r3
 8001e68:	dc36      	bgt.n	8001ed8 <_printf_float+0x360>
 8001e6a:	f04f 0b00 	mov.w	fp, #0
 8001e6e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001e72:	f104 021a 	add.w	r2, r4, #26
 8001e76:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001e78:	9306      	str	r3, [sp, #24]
 8001e7a:	eba3 0309 	sub.w	r3, r3, r9
 8001e7e:	455b      	cmp	r3, fp
 8001e80:	dc31      	bgt.n	8001ee6 <_printf_float+0x36e>
 8001e82:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001e84:	459a      	cmp	sl, r3
 8001e86:	dc3a      	bgt.n	8001efe <_printf_float+0x386>
 8001e88:	6823      	ldr	r3, [r4, #0]
 8001e8a:	07da      	lsls	r2, r3, #31
 8001e8c:	d437      	bmi.n	8001efe <_printf_float+0x386>
 8001e8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001e90:	ebaa 0903 	sub.w	r9, sl, r3
 8001e94:	9b06      	ldr	r3, [sp, #24]
 8001e96:	ebaa 0303 	sub.w	r3, sl, r3
 8001e9a:	4599      	cmp	r9, r3
 8001e9c:	bfa8      	it	ge
 8001e9e:	4699      	movge	r9, r3
 8001ea0:	f1b9 0f00 	cmp.w	r9, #0
 8001ea4:	dc33      	bgt.n	8001f0e <_printf_float+0x396>
 8001ea6:	f04f 0800 	mov.w	r8, #0
 8001eaa:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001eae:	f104 0b1a 	add.w	fp, r4, #26
 8001eb2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001eb4:	ebaa 0303 	sub.w	r3, sl, r3
 8001eb8:	eba3 0309 	sub.w	r3, r3, r9
 8001ebc:	4543      	cmp	r3, r8
 8001ebe:	f77f af79 	ble.w	8001db4 <_printf_float+0x23c>
 8001ec2:	2301      	movs	r3, #1
 8001ec4:	465a      	mov	r2, fp
 8001ec6:	4631      	mov	r1, r6
 8001ec8:	4628      	mov	r0, r5
 8001eca:	47b8      	blx	r7
 8001ecc:	3001      	adds	r0, #1
 8001ece:	f43f aeae 	beq.w	8001c2e <_printf_float+0xb6>
 8001ed2:	f108 0801 	add.w	r8, r8, #1
 8001ed6:	e7ec      	b.n	8001eb2 <_printf_float+0x33a>
 8001ed8:	4642      	mov	r2, r8
 8001eda:	4631      	mov	r1, r6
 8001edc:	4628      	mov	r0, r5
 8001ede:	47b8      	blx	r7
 8001ee0:	3001      	adds	r0, #1
 8001ee2:	d1c2      	bne.n	8001e6a <_printf_float+0x2f2>
 8001ee4:	e6a3      	b.n	8001c2e <_printf_float+0xb6>
 8001ee6:	2301      	movs	r3, #1
 8001ee8:	4631      	mov	r1, r6
 8001eea:	4628      	mov	r0, r5
 8001eec:	9206      	str	r2, [sp, #24]
 8001eee:	47b8      	blx	r7
 8001ef0:	3001      	adds	r0, #1
 8001ef2:	f43f ae9c 	beq.w	8001c2e <_printf_float+0xb6>
 8001ef6:	9a06      	ldr	r2, [sp, #24]
 8001ef8:	f10b 0b01 	add.w	fp, fp, #1
 8001efc:	e7bb      	b.n	8001e76 <_printf_float+0x2fe>
 8001efe:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001f02:	4631      	mov	r1, r6
 8001f04:	4628      	mov	r0, r5
 8001f06:	47b8      	blx	r7
 8001f08:	3001      	adds	r0, #1
 8001f0a:	d1c0      	bne.n	8001e8e <_printf_float+0x316>
 8001f0c:	e68f      	b.n	8001c2e <_printf_float+0xb6>
 8001f0e:	9a06      	ldr	r2, [sp, #24]
 8001f10:	464b      	mov	r3, r9
 8001f12:	4442      	add	r2, r8
 8001f14:	4631      	mov	r1, r6
 8001f16:	4628      	mov	r0, r5
 8001f18:	47b8      	blx	r7
 8001f1a:	3001      	adds	r0, #1
 8001f1c:	d1c3      	bne.n	8001ea6 <_printf_float+0x32e>
 8001f1e:	e686      	b.n	8001c2e <_printf_float+0xb6>
 8001f20:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001f24:	f1ba 0f01 	cmp.w	sl, #1
 8001f28:	dc01      	bgt.n	8001f2e <_printf_float+0x3b6>
 8001f2a:	07db      	lsls	r3, r3, #31
 8001f2c:	d536      	bpl.n	8001f9c <_printf_float+0x424>
 8001f2e:	2301      	movs	r3, #1
 8001f30:	4642      	mov	r2, r8
 8001f32:	4631      	mov	r1, r6
 8001f34:	4628      	mov	r0, r5
 8001f36:	47b8      	blx	r7
 8001f38:	3001      	adds	r0, #1
 8001f3a:	f43f ae78 	beq.w	8001c2e <_printf_float+0xb6>
 8001f3e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001f42:	4631      	mov	r1, r6
 8001f44:	4628      	mov	r0, r5
 8001f46:	47b8      	blx	r7
 8001f48:	3001      	adds	r0, #1
 8001f4a:	f43f ae70 	beq.w	8001c2e <_printf_float+0xb6>
 8001f4e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001f52:	2200      	movs	r2, #0
 8001f54:	2300      	movs	r3, #0
 8001f56:	f10a 3aff 	add.w	sl, sl, #4294967295
 8001f5a:	f7fe fdbd 	bl	8000ad8 <__aeabi_dcmpeq>
 8001f5e:	b9c0      	cbnz	r0, 8001f92 <_printf_float+0x41a>
 8001f60:	4653      	mov	r3, sl
 8001f62:	f108 0201 	add.w	r2, r8, #1
 8001f66:	4631      	mov	r1, r6
 8001f68:	4628      	mov	r0, r5
 8001f6a:	47b8      	blx	r7
 8001f6c:	3001      	adds	r0, #1
 8001f6e:	d10c      	bne.n	8001f8a <_printf_float+0x412>
 8001f70:	e65d      	b.n	8001c2e <_printf_float+0xb6>
 8001f72:	2301      	movs	r3, #1
 8001f74:	465a      	mov	r2, fp
 8001f76:	4631      	mov	r1, r6
 8001f78:	4628      	mov	r0, r5
 8001f7a:	47b8      	blx	r7
 8001f7c:	3001      	adds	r0, #1
 8001f7e:	f43f ae56 	beq.w	8001c2e <_printf_float+0xb6>
 8001f82:	f108 0801 	add.w	r8, r8, #1
 8001f86:	45d0      	cmp	r8, sl
 8001f88:	dbf3      	blt.n	8001f72 <_printf_float+0x3fa>
 8001f8a:	464b      	mov	r3, r9
 8001f8c:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8001f90:	e6df      	b.n	8001d52 <_printf_float+0x1da>
 8001f92:	f04f 0800 	mov.w	r8, #0
 8001f96:	f104 0b1a 	add.w	fp, r4, #26
 8001f9a:	e7f4      	b.n	8001f86 <_printf_float+0x40e>
 8001f9c:	2301      	movs	r3, #1
 8001f9e:	4642      	mov	r2, r8
 8001fa0:	e7e1      	b.n	8001f66 <_printf_float+0x3ee>
 8001fa2:	2301      	movs	r3, #1
 8001fa4:	464a      	mov	r2, r9
 8001fa6:	4631      	mov	r1, r6
 8001fa8:	4628      	mov	r0, r5
 8001faa:	47b8      	blx	r7
 8001fac:	3001      	adds	r0, #1
 8001fae:	f43f ae3e 	beq.w	8001c2e <_printf_float+0xb6>
 8001fb2:	f108 0801 	add.w	r8, r8, #1
 8001fb6:	68e3      	ldr	r3, [r4, #12]
 8001fb8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8001fba:	1a5b      	subs	r3, r3, r1
 8001fbc:	4543      	cmp	r3, r8
 8001fbe:	dcf0      	bgt.n	8001fa2 <_printf_float+0x42a>
 8001fc0:	e6fc      	b.n	8001dbc <_printf_float+0x244>
 8001fc2:	f04f 0800 	mov.w	r8, #0
 8001fc6:	f104 0919 	add.w	r9, r4, #25
 8001fca:	e7f4      	b.n	8001fb6 <_printf_float+0x43e>

08001fcc <_printf_common>:
 8001fcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001fd0:	4616      	mov	r6, r2
 8001fd2:	4698      	mov	r8, r3
 8001fd4:	688a      	ldr	r2, [r1, #8]
 8001fd6:	690b      	ldr	r3, [r1, #16]
 8001fd8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001fdc:	4293      	cmp	r3, r2
 8001fde:	bfb8      	it	lt
 8001fe0:	4613      	movlt	r3, r2
 8001fe2:	6033      	str	r3, [r6, #0]
 8001fe4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001fe8:	4607      	mov	r7, r0
 8001fea:	460c      	mov	r4, r1
 8001fec:	b10a      	cbz	r2, 8001ff2 <_printf_common+0x26>
 8001fee:	3301      	adds	r3, #1
 8001ff0:	6033      	str	r3, [r6, #0]
 8001ff2:	6823      	ldr	r3, [r4, #0]
 8001ff4:	0699      	lsls	r1, r3, #26
 8001ff6:	bf42      	ittt	mi
 8001ff8:	6833      	ldrmi	r3, [r6, #0]
 8001ffa:	3302      	addmi	r3, #2
 8001ffc:	6033      	strmi	r3, [r6, #0]
 8001ffe:	6825      	ldr	r5, [r4, #0]
 8002000:	f015 0506 	ands.w	r5, r5, #6
 8002004:	d106      	bne.n	8002014 <_printf_common+0x48>
 8002006:	f104 0a19 	add.w	sl, r4, #25
 800200a:	68e3      	ldr	r3, [r4, #12]
 800200c:	6832      	ldr	r2, [r6, #0]
 800200e:	1a9b      	subs	r3, r3, r2
 8002010:	42ab      	cmp	r3, r5
 8002012:	dc26      	bgt.n	8002062 <_printf_common+0x96>
 8002014:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002018:	6822      	ldr	r2, [r4, #0]
 800201a:	3b00      	subs	r3, #0
 800201c:	bf18      	it	ne
 800201e:	2301      	movne	r3, #1
 8002020:	0692      	lsls	r2, r2, #26
 8002022:	d42b      	bmi.n	800207c <_printf_common+0xb0>
 8002024:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8002028:	4641      	mov	r1, r8
 800202a:	4638      	mov	r0, r7
 800202c:	47c8      	blx	r9
 800202e:	3001      	adds	r0, #1
 8002030:	d01e      	beq.n	8002070 <_printf_common+0xa4>
 8002032:	6823      	ldr	r3, [r4, #0]
 8002034:	6922      	ldr	r2, [r4, #16]
 8002036:	f003 0306 	and.w	r3, r3, #6
 800203a:	2b04      	cmp	r3, #4
 800203c:	bf02      	ittt	eq
 800203e:	68e5      	ldreq	r5, [r4, #12]
 8002040:	6833      	ldreq	r3, [r6, #0]
 8002042:	1aed      	subeq	r5, r5, r3
 8002044:	68a3      	ldr	r3, [r4, #8]
 8002046:	bf0c      	ite	eq
 8002048:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800204c:	2500      	movne	r5, #0
 800204e:	4293      	cmp	r3, r2
 8002050:	bfc4      	itt	gt
 8002052:	1a9b      	subgt	r3, r3, r2
 8002054:	18ed      	addgt	r5, r5, r3
 8002056:	2600      	movs	r6, #0
 8002058:	341a      	adds	r4, #26
 800205a:	42b5      	cmp	r5, r6
 800205c:	d11a      	bne.n	8002094 <_printf_common+0xc8>
 800205e:	2000      	movs	r0, #0
 8002060:	e008      	b.n	8002074 <_printf_common+0xa8>
 8002062:	2301      	movs	r3, #1
 8002064:	4652      	mov	r2, sl
 8002066:	4641      	mov	r1, r8
 8002068:	4638      	mov	r0, r7
 800206a:	47c8      	blx	r9
 800206c:	3001      	adds	r0, #1
 800206e:	d103      	bne.n	8002078 <_printf_common+0xac>
 8002070:	f04f 30ff 	mov.w	r0, #4294967295
 8002074:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002078:	3501      	adds	r5, #1
 800207a:	e7c6      	b.n	800200a <_printf_common+0x3e>
 800207c:	18e1      	adds	r1, r4, r3
 800207e:	1c5a      	adds	r2, r3, #1
 8002080:	2030      	movs	r0, #48	@ 0x30
 8002082:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8002086:	4422      	add	r2, r4
 8002088:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800208c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8002090:	3302      	adds	r3, #2
 8002092:	e7c7      	b.n	8002024 <_printf_common+0x58>
 8002094:	2301      	movs	r3, #1
 8002096:	4622      	mov	r2, r4
 8002098:	4641      	mov	r1, r8
 800209a:	4638      	mov	r0, r7
 800209c:	47c8      	blx	r9
 800209e:	3001      	adds	r0, #1
 80020a0:	d0e6      	beq.n	8002070 <_printf_common+0xa4>
 80020a2:	3601      	adds	r6, #1
 80020a4:	e7d9      	b.n	800205a <_printf_common+0x8e>
	...

080020a8 <_printf_i>:
 80020a8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80020ac:	7e0f      	ldrb	r7, [r1, #24]
 80020ae:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80020b0:	2f78      	cmp	r7, #120	@ 0x78
 80020b2:	4691      	mov	r9, r2
 80020b4:	4680      	mov	r8, r0
 80020b6:	460c      	mov	r4, r1
 80020b8:	469a      	mov	sl, r3
 80020ba:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80020be:	d807      	bhi.n	80020d0 <_printf_i+0x28>
 80020c0:	2f62      	cmp	r7, #98	@ 0x62
 80020c2:	d80a      	bhi.n	80020da <_printf_i+0x32>
 80020c4:	2f00      	cmp	r7, #0
 80020c6:	f000 80d2 	beq.w	800226e <_printf_i+0x1c6>
 80020ca:	2f58      	cmp	r7, #88	@ 0x58
 80020cc:	f000 80b9 	beq.w	8002242 <_printf_i+0x19a>
 80020d0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80020d4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80020d8:	e03a      	b.n	8002150 <_printf_i+0xa8>
 80020da:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80020de:	2b15      	cmp	r3, #21
 80020e0:	d8f6      	bhi.n	80020d0 <_printf_i+0x28>
 80020e2:	a101      	add	r1, pc, #4	@ (adr r1, 80020e8 <_printf_i+0x40>)
 80020e4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80020e8:	08002141 	.word	0x08002141
 80020ec:	08002155 	.word	0x08002155
 80020f0:	080020d1 	.word	0x080020d1
 80020f4:	080020d1 	.word	0x080020d1
 80020f8:	080020d1 	.word	0x080020d1
 80020fc:	080020d1 	.word	0x080020d1
 8002100:	08002155 	.word	0x08002155
 8002104:	080020d1 	.word	0x080020d1
 8002108:	080020d1 	.word	0x080020d1
 800210c:	080020d1 	.word	0x080020d1
 8002110:	080020d1 	.word	0x080020d1
 8002114:	08002255 	.word	0x08002255
 8002118:	0800217f 	.word	0x0800217f
 800211c:	0800220f 	.word	0x0800220f
 8002120:	080020d1 	.word	0x080020d1
 8002124:	080020d1 	.word	0x080020d1
 8002128:	08002277 	.word	0x08002277
 800212c:	080020d1 	.word	0x080020d1
 8002130:	0800217f 	.word	0x0800217f
 8002134:	080020d1 	.word	0x080020d1
 8002138:	080020d1 	.word	0x080020d1
 800213c:	08002217 	.word	0x08002217
 8002140:	6833      	ldr	r3, [r6, #0]
 8002142:	1d1a      	adds	r2, r3, #4
 8002144:	681b      	ldr	r3, [r3, #0]
 8002146:	6032      	str	r2, [r6, #0]
 8002148:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800214c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8002150:	2301      	movs	r3, #1
 8002152:	e09d      	b.n	8002290 <_printf_i+0x1e8>
 8002154:	6833      	ldr	r3, [r6, #0]
 8002156:	6820      	ldr	r0, [r4, #0]
 8002158:	1d19      	adds	r1, r3, #4
 800215a:	6031      	str	r1, [r6, #0]
 800215c:	0606      	lsls	r6, r0, #24
 800215e:	d501      	bpl.n	8002164 <_printf_i+0xbc>
 8002160:	681d      	ldr	r5, [r3, #0]
 8002162:	e003      	b.n	800216c <_printf_i+0xc4>
 8002164:	0645      	lsls	r5, r0, #25
 8002166:	d5fb      	bpl.n	8002160 <_printf_i+0xb8>
 8002168:	f9b3 5000 	ldrsh.w	r5, [r3]
 800216c:	2d00      	cmp	r5, #0
 800216e:	da03      	bge.n	8002178 <_printf_i+0xd0>
 8002170:	232d      	movs	r3, #45	@ 0x2d
 8002172:	426d      	negs	r5, r5
 8002174:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002178:	4859      	ldr	r0, [pc, #356]	@ (80022e0 <_printf_i+0x238>)
 800217a:	230a      	movs	r3, #10
 800217c:	e011      	b.n	80021a2 <_printf_i+0xfa>
 800217e:	6821      	ldr	r1, [r4, #0]
 8002180:	6833      	ldr	r3, [r6, #0]
 8002182:	0608      	lsls	r0, r1, #24
 8002184:	f853 5b04 	ldr.w	r5, [r3], #4
 8002188:	d402      	bmi.n	8002190 <_printf_i+0xe8>
 800218a:	0649      	lsls	r1, r1, #25
 800218c:	bf48      	it	mi
 800218e:	b2ad      	uxthmi	r5, r5
 8002190:	2f6f      	cmp	r7, #111	@ 0x6f
 8002192:	4853      	ldr	r0, [pc, #332]	@ (80022e0 <_printf_i+0x238>)
 8002194:	6033      	str	r3, [r6, #0]
 8002196:	bf14      	ite	ne
 8002198:	230a      	movne	r3, #10
 800219a:	2308      	moveq	r3, #8
 800219c:	2100      	movs	r1, #0
 800219e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80021a2:	6866      	ldr	r6, [r4, #4]
 80021a4:	60a6      	str	r6, [r4, #8]
 80021a6:	2e00      	cmp	r6, #0
 80021a8:	bfa2      	ittt	ge
 80021aa:	6821      	ldrge	r1, [r4, #0]
 80021ac:	f021 0104 	bicge.w	r1, r1, #4
 80021b0:	6021      	strge	r1, [r4, #0]
 80021b2:	b90d      	cbnz	r5, 80021b8 <_printf_i+0x110>
 80021b4:	2e00      	cmp	r6, #0
 80021b6:	d04b      	beq.n	8002250 <_printf_i+0x1a8>
 80021b8:	4616      	mov	r6, r2
 80021ba:	fbb5 f1f3 	udiv	r1, r5, r3
 80021be:	fb03 5711 	mls	r7, r3, r1, r5
 80021c2:	5dc7      	ldrb	r7, [r0, r7]
 80021c4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80021c8:	462f      	mov	r7, r5
 80021ca:	42bb      	cmp	r3, r7
 80021cc:	460d      	mov	r5, r1
 80021ce:	d9f4      	bls.n	80021ba <_printf_i+0x112>
 80021d0:	2b08      	cmp	r3, #8
 80021d2:	d10b      	bne.n	80021ec <_printf_i+0x144>
 80021d4:	6823      	ldr	r3, [r4, #0]
 80021d6:	07df      	lsls	r7, r3, #31
 80021d8:	d508      	bpl.n	80021ec <_printf_i+0x144>
 80021da:	6923      	ldr	r3, [r4, #16]
 80021dc:	6861      	ldr	r1, [r4, #4]
 80021de:	4299      	cmp	r1, r3
 80021e0:	bfde      	ittt	le
 80021e2:	2330      	movle	r3, #48	@ 0x30
 80021e4:	f806 3c01 	strble.w	r3, [r6, #-1]
 80021e8:	f106 36ff 	addle.w	r6, r6, #4294967295
 80021ec:	1b92      	subs	r2, r2, r6
 80021ee:	6122      	str	r2, [r4, #16]
 80021f0:	f8cd a000 	str.w	sl, [sp]
 80021f4:	464b      	mov	r3, r9
 80021f6:	aa03      	add	r2, sp, #12
 80021f8:	4621      	mov	r1, r4
 80021fa:	4640      	mov	r0, r8
 80021fc:	f7ff fee6 	bl	8001fcc <_printf_common>
 8002200:	3001      	adds	r0, #1
 8002202:	d14a      	bne.n	800229a <_printf_i+0x1f2>
 8002204:	f04f 30ff 	mov.w	r0, #4294967295
 8002208:	b004      	add	sp, #16
 800220a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800220e:	6823      	ldr	r3, [r4, #0]
 8002210:	f043 0320 	orr.w	r3, r3, #32
 8002214:	6023      	str	r3, [r4, #0]
 8002216:	4833      	ldr	r0, [pc, #204]	@ (80022e4 <_printf_i+0x23c>)
 8002218:	2778      	movs	r7, #120	@ 0x78
 800221a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800221e:	6823      	ldr	r3, [r4, #0]
 8002220:	6831      	ldr	r1, [r6, #0]
 8002222:	061f      	lsls	r7, r3, #24
 8002224:	f851 5b04 	ldr.w	r5, [r1], #4
 8002228:	d402      	bmi.n	8002230 <_printf_i+0x188>
 800222a:	065f      	lsls	r7, r3, #25
 800222c:	bf48      	it	mi
 800222e:	b2ad      	uxthmi	r5, r5
 8002230:	6031      	str	r1, [r6, #0]
 8002232:	07d9      	lsls	r1, r3, #31
 8002234:	bf44      	itt	mi
 8002236:	f043 0320 	orrmi.w	r3, r3, #32
 800223a:	6023      	strmi	r3, [r4, #0]
 800223c:	b11d      	cbz	r5, 8002246 <_printf_i+0x19e>
 800223e:	2310      	movs	r3, #16
 8002240:	e7ac      	b.n	800219c <_printf_i+0xf4>
 8002242:	4827      	ldr	r0, [pc, #156]	@ (80022e0 <_printf_i+0x238>)
 8002244:	e7e9      	b.n	800221a <_printf_i+0x172>
 8002246:	6823      	ldr	r3, [r4, #0]
 8002248:	f023 0320 	bic.w	r3, r3, #32
 800224c:	6023      	str	r3, [r4, #0]
 800224e:	e7f6      	b.n	800223e <_printf_i+0x196>
 8002250:	4616      	mov	r6, r2
 8002252:	e7bd      	b.n	80021d0 <_printf_i+0x128>
 8002254:	6833      	ldr	r3, [r6, #0]
 8002256:	6825      	ldr	r5, [r4, #0]
 8002258:	6961      	ldr	r1, [r4, #20]
 800225a:	1d18      	adds	r0, r3, #4
 800225c:	6030      	str	r0, [r6, #0]
 800225e:	062e      	lsls	r6, r5, #24
 8002260:	681b      	ldr	r3, [r3, #0]
 8002262:	d501      	bpl.n	8002268 <_printf_i+0x1c0>
 8002264:	6019      	str	r1, [r3, #0]
 8002266:	e002      	b.n	800226e <_printf_i+0x1c6>
 8002268:	0668      	lsls	r0, r5, #25
 800226a:	d5fb      	bpl.n	8002264 <_printf_i+0x1bc>
 800226c:	8019      	strh	r1, [r3, #0]
 800226e:	2300      	movs	r3, #0
 8002270:	6123      	str	r3, [r4, #16]
 8002272:	4616      	mov	r6, r2
 8002274:	e7bc      	b.n	80021f0 <_printf_i+0x148>
 8002276:	6833      	ldr	r3, [r6, #0]
 8002278:	1d1a      	adds	r2, r3, #4
 800227a:	6032      	str	r2, [r6, #0]
 800227c:	681e      	ldr	r6, [r3, #0]
 800227e:	6862      	ldr	r2, [r4, #4]
 8002280:	2100      	movs	r1, #0
 8002282:	4630      	mov	r0, r6
 8002284:	f7fd ffac 	bl	80001e0 <memchr>
 8002288:	b108      	cbz	r0, 800228e <_printf_i+0x1e6>
 800228a:	1b80      	subs	r0, r0, r6
 800228c:	6060      	str	r0, [r4, #4]
 800228e:	6863      	ldr	r3, [r4, #4]
 8002290:	6123      	str	r3, [r4, #16]
 8002292:	2300      	movs	r3, #0
 8002294:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002298:	e7aa      	b.n	80021f0 <_printf_i+0x148>
 800229a:	6923      	ldr	r3, [r4, #16]
 800229c:	4632      	mov	r2, r6
 800229e:	4649      	mov	r1, r9
 80022a0:	4640      	mov	r0, r8
 80022a2:	47d0      	blx	sl
 80022a4:	3001      	adds	r0, #1
 80022a6:	d0ad      	beq.n	8002204 <_printf_i+0x15c>
 80022a8:	6823      	ldr	r3, [r4, #0]
 80022aa:	079b      	lsls	r3, r3, #30
 80022ac:	d413      	bmi.n	80022d6 <_printf_i+0x22e>
 80022ae:	68e0      	ldr	r0, [r4, #12]
 80022b0:	9b03      	ldr	r3, [sp, #12]
 80022b2:	4298      	cmp	r0, r3
 80022b4:	bfb8      	it	lt
 80022b6:	4618      	movlt	r0, r3
 80022b8:	e7a6      	b.n	8002208 <_printf_i+0x160>
 80022ba:	2301      	movs	r3, #1
 80022bc:	4632      	mov	r2, r6
 80022be:	4649      	mov	r1, r9
 80022c0:	4640      	mov	r0, r8
 80022c2:	47d0      	blx	sl
 80022c4:	3001      	adds	r0, #1
 80022c6:	d09d      	beq.n	8002204 <_printf_i+0x15c>
 80022c8:	3501      	adds	r5, #1
 80022ca:	68e3      	ldr	r3, [r4, #12]
 80022cc:	9903      	ldr	r1, [sp, #12]
 80022ce:	1a5b      	subs	r3, r3, r1
 80022d0:	42ab      	cmp	r3, r5
 80022d2:	dcf2      	bgt.n	80022ba <_printf_i+0x212>
 80022d4:	e7eb      	b.n	80022ae <_printf_i+0x206>
 80022d6:	2500      	movs	r5, #0
 80022d8:	f104 0619 	add.w	r6, r4, #25
 80022dc:	e7f5      	b.n	80022ca <_printf_i+0x222>
 80022de:	bf00      	nop
 80022e0:	08004ebb 	.word	0x08004ebb
 80022e4:	08004ecc 	.word	0x08004ecc

080022e8 <std>:
 80022e8:	2300      	movs	r3, #0
 80022ea:	b510      	push	{r4, lr}
 80022ec:	4604      	mov	r4, r0
 80022ee:	e9c0 3300 	strd	r3, r3, [r0]
 80022f2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80022f6:	6083      	str	r3, [r0, #8]
 80022f8:	8181      	strh	r1, [r0, #12]
 80022fa:	6643      	str	r3, [r0, #100]	@ 0x64
 80022fc:	81c2      	strh	r2, [r0, #14]
 80022fe:	6183      	str	r3, [r0, #24]
 8002300:	4619      	mov	r1, r3
 8002302:	2208      	movs	r2, #8
 8002304:	305c      	adds	r0, #92	@ 0x5c
 8002306:	f000 f914 	bl	8002532 <memset>
 800230a:	4b0d      	ldr	r3, [pc, #52]	@ (8002340 <std+0x58>)
 800230c:	6263      	str	r3, [r4, #36]	@ 0x24
 800230e:	4b0d      	ldr	r3, [pc, #52]	@ (8002344 <std+0x5c>)
 8002310:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002312:	4b0d      	ldr	r3, [pc, #52]	@ (8002348 <std+0x60>)
 8002314:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002316:	4b0d      	ldr	r3, [pc, #52]	@ (800234c <std+0x64>)
 8002318:	6323      	str	r3, [r4, #48]	@ 0x30
 800231a:	4b0d      	ldr	r3, [pc, #52]	@ (8002350 <std+0x68>)
 800231c:	6224      	str	r4, [r4, #32]
 800231e:	429c      	cmp	r4, r3
 8002320:	d006      	beq.n	8002330 <std+0x48>
 8002322:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002326:	4294      	cmp	r4, r2
 8002328:	d002      	beq.n	8002330 <std+0x48>
 800232a:	33d0      	adds	r3, #208	@ 0xd0
 800232c:	429c      	cmp	r4, r3
 800232e:	d105      	bne.n	800233c <std+0x54>
 8002330:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002334:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002338:	f000 b978 	b.w	800262c <__retarget_lock_init_recursive>
 800233c:	bd10      	pop	{r4, pc}
 800233e:	bf00      	nop
 8002340:	080024ad 	.word	0x080024ad
 8002344:	080024cf 	.word	0x080024cf
 8002348:	08002507 	.word	0x08002507
 800234c:	0800252b 	.word	0x0800252b
 8002350:	200001fc 	.word	0x200001fc

08002354 <stdio_exit_handler>:
 8002354:	4a02      	ldr	r2, [pc, #8]	@ (8002360 <stdio_exit_handler+0xc>)
 8002356:	4903      	ldr	r1, [pc, #12]	@ (8002364 <stdio_exit_handler+0x10>)
 8002358:	4803      	ldr	r0, [pc, #12]	@ (8002368 <stdio_exit_handler+0x14>)
 800235a:	f000 b869 	b.w	8002430 <_fwalk_sglue>
 800235e:	bf00      	nop
 8002360:	20000008 	.word	0x20000008
 8002364:	08003f8d 	.word	0x08003f8d
 8002368:	20000018 	.word	0x20000018

0800236c <cleanup_stdio>:
 800236c:	6841      	ldr	r1, [r0, #4]
 800236e:	4b0c      	ldr	r3, [pc, #48]	@ (80023a0 <cleanup_stdio+0x34>)
 8002370:	4299      	cmp	r1, r3
 8002372:	b510      	push	{r4, lr}
 8002374:	4604      	mov	r4, r0
 8002376:	d001      	beq.n	800237c <cleanup_stdio+0x10>
 8002378:	f001 fe08 	bl	8003f8c <_fflush_r>
 800237c:	68a1      	ldr	r1, [r4, #8]
 800237e:	4b09      	ldr	r3, [pc, #36]	@ (80023a4 <cleanup_stdio+0x38>)
 8002380:	4299      	cmp	r1, r3
 8002382:	d002      	beq.n	800238a <cleanup_stdio+0x1e>
 8002384:	4620      	mov	r0, r4
 8002386:	f001 fe01 	bl	8003f8c <_fflush_r>
 800238a:	68e1      	ldr	r1, [r4, #12]
 800238c:	4b06      	ldr	r3, [pc, #24]	@ (80023a8 <cleanup_stdio+0x3c>)
 800238e:	4299      	cmp	r1, r3
 8002390:	d004      	beq.n	800239c <cleanup_stdio+0x30>
 8002392:	4620      	mov	r0, r4
 8002394:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002398:	f001 bdf8 	b.w	8003f8c <_fflush_r>
 800239c:	bd10      	pop	{r4, pc}
 800239e:	bf00      	nop
 80023a0:	200001fc 	.word	0x200001fc
 80023a4:	20000264 	.word	0x20000264
 80023a8:	200002cc 	.word	0x200002cc

080023ac <global_stdio_init.part.0>:
 80023ac:	b510      	push	{r4, lr}
 80023ae:	4b0b      	ldr	r3, [pc, #44]	@ (80023dc <global_stdio_init.part.0+0x30>)
 80023b0:	4c0b      	ldr	r4, [pc, #44]	@ (80023e0 <global_stdio_init.part.0+0x34>)
 80023b2:	4a0c      	ldr	r2, [pc, #48]	@ (80023e4 <global_stdio_init.part.0+0x38>)
 80023b4:	601a      	str	r2, [r3, #0]
 80023b6:	4620      	mov	r0, r4
 80023b8:	2200      	movs	r2, #0
 80023ba:	2104      	movs	r1, #4
 80023bc:	f7ff ff94 	bl	80022e8 <std>
 80023c0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80023c4:	2201      	movs	r2, #1
 80023c6:	2109      	movs	r1, #9
 80023c8:	f7ff ff8e 	bl	80022e8 <std>
 80023cc:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80023d0:	2202      	movs	r2, #2
 80023d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80023d6:	2112      	movs	r1, #18
 80023d8:	f7ff bf86 	b.w	80022e8 <std>
 80023dc:	20000334 	.word	0x20000334
 80023e0:	200001fc 	.word	0x200001fc
 80023e4:	08002355 	.word	0x08002355

080023e8 <__sfp_lock_acquire>:
 80023e8:	4801      	ldr	r0, [pc, #4]	@ (80023f0 <__sfp_lock_acquire+0x8>)
 80023ea:	f000 b920 	b.w	800262e <__retarget_lock_acquire_recursive>
 80023ee:	bf00      	nop
 80023f0:	2000033d 	.word	0x2000033d

080023f4 <__sfp_lock_release>:
 80023f4:	4801      	ldr	r0, [pc, #4]	@ (80023fc <__sfp_lock_release+0x8>)
 80023f6:	f000 b91b 	b.w	8002630 <__retarget_lock_release_recursive>
 80023fa:	bf00      	nop
 80023fc:	2000033d 	.word	0x2000033d

08002400 <__sinit>:
 8002400:	b510      	push	{r4, lr}
 8002402:	4604      	mov	r4, r0
 8002404:	f7ff fff0 	bl	80023e8 <__sfp_lock_acquire>
 8002408:	6a23      	ldr	r3, [r4, #32]
 800240a:	b11b      	cbz	r3, 8002414 <__sinit+0x14>
 800240c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002410:	f7ff bff0 	b.w	80023f4 <__sfp_lock_release>
 8002414:	4b04      	ldr	r3, [pc, #16]	@ (8002428 <__sinit+0x28>)
 8002416:	6223      	str	r3, [r4, #32]
 8002418:	4b04      	ldr	r3, [pc, #16]	@ (800242c <__sinit+0x2c>)
 800241a:	681b      	ldr	r3, [r3, #0]
 800241c:	2b00      	cmp	r3, #0
 800241e:	d1f5      	bne.n	800240c <__sinit+0xc>
 8002420:	f7ff ffc4 	bl	80023ac <global_stdio_init.part.0>
 8002424:	e7f2      	b.n	800240c <__sinit+0xc>
 8002426:	bf00      	nop
 8002428:	0800236d 	.word	0x0800236d
 800242c:	20000334 	.word	0x20000334

08002430 <_fwalk_sglue>:
 8002430:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002434:	4607      	mov	r7, r0
 8002436:	4688      	mov	r8, r1
 8002438:	4614      	mov	r4, r2
 800243a:	2600      	movs	r6, #0
 800243c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002440:	f1b9 0901 	subs.w	r9, r9, #1
 8002444:	d505      	bpl.n	8002452 <_fwalk_sglue+0x22>
 8002446:	6824      	ldr	r4, [r4, #0]
 8002448:	2c00      	cmp	r4, #0
 800244a:	d1f7      	bne.n	800243c <_fwalk_sglue+0xc>
 800244c:	4630      	mov	r0, r6
 800244e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002452:	89ab      	ldrh	r3, [r5, #12]
 8002454:	2b01      	cmp	r3, #1
 8002456:	d907      	bls.n	8002468 <_fwalk_sglue+0x38>
 8002458:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800245c:	3301      	adds	r3, #1
 800245e:	d003      	beq.n	8002468 <_fwalk_sglue+0x38>
 8002460:	4629      	mov	r1, r5
 8002462:	4638      	mov	r0, r7
 8002464:	47c0      	blx	r8
 8002466:	4306      	orrs	r6, r0
 8002468:	3568      	adds	r5, #104	@ 0x68
 800246a:	e7e9      	b.n	8002440 <_fwalk_sglue+0x10>

0800246c <siprintf>:
 800246c:	b40e      	push	{r1, r2, r3}
 800246e:	b500      	push	{lr}
 8002470:	b09c      	sub	sp, #112	@ 0x70
 8002472:	ab1d      	add	r3, sp, #116	@ 0x74
 8002474:	9002      	str	r0, [sp, #8]
 8002476:	9006      	str	r0, [sp, #24]
 8002478:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 800247c:	4809      	ldr	r0, [pc, #36]	@ (80024a4 <siprintf+0x38>)
 800247e:	9107      	str	r1, [sp, #28]
 8002480:	9104      	str	r1, [sp, #16]
 8002482:	4909      	ldr	r1, [pc, #36]	@ (80024a8 <siprintf+0x3c>)
 8002484:	f853 2b04 	ldr.w	r2, [r3], #4
 8002488:	9105      	str	r1, [sp, #20]
 800248a:	6800      	ldr	r0, [r0, #0]
 800248c:	9301      	str	r3, [sp, #4]
 800248e:	a902      	add	r1, sp, #8
 8002490:	f001 fbfc 	bl	8003c8c <_svfiprintf_r>
 8002494:	9b02      	ldr	r3, [sp, #8]
 8002496:	2200      	movs	r2, #0
 8002498:	701a      	strb	r2, [r3, #0]
 800249a:	b01c      	add	sp, #112	@ 0x70
 800249c:	f85d eb04 	ldr.w	lr, [sp], #4
 80024a0:	b003      	add	sp, #12
 80024a2:	4770      	bx	lr
 80024a4:	20000014 	.word	0x20000014
 80024a8:	ffff0208 	.word	0xffff0208

080024ac <__sread>:
 80024ac:	b510      	push	{r4, lr}
 80024ae:	460c      	mov	r4, r1
 80024b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80024b4:	f000 f86c 	bl	8002590 <_read_r>
 80024b8:	2800      	cmp	r0, #0
 80024ba:	bfab      	itete	ge
 80024bc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80024be:	89a3      	ldrhlt	r3, [r4, #12]
 80024c0:	181b      	addge	r3, r3, r0
 80024c2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80024c6:	bfac      	ite	ge
 80024c8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80024ca:	81a3      	strhlt	r3, [r4, #12]
 80024cc:	bd10      	pop	{r4, pc}

080024ce <__swrite>:
 80024ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80024d2:	461f      	mov	r7, r3
 80024d4:	898b      	ldrh	r3, [r1, #12]
 80024d6:	05db      	lsls	r3, r3, #23
 80024d8:	4605      	mov	r5, r0
 80024da:	460c      	mov	r4, r1
 80024dc:	4616      	mov	r6, r2
 80024de:	d505      	bpl.n	80024ec <__swrite+0x1e>
 80024e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80024e4:	2302      	movs	r3, #2
 80024e6:	2200      	movs	r2, #0
 80024e8:	f000 f840 	bl	800256c <_lseek_r>
 80024ec:	89a3      	ldrh	r3, [r4, #12]
 80024ee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80024f2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80024f6:	81a3      	strh	r3, [r4, #12]
 80024f8:	4632      	mov	r2, r6
 80024fa:	463b      	mov	r3, r7
 80024fc:	4628      	mov	r0, r5
 80024fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002502:	f000 b857 	b.w	80025b4 <_write_r>

08002506 <__sseek>:
 8002506:	b510      	push	{r4, lr}
 8002508:	460c      	mov	r4, r1
 800250a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800250e:	f000 f82d 	bl	800256c <_lseek_r>
 8002512:	1c43      	adds	r3, r0, #1
 8002514:	89a3      	ldrh	r3, [r4, #12]
 8002516:	bf15      	itete	ne
 8002518:	6560      	strne	r0, [r4, #84]	@ 0x54
 800251a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800251e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8002522:	81a3      	strheq	r3, [r4, #12]
 8002524:	bf18      	it	ne
 8002526:	81a3      	strhne	r3, [r4, #12]
 8002528:	bd10      	pop	{r4, pc}

0800252a <__sclose>:
 800252a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800252e:	f000 b80d 	b.w	800254c <_close_r>

08002532 <memset>:
 8002532:	4402      	add	r2, r0
 8002534:	4603      	mov	r3, r0
 8002536:	4293      	cmp	r3, r2
 8002538:	d100      	bne.n	800253c <memset+0xa>
 800253a:	4770      	bx	lr
 800253c:	f803 1b01 	strb.w	r1, [r3], #1
 8002540:	e7f9      	b.n	8002536 <memset+0x4>
	...

08002544 <_localeconv_r>:
 8002544:	4800      	ldr	r0, [pc, #0]	@ (8002548 <_localeconv_r+0x4>)
 8002546:	4770      	bx	lr
 8002548:	20000154 	.word	0x20000154

0800254c <_close_r>:
 800254c:	b538      	push	{r3, r4, r5, lr}
 800254e:	4d06      	ldr	r5, [pc, #24]	@ (8002568 <_close_r+0x1c>)
 8002550:	2300      	movs	r3, #0
 8002552:	4604      	mov	r4, r0
 8002554:	4608      	mov	r0, r1
 8002556:	602b      	str	r3, [r5, #0]
 8002558:	f7ff f989 	bl	800186e <_close>
 800255c:	1c43      	adds	r3, r0, #1
 800255e:	d102      	bne.n	8002566 <_close_r+0x1a>
 8002560:	682b      	ldr	r3, [r5, #0]
 8002562:	b103      	cbz	r3, 8002566 <_close_r+0x1a>
 8002564:	6023      	str	r3, [r4, #0]
 8002566:	bd38      	pop	{r3, r4, r5, pc}
 8002568:	20000338 	.word	0x20000338

0800256c <_lseek_r>:
 800256c:	b538      	push	{r3, r4, r5, lr}
 800256e:	4d07      	ldr	r5, [pc, #28]	@ (800258c <_lseek_r+0x20>)
 8002570:	4604      	mov	r4, r0
 8002572:	4608      	mov	r0, r1
 8002574:	4611      	mov	r1, r2
 8002576:	2200      	movs	r2, #0
 8002578:	602a      	str	r2, [r5, #0]
 800257a:	461a      	mov	r2, r3
 800257c:	f7ff f99e 	bl	80018bc <_lseek>
 8002580:	1c43      	adds	r3, r0, #1
 8002582:	d102      	bne.n	800258a <_lseek_r+0x1e>
 8002584:	682b      	ldr	r3, [r5, #0]
 8002586:	b103      	cbz	r3, 800258a <_lseek_r+0x1e>
 8002588:	6023      	str	r3, [r4, #0]
 800258a:	bd38      	pop	{r3, r4, r5, pc}
 800258c:	20000338 	.word	0x20000338

08002590 <_read_r>:
 8002590:	b538      	push	{r3, r4, r5, lr}
 8002592:	4d07      	ldr	r5, [pc, #28]	@ (80025b0 <_read_r+0x20>)
 8002594:	4604      	mov	r4, r0
 8002596:	4608      	mov	r0, r1
 8002598:	4611      	mov	r1, r2
 800259a:	2200      	movs	r2, #0
 800259c:	602a      	str	r2, [r5, #0]
 800259e:	461a      	mov	r2, r3
 80025a0:	f7ff f92c 	bl	80017fc <_read>
 80025a4:	1c43      	adds	r3, r0, #1
 80025a6:	d102      	bne.n	80025ae <_read_r+0x1e>
 80025a8:	682b      	ldr	r3, [r5, #0]
 80025aa:	b103      	cbz	r3, 80025ae <_read_r+0x1e>
 80025ac:	6023      	str	r3, [r4, #0]
 80025ae:	bd38      	pop	{r3, r4, r5, pc}
 80025b0:	20000338 	.word	0x20000338

080025b4 <_write_r>:
 80025b4:	b538      	push	{r3, r4, r5, lr}
 80025b6:	4d07      	ldr	r5, [pc, #28]	@ (80025d4 <_write_r+0x20>)
 80025b8:	4604      	mov	r4, r0
 80025ba:	4608      	mov	r0, r1
 80025bc:	4611      	mov	r1, r2
 80025be:	2200      	movs	r2, #0
 80025c0:	602a      	str	r2, [r5, #0]
 80025c2:	461a      	mov	r2, r3
 80025c4:	f7ff f937 	bl	8001836 <_write>
 80025c8:	1c43      	adds	r3, r0, #1
 80025ca:	d102      	bne.n	80025d2 <_write_r+0x1e>
 80025cc:	682b      	ldr	r3, [r5, #0]
 80025ce:	b103      	cbz	r3, 80025d2 <_write_r+0x1e>
 80025d0:	6023      	str	r3, [r4, #0]
 80025d2:	bd38      	pop	{r3, r4, r5, pc}
 80025d4:	20000338 	.word	0x20000338

080025d8 <__errno>:
 80025d8:	4b01      	ldr	r3, [pc, #4]	@ (80025e0 <__errno+0x8>)
 80025da:	6818      	ldr	r0, [r3, #0]
 80025dc:	4770      	bx	lr
 80025de:	bf00      	nop
 80025e0:	20000014 	.word	0x20000014

080025e4 <__libc_init_array>:
 80025e4:	b570      	push	{r4, r5, r6, lr}
 80025e6:	4d0d      	ldr	r5, [pc, #52]	@ (800261c <__libc_init_array+0x38>)
 80025e8:	4c0d      	ldr	r4, [pc, #52]	@ (8002620 <__libc_init_array+0x3c>)
 80025ea:	1b64      	subs	r4, r4, r5
 80025ec:	10a4      	asrs	r4, r4, #2
 80025ee:	2600      	movs	r6, #0
 80025f0:	42a6      	cmp	r6, r4
 80025f2:	d109      	bne.n	8002608 <__libc_init_array+0x24>
 80025f4:	4d0b      	ldr	r5, [pc, #44]	@ (8002624 <__libc_init_array+0x40>)
 80025f6:	4c0c      	ldr	r4, [pc, #48]	@ (8002628 <__libc_init_array+0x44>)
 80025f8:	f002 fc30 	bl	8004e5c <_init>
 80025fc:	1b64      	subs	r4, r4, r5
 80025fe:	10a4      	asrs	r4, r4, #2
 8002600:	2600      	movs	r6, #0
 8002602:	42a6      	cmp	r6, r4
 8002604:	d105      	bne.n	8002612 <__libc_init_array+0x2e>
 8002606:	bd70      	pop	{r4, r5, r6, pc}
 8002608:	f855 3b04 	ldr.w	r3, [r5], #4
 800260c:	4798      	blx	r3
 800260e:	3601      	adds	r6, #1
 8002610:	e7ee      	b.n	80025f0 <__libc_init_array+0xc>
 8002612:	f855 3b04 	ldr.w	r3, [r5], #4
 8002616:	4798      	blx	r3
 8002618:	3601      	adds	r6, #1
 800261a:	e7f2      	b.n	8002602 <__libc_init_array+0x1e>
 800261c:	08005238 	.word	0x08005238
 8002620:	08005238 	.word	0x08005238
 8002624:	08005238 	.word	0x08005238
 8002628:	0800523c 	.word	0x0800523c

0800262c <__retarget_lock_init_recursive>:
 800262c:	4770      	bx	lr

0800262e <__retarget_lock_acquire_recursive>:
 800262e:	4770      	bx	lr

08002630 <__retarget_lock_release_recursive>:
 8002630:	4770      	bx	lr

08002632 <quorem>:
 8002632:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002636:	6903      	ldr	r3, [r0, #16]
 8002638:	690c      	ldr	r4, [r1, #16]
 800263a:	42a3      	cmp	r3, r4
 800263c:	4607      	mov	r7, r0
 800263e:	db7e      	blt.n	800273e <quorem+0x10c>
 8002640:	3c01      	subs	r4, #1
 8002642:	f101 0814 	add.w	r8, r1, #20
 8002646:	00a3      	lsls	r3, r4, #2
 8002648:	f100 0514 	add.w	r5, r0, #20
 800264c:	9300      	str	r3, [sp, #0]
 800264e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002652:	9301      	str	r3, [sp, #4]
 8002654:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002658:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800265c:	3301      	adds	r3, #1
 800265e:	429a      	cmp	r2, r3
 8002660:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002664:	fbb2 f6f3 	udiv	r6, r2, r3
 8002668:	d32e      	bcc.n	80026c8 <quorem+0x96>
 800266a:	f04f 0a00 	mov.w	sl, #0
 800266e:	46c4      	mov	ip, r8
 8002670:	46ae      	mov	lr, r5
 8002672:	46d3      	mov	fp, sl
 8002674:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002678:	b298      	uxth	r0, r3
 800267a:	fb06 a000 	mla	r0, r6, r0, sl
 800267e:	0c02      	lsrs	r2, r0, #16
 8002680:	0c1b      	lsrs	r3, r3, #16
 8002682:	fb06 2303 	mla	r3, r6, r3, r2
 8002686:	f8de 2000 	ldr.w	r2, [lr]
 800268a:	b280      	uxth	r0, r0
 800268c:	b292      	uxth	r2, r2
 800268e:	1a12      	subs	r2, r2, r0
 8002690:	445a      	add	r2, fp
 8002692:	f8de 0000 	ldr.w	r0, [lr]
 8002696:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800269a:	b29b      	uxth	r3, r3
 800269c:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80026a0:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80026a4:	b292      	uxth	r2, r2
 80026a6:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80026aa:	45e1      	cmp	r9, ip
 80026ac:	f84e 2b04 	str.w	r2, [lr], #4
 80026b0:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80026b4:	d2de      	bcs.n	8002674 <quorem+0x42>
 80026b6:	9b00      	ldr	r3, [sp, #0]
 80026b8:	58eb      	ldr	r3, [r5, r3]
 80026ba:	b92b      	cbnz	r3, 80026c8 <quorem+0x96>
 80026bc:	9b01      	ldr	r3, [sp, #4]
 80026be:	3b04      	subs	r3, #4
 80026c0:	429d      	cmp	r5, r3
 80026c2:	461a      	mov	r2, r3
 80026c4:	d32f      	bcc.n	8002726 <quorem+0xf4>
 80026c6:	613c      	str	r4, [r7, #16]
 80026c8:	4638      	mov	r0, r7
 80026ca:	f001 f97b 	bl	80039c4 <__mcmp>
 80026ce:	2800      	cmp	r0, #0
 80026d0:	db25      	blt.n	800271e <quorem+0xec>
 80026d2:	4629      	mov	r1, r5
 80026d4:	2000      	movs	r0, #0
 80026d6:	f858 2b04 	ldr.w	r2, [r8], #4
 80026da:	f8d1 c000 	ldr.w	ip, [r1]
 80026de:	fa1f fe82 	uxth.w	lr, r2
 80026e2:	fa1f f38c 	uxth.w	r3, ip
 80026e6:	eba3 030e 	sub.w	r3, r3, lr
 80026ea:	4403      	add	r3, r0
 80026ec:	0c12      	lsrs	r2, r2, #16
 80026ee:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80026f2:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80026f6:	b29b      	uxth	r3, r3
 80026f8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80026fc:	45c1      	cmp	r9, r8
 80026fe:	f841 3b04 	str.w	r3, [r1], #4
 8002702:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002706:	d2e6      	bcs.n	80026d6 <quorem+0xa4>
 8002708:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800270c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002710:	b922      	cbnz	r2, 800271c <quorem+0xea>
 8002712:	3b04      	subs	r3, #4
 8002714:	429d      	cmp	r5, r3
 8002716:	461a      	mov	r2, r3
 8002718:	d30b      	bcc.n	8002732 <quorem+0x100>
 800271a:	613c      	str	r4, [r7, #16]
 800271c:	3601      	adds	r6, #1
 800271e:	4630      	mov	r0, r6
 8002720:	b003      	add	sp, #12
 8002722:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002726:	6812      	ldr	r2, [r2, #0]
 8002728:	3b04      	subs	r3, #4
 800272a:	2a00      	cmp	r2, #0
 800272c:	d1cb      	bne.n	80026c6 <quorem+0x94>
 800272e:	3c01      	subs	r4, #1
 8002730:	e7c6      	b.n	80026c0 <quorem+0x8e>
 8002732:	6812      	ldr	r2, [r2, #0]
 8002734:	3b04      	subs	r3, #4
 8002736:	2a00      	cmp	r2, #0
 8002738:	d1ef      	bne.n	800271a <quorem+0xe8>
 800273a:	3c01      	subs	r4, #1
 800273c:	e7ea      	b.n	8002714 <quorem+0xe2>
 800273e:	2000      	movs	r0, #0
 8002740:	e7ee      	b.n	8002720 <quorem+0xee>
 8002742:	0000      	movs	r0, r0
 8002744:	0000      	movs	r0, r0
	...

08002748 <_dtoa_r>:
 8002748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800274c:	69c7      	ldr	r7, [r0, #28]
 800274e:	b099      	sub	sp, #100	@ 0x64
 8002750:	ed8d 0b02 	vstr	d0, [sp, #8]
 8002754:	ec55 4b10 	vmov	r4, r5, d0
 8002758:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 800275a:	9109      	str	r1, [sp, #36]	@ 0x24
 800275c:	4683      	mov	fp, r0
 800275e:	920e      	str	r2, [sp, #56]	@ 0x38
 8002760:	9313      	str	r3, [sp, #76]	@ 0x4c
 8002762:	b97f      	cbnz	r7, 8002784 <_dtoa_r+0x3c>
 8002764:	2010      	movs	r0, #16
 8002766:	f000 fdfd 	bl	8003364 <malloc>
 800276a:	4602      	mov	r2, r0
 800276c:	f8cb 001c 	str.w	r0, [fp, #28]
 8002770:	b920      	cbnz	r0, 800277c <_dtoa_r+0x34>
 8002772:	4ba7      	ldr	r3, [pc, #668]	@ (8002a10 <_dtoa_r+0x2c8>)
 8002774:	21ef      	movs	r1, #239	@ 0xef
 8002776:	48a7      	ldr	r0, [pc, #668]	@ (8002a14 <_dtoa_r+0x2cc>)
 8002778:	f001 fc68 	bl	800404c <__assert_func>
 800277c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002780:	6007      	str	r7, [r0, #0]
 8002782:	60c7      	str	r7, [r0, #12]
 8002784:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002788:	6819      	ldr	r1, [r3, #0]
 800278a:	b159      	cbz	r1, 80027a4 <_dtoa_r+0x5c>
 800278c:	685a      	ldr	r2, [r3, #4]
 800278e:	604a      	str	r2, [r1, #4]
 8002790:	2301      	movs	r3, #1
 8002792:	4093      	lsls	r3, r2
 8002794:	608b      	str	r3, [r1, #8]
 8002796:	4658      	mov	r0, fp
 8002798:	f000 feda 	bl	8003550 <_Bfree>
 800279c:	f8db 301c 	ldr.w	r3, [fp, #28]
 80027a0:	2200      	movs	r2, #0
 80027a2:	601a      	str	r2, [r3, #0]
 80027a4:	1e2b      	subs	r3, r5, #0
 80027a6:	bfb9      	ittee	lt
 80027a8:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80027ac:	9303      	strlt	r3, [sp, #12]
 80027ae:	2300      	movge	r3, #0
 80027b0:	6033      	strge	r3, [r6, #0]
 80027b2:	9f03      	ldr	r7, [sp, #12]
 80027b4:	4b98      	ldr	r3, [pc, #608]	@ (8002a18 <_dtoa_r+0x2d0>)
 80027b6:	bfbc      	itt	lt
 80027b8:	2201      	movlt	r2, #1
 80027ba:	6032      	strlt	r2, [r6, #0]
 80027bc:	43bb      	bics	r3, r7
 80027be:	d112      	bne.n	80027e6 <_dtoa_r+0x9e>
 80027c0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80027c2:	f242 730f 	movw	r3, #9999	@ 0x270f
 80027c6:	6013      	str	r3, [r2, #0]
 80027c8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80027cc:	4323      	orrs	r3, r4
 80027ce:	f000 854d 	beq.w	800326c <_dtoa_r+0xb24>
 80027d2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80027d4:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8002a2c <_dtoa_r+0x2e4>
 80027d8:	2b00      	cmp	r3, #0
 80027da:	f000 854f 	beq.w	800327c <_dtoa_r+0xb34>
 80027de:	f10a 0303 	add.w	r3, sl, #3
 80027e2:	f000 bd49 	b.w	8003278 <_dtoa_r+0xb30>
 80027e6:	ed9d 7b02 	vldr	d7, [sp, #8]
 80027ea:	2200      	movs	r2, #0
 80027ec:	ec51 0b17 	vmov	r0, r1, d7
 80027f0:	2300      	movs	r3, #0
 80027f2:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 80027f6:	f7fe f96f 	bl	8000ad8 <__aeabi_dcmpeq>
 80027fa:	4680      	mov	r8, r0
 80027fc:	b158      	cbz	r0, 8002816 <_dtoa_r+0xce>
 80027fe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8002800:	2301      	movs	r3, #1
 8002802:	6013      	str	r3, [r2, #0]
 8002804:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8002806:	b113      	cbz	r3, 800280e <_dtoa_r+0xc6>
 8002808:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800280a:	4b84      	ldr	r3, [pc, #528]	@ (8002a1c <_dtoa_r+0x2d4>)
 800280c:	6013      	str	r3, [r2, #0]
 800280e:	f8df a220 	ldr.w	sl, [pc, #544]	@ 8002a30 <_dtoa_r+0x2e8>
 8002812:	f000 bd33 	b.w	800327c <_dtoa_r+0xb34>
 8002816:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 800281a:	aa16      	add	r2, sp, #88	@ 0x58
 800281c:	a917      	add	r1, sp, #92	@ 0x5c
 800281e:	4658      	mov	r0, fp
 8002820:	f001 f980 	bl	8003b24 <__d2b>
 8002824:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8002828:	4681      	mov	r9, r0
 800282a:	2e00      	cmp	r6, #0
 800282c:	d077      	beq.n	800291e <_dtoa_r+0x1d6>
 800282e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002830:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 8002834:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002838:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800283c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002840:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8002844:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002848:	4619      	mov	r1, r3
 800284a:	2200      	movs	r2, #0
 800284c:	4b74      	ldr	r3, [pc, #464]	@ (8002a20 <_dtoa_r+0x2d8>)
 800284e:	f7fd fd23 	bl	8000298 <__aeabi_dsub>
 8002852:	a369      	add	r3, pc, #420	@ (adr r3, 80029f8 <_dtoa_r+0x2b0>)
 8002854:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002858:	f7fd fed6 	bl	8000608 <__aeabi_dmul>
 800285c:	a368      	add	r3, pc, #416	@ (adr r3, 8002a00 <_dtoa_r+0x2b8>)
 800285e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002862:	f7fd fd1b 	bl	800029c <__adddf3>
 8002866:	4604      	mov	r4, r0
 8002868:	4630      	mov	r0, r6
 800286a:	460d      	mov	r5, r1
 800286c:	f7fd fe62 	bl	8000534 <__aeabi_i2d>
 8002870:	a365      	add	r3, pc, #404	@ (adr r3, 8002a08 <_dtoa_r+0x2c0>)
 8002872:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002876:	f7fd fec7 	bl	8000608 <__aeabi_dmul>
 800287a:	4602      	mov	r2, r0
 800287c:	460b      	mov	r3, r1
 800287e:	4620      	mov	r0, r4
 8002880:	4629      	mov	r1, r5
 8002882:	f7fd fd0b 	bl	800029c <__adddf3>
 8002886:	4604      	mov	r4, r0
 8002888:	460d      	mov	r5, r1
 800288a:	f7fe f96d 	bl	8000b68 <__aeabi_d2iz>
 800288e:	2200      	movs	r2, #0
 8002890:	4607      	mov	r7, r0
 8002892:	2300      	movs	r3, #0
 8002894:	4620      	mov	r0, r4
 8002896:	4629      	mov	r1, r5
 8002898:	f7fe f928 	bl	8000aec <__aeabi_dcmplt>
 800289c:	b140      	cbz	r0, 80028b0 <_dtoa_r+0x168>
 800289e:	4638      	mov	r0, r7
 80028a0:	f7fd fe48 	bl	8000534 <__aeabi_i2d>
 80028a4:	4622      	mov	r2, r4
 80028a6:	462b      	mov	r3, r5
 80028a8:	f7fe f916 	bl	8000ad8 <__aeabi_dcmpeq>
 80028ac:	b900      	cbnz	r0, 80028b0 <_dtoa_r+0x168>
 80028ae:	3f01      	subs	r7, #1
 80028b0:	2f16      	cmp	r7, #22
 80028b2:	d851      	bhi.n	8002958 <_dtoa_r+0x210>
 80028b4:	4b5b      	ldr	r3, [pc, #364]	@ (8002a24 <_dtoa_r+0x2dc>)
 80028b6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80028ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028be:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80028c2:	f7fe f913 	bl	8000aec <__aeabi_dcmplt>
 80028c6:	2800      	cmp	r0, #0
 80028c8:	d048      	beq.n	800295c <_dtoa_r+0x214>
 80028ca:	3f01      	subs	r7, #1
 80028cc:	2300      	movs	r3, #0
 80028ce:	9312      	str	r3, [sp, #72]	@ 0x48
 80028d0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80028d2:	1b9b      	subs	r3, r3, r6
 80028d4:	1e5a      	subs	r2, r3, #1
 80028d6:	bf44      	itt	mi
 80028d8:	f1c3 0801 	rsbmi	r8, r3, #1
 80028dc:	2300      	movmi	r3, #0
 80028de:	9208      	str	r2, [sp, #32]
 80028e0:	bf54      	ite	pl
 80028e2:	f04f 0800 	movpl.w	r8, #0
 80028e6:	9308      	strmi	r3, [sp, #32]
 80028e8:	2f00      	cmp	r7, #0
 80028ea:	db39      	blt.n	8002960 <_dtoa_r+0x218>
 80028ec:	9b08      	ldr	r3, [sp, #32]
 80028ee:	970f      	str	r7, [sp, #60]	@ 0x3c
 80028f0:	443b      	add	r3, r7
 80028f2:	9308      	str	r3, [sp, #32]
 80028f4:	2300      	movs	r3, #0
 80028f6:	930a      	str	r3, [sp, #40]	@ 0x28
 80028f8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80028fa:	2b09      	cmp	r3, #9
 80028fc:	d864      	bhi.n	80029c8 <_dtoa_r+0x280>
 80028fe:	2b05      	cmp	r3, #5
 8002900:	bfc4      	itt	gt
 8002902:	3b04      	subgt	r3, #4
 8002904:	9309      	strgt	r3, [sp, #36]	@ 0x24
 8002906:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002908:	f1a3 0302 	sub.w	r3, r3, #2
 800290c:	bfcc      	ite	gt
 800290e:	2400      	movgt	r4, #0
 8002910:	2401      	movle	r4, #1
 8002912:	2b03      	cmp	r3, #3
 8002914:	d863      	bhi.n	80029de <_dtoa_r+0x296>
 8002916:	e8df f003 	tbb	[pc, r3]
 800291a:	372a      	.short	0x372a
 800291c:	5535      	.short	0x5535
 800291e:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 8002922:	441e      	add	r6, r3
 8002924:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8002928:	2b20      	cmp	r3, #32
 800292a:	bfc1      	itttt	gt
 800292c:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8002930:	409f      	lslgt	r7, r3
 8002932:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8002936:	fa24 f303 	lsrgt.w	r3, r4, r3
 800293a:	bfd6      	itet	le
 800293c:	f1c3 0320 	rsble	r3, r3, #32
 8002940:	ea47 0003 	orrgt.w	r0, r7, r3
 8002944:	fa04 f003 	lslle.w	r0, r4, r3
 8002948:	f7fd fde4 	bl	8000514 <__aeabi_ui2d>
 800294c:	2201      	movs	r2, #1
 800294e:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8002952:	3e01      	subs	r6, #1
 8002954:	9214      	str	r2, [sp, #80]	@ 0x50
 8002956:	e777      	b.n	8002848 <_dtoa_r+0x100>
 8002958:	2301      	movs	r3, #1
 800295a:	e7b8      	b.n	80028ce <_dtoa_r+0x186>
 800295c:	9012      	str	r0, [sp, #72]	@ 0x48
 800295e:	e7b7      	b.n	80028d0 <_dtoa_r+0x188>
 8002960:	427b      	negs	r3, r7
 8002962:	930a      	str	r3, [sp, #40]	@ 0x28
 8002964:	2300      	movs	r3, #0
 8002966:	eba8 0807 	sub.w	r8, r8, r7
 800296a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800296c:	e7c4      	b.n	80028f8 <_dtoa_r+0x1b0>
 800296e:	2300      	movs	r3, #0
 8002970:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002972:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002974:	2b00      	cmp	r3, #0
 8002976:	dc35      	bgt.n	80029e4 <_dtoa_r+0x29c>
 8002978:	2301      	movs	r3, #1
 800297a:	9300      	str	r3, [sp, #0]
 800297c:	9307      	str	r3, [sp, #28]
 800297e:	461a      	mov	r2, r3
 8002980:	920e      	str	r2, [sp, #56]	@ 0x38
 8002982:	e00b      	b.n	800299c <_dtoa_r+0x254>
 8002984:	2301      	movs	r3, #1
 8002986:	e7f3      	b.n	8002970 <_dtoa_r+0x228>
 8002988:	2300      	movs	r3, #0
 800298a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800298c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800298e:	18fb      	adds	r3, r7, r3
 8002990:	9300      	str	r3, [sp, #0]
 8002992:	3301      	adds	r3, #1
 8002994:	2b01      	cmp	r3, #1
 8002996:	9307      	str	r3, [sp, #28]
 8002998:	bfb8      	it	lt
 800299a:	2301      	movlt	r3, #1
 800299c:	f8db 001c 	ldr.w	r0, [fp, #28]
 80029a0:	2100      	movs	r1, #0
 80029a2:	2204      	movs	r2, #4
 80029a4:	f102 0514 	add.w	r5, r2, #20
 80029a8:	429d      	cmp	r5, r3
 80029aa:	d91f      	bls.n	80029ec <_dtoa_r+0x2a4>
 80029ac:	6041      	str	r1, [r0, #4]
 80029ae:	4658      	mov	r0, fp
 80029b0:	f000 fd8e 	bl	80034d0 <_Balloc>
 80029b4:	4682      	mov	sl, r0
 80029b6:	2800      	cmp	r0, #0
 80029b8:	d13c      	bne.n	8002a34 <_dtoa_r+0x2ec>
 80029ba:	4b1b      	ldr	r3, [pc, #108]	@ (8002a28 <_dtoa_r+0x2e0>)
 80029bc:	4602      	mov	r2, r0
 80029be:	f240 11af 	movw	r1, #431	@ 0x1af
 80029c2:	e6d8      	b.n	8002776 <_dtoa_r+0x2e>
 80029c4:	2301      	movs	r3, #1
 80029c6:	e7e0      	b.n	800298a <_dtoa_r+0x242>
 80029c8:	2401      	movs	r4, #1
 80029ca:	2300      	movs	r3, #0
 80029cc:	9309      	str	r3, [sp, #36]	@ 0x24
 80029ce:	940b      	str	r4, [sp, #44]	@ 0x2c
 80029d0:	f04f 33ff 	mov.w	r3, #4294967295
 80029d4:	9300      	str	r3, [sp, #0]
 80029d6:	9307      	str	r3, [sp, #28]
 80029d8:	2200      	movs	r2, #0
 80029da:	2312      	movs	r3, #18
 80029dc:	e7d0      	b.n	8002980 <_dtoa_r+0x238>
 80029de:	2301      	movs	r3, #1
 80029e0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80029e2:	e7f5      	b.n	80029d0 <_dtoa_r+0x288>
 80029e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80029e6:	9300      	str	r3, [sp, #0]
 80029e8:	9307      	str	r3, [sp, #28]
 80029ea:	e7d7      	b.n	800299c <_dtoa_r+0x254>
 80029ec:	3101      	adds	r1, #1
 80029ee:	0052      	lsls	r2, r2, #1
 80029f0:	e7d8      	b.n	80029a4 <_dtoa_r+0x25c>
 80029f2:	bf00      	nop
 80029f4:	f3af 8000 	nop.w
 80029f8:	636f4361 	.word	0x636f4361
 80029fc:	3fd287a7 	.word	0x3fd287a7
 8002a00:	8b60c8b3 	.word	0x8b60c8b3
 8002a04:	3fc68a28 	.word	0x3fc68a28
 8002a08:	509f79fb 	.word	0x509f79fb
 8002a0c:	3fd34413 	.word	0x3fd34413
 8002a10:	08004eea 	.word	0x08004eea
 8002a14:	08004f01 	.word	0x08004f01
 8002a18:	7ff00000 	.word	0x7ff00000
 8002a1c:	08004eba 	.word	0x08004eba
 8002a20:	3ff80000 	.word	0x3ff80000
 8002a24:	08004ff8 	.word	0x08004ff8
 8002a28:	08004f59 	.word	0x08004f59
 8002a2c:	08004ee6 	.word	0x08004ee6
 8002a30:	08004eb9 	.word	0x08004eb9
 8002a34:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002a38:	6018      	str	r0, [r3, #0]
 8002a3a:	9b07      	ldr	r3, [sp, #28]
 8002a3c:	2b0e      	cmp	r3, #14
 8002a3e:	f200 80a4 	bhi.w	8002b8a <_dtoa_r+0x442>
 8002a42:	2c00      	cmp	r4, #0
 8002a44:	f000 80a1 	beq.w	8002b8a <_dtoa_r+0x442>
 8002a48:	2f00      	cmp	r7, #0
 8002a4a:	dd33      	ble.n	8002ab4 <_dtoa_r+0x36c>
 8002a4c:	4bad      	ldr	r3, [pc, #692]	@ (8002d04 <_dtoa_r+0x5bc>)
 8002a4e:	f007 020f 	and.w	r2, r7, #15
 8002a52:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002a56:	ed93 7b00 	vldr	d7, [r3]
 8002a5a:	05f8      	lsls	r0, r7, #23
 8002a5c:	ed8d 7b04 	vstr	d7, [sp, #16]
 8002a60:	ea4f 1427 	mov.w	r4, r7, asr #4
 8002a64:	d516      	bpl.n	8002a94 <_dtoa_r+0x34c>
 8002a66:	4ba8      	ldr	r3, [pc, #672]	@ (8002d08 <_dtoa_r+0x5c0>)
 8002a68:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002a6c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002a70:	f7fd fef4 	bl	800085c <__aeabi_ddiv>
 8002a74:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002a78:	f004 040f 	and.w	r4, r4, #15
 8002a7c:	2603      	movs	r6, #3
 8002a7e:	4da2      	ldr	r5, [pc, #648]	@ (8002d08 <_dtoa_r+0x5c0>)
 8002a80:	b954      	cbnz	r4, 8002a98 <_dtoa_r+0x350>
 8002a82:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002a86:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002a8a:	f7fd fee7 	bl	800085c <__aeabi_ddiv>
 8002a8e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002a92:	e028      	b.n	8002ae6 <_dtoa_r+0x39e>
 8002a94:	2602      	movs	r6, #2
 8002a96:	e7f2      	b.n	8002a7e <_dtoa_r+0x336>
 8002a98:	07e1      	lsls	r1, r4, #31
 8002a9a:	d508      	bpl.n	8002aae <_dtoa_r+0x366>
 8002a9c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002aa0:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002aa4:	f7fd fdb0 	bl	8000608 <__aeabi_dmul>
 8002aa8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002aac:	3601      	adds	r6, #1
 8002aae:	1064      	asrs	r4, r4, #1
 8002ab0:	3508      	adds	r5, #8
 8002ab2:	e7e5      	b.n	8002a80 <_dtoa_r+0x338>
 8002ab4:	f000 80d2 	beq.w	8002c5c <_dtoa_r+0x514>
 8002ab8:	427c      	negs	r4, r7
 8002aba:	4b92      	ldr	r3, [pc, #584]	@ (8002d04 <_dtoa_r+0x5bc>)
 8002abc:	4d92      	ldr	r5, [pc, #584]	@ (8002d08 <_dtoa_r+0x5c0>)
 8002abe:	f004 020f 	and.w	r2, r4, #15
 8002ac2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002ac6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002aca:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002ace:	f7fd fd9b 	bl	8000608 <__aeabi_dmul>
 8002ad2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002ad6:	1124      	asrs	r4, r4, #4
 8002ad8:	2300      	movs	r3, #0
 8002ada:	2602      	movs	r6, #2
 8002adc:	2c00      	cmp	r4, #0
 8002ade:	f040 80b2 	bne.w	8002c46 <_dtoa_r+0x4fe>
 8002ae2:	2b00      	cmp	r3, #0
 8002ae4:	d1d3      	bne.n	8002a8e <_dtoa_r+0x346>
 8002ae6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8002ae8:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002aec:	2b00      	cmp	r3, #0
 8002aee:	f000 80b7 	beq.w	8002c60 <_dtoa_r+0x518>
 8002af2:	4b86      	ldr	r3, [pc, #536]	@ (8002d0c <_dtoa_r+0x5c4>)
 8002af4:	2200      	movs	r2, #0
 8002af6:	4620      	mov	r0, r4
 8002af8:	4629      	mov	r1, r5
 8002afa:	f7fd fff7 	bl	8000aec <__aeabi_dcmplt>
 8002afe:	2800      	cmp	r0, #0
 8002b00:	f000 80ae 	beq.w	8002c60 <_dtoa_r+0x518>
 8002b04:	9b07      	ldr	r3, [sp, #28]
 8002b06:	2b00      	cmp	r3, #0
 8002b08:	f000 80aa 	beq.w	8002c60 <_dtoa_r+0x518>
 8002b0c:	9b00      	ldr	r3, [sp, #0]
 8002b0e:	2b00      	cmp	r3, #0
 8002b10:	dd37      	ble.n	8002b82 <_dtoa_r+0x43a>
 8002b12:	1e7b      	subs	r3, r7, #1
 8002b14:	9304      	str	r3, [sp, #16]
 8002b16:	4620      	mov	r0, r4
 8002b18:	4b7d      	ldr	r3, [pc, #500]	@ (8002d10 <_dtoa_r+0x5c8>)
 8002b1a:	2200      	movs	r2, #0
 8002b1c:	4629      	mov	r1, r5
 8002b1e:	f7fd fd73 	bl	8000608 <__aeabi_dmul>
 8002b22:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b26:	9c00      	ldr	r4, [sp, #0]
 8002b28:	3601      	adds	r6, #1
 8002b2a:	4630      	mov	r0, r6
 8002b2c:	f7fd fd02 	bl	8000534 <__aeabi_i2d>
 8002b30:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002b34:	f7fd fd68 	bl	8000608 <__aeabi_dmul>
 8002b38:	4b76      	ldr	r3, [pc, #472]	@ (8002d14 <_dtoa_r+0x5cc>)
 8002b3a:	2200      	movs	r2, #0
 8002b3c:	f7fd fbae 	bl	800029c <__adddf3>
 8002b40:	4605      	mov	r5, r0
 8002b42:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8002b46:	2c00      	cmp	r4, #0
 8002b48:	f040 808d 	bne.w	8002c66 <_dtoa_r+0x51e>
 8002b4c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b50:	4b71      	ldr	r3, [pc, #452]	@ (8002d18 <_dtoa_r+0x5d0>)
 8002b52:	2200      	movs	r2, #0
 8002b54:	f7fd fba0 	bl	8000298 <__aeabi_dsub>
 8002b58:	4602      	mov	r2, r0
 8002b5a:	460b      	mov	r3, r1
 8002b5c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002b60:	462a      	mov	r2, r5
 8002b62:	4633      	mov	r3, r6
 8002b64:	f7fd ffe0 	bl	8000b28 <__aeabi_dcmpgt>
 8002b68:	2800      	cmp	r0, #0
 8002b6a:	f040 828b 	bne.w	8003084 <_dtoa_r+0x93c>
 8002b6e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b72:	462a      	mov	r2, r5
 8002b74:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8002b78:	f7fd ffb8 	bl	8000aec <__aeabi_dcmplt>
 8002b7c:	2800      	cmp	r0, #0
 8002b7e:	f040 8128 	bne.w	8002dd2 <_dtoa_r+0x68a>
 8002b82:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8002b86:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8002b8a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8002b8c:	2b00      	cmp	r3, #0
 8002b8e:	f2c0 815a 	blt.w	8002e46 <_dtoa_r+0x6fe>
 8002b92:	2f0e      	cmp	r7, #14
 8002b94:	f300 8157 	bgt.w	8002e46 <_dtoa_r+0x6fe>
 8002b98:	4b5a      	ldr	r3, [pc, #360]	@ (8002d04 <_dtoa_r+0x5bc>)
 8002b9a:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002b9e:	ed93 7b00 	vldr	d7, [r3]
 8002ba2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002ba4:	2b00      	cmp	r3, #0
 8002ba6:	ed8d 7b00 	vstr	d7, [sp]
 8002baa:	da03      	bge.n	8002bb4 <_dtoa_r+0x46c>
 8002bac:	9b07      	ldr	r3, [sp, #28]
 8002bae:	2b00      	cmp	r3, #0
 8002bb0:	f340 8101 	ble.w	8002db6 <_dtoa_r+0x66e>
 8002bb4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002bb8:	4656      	mov	r6, sl
 8002bba:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002bbe:	4620      	mov	r0, r4
 8002bc0:	4629      	mov	r1, r5
 8002bc2:	f7fd fe4b 	bl	800085c <__aeabi_ddiv>
 8002bc6:	f7fd ffcf 	bl	8000b68 <__aeabi_d2iz>
 8002bca:	4680      	mov	r8, r0
 8002bcc:	f7fd fcb2 	bl	8000534 <__aeabi_i2d>
 8002bd0:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002bd4:	f7fd fd18 	bl	8000608 <__aeabi_dmul>
 8002bd8:	4602      	mov	r2, r0
 8002bda:	460b      	mov	r3, r1
 8002bdc:	4620      	mov	r0, r4
 8002bde:	4629      	mov	r1, r5
 8002be0:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8002be4:	f7fd fb58 	bl	8000298 <__aeabi_dsub>
 8002be8:	f806 4b01 	strb.w	r4, [r6], #1
 8002bec:	9d07      	ldr	r5, [sp, #28]
 8002bee:	eba6 040a 	sub.w	r4, r6, sl
 8002bf2:	42a5      	cmp	r5, r4
 8002bf4:	4602      	mov	r2, r0
 8002bf6:	460b      	mov	r3, r1
 8002bf8:	f040 8117 	bne.w	8002e2a <_dtoa_r+0x6e2>
 8002bfc:	f7fd fb4e 	bl	800029c <__adddf3>
 8002c00:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002c04:	4604      	mov	r4, r0
 8002c06:	460d      	mov	r5, r1
 8002c08:	f7fd ff8e 	bl	8000b28 <__aeabi_dcmpgt>
 8002c0c:	2800      	cmp	r0, #0
 8002c0e:	f040 80f9 	bne.w	8002e04 <_dtoa_r+0x6bc>
 8002c12:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002c16:	4620      	mov	r0, r4
 8002c18:	4629      	mov	r1, r5
 8002c1a:	f7fd ff5d 	bl	8000ad8 <__aeabi_dcmpeq>
 8002c1e:	b118      	cbz	r0, 8002c28 <_dtoa_r+0x4e0>
 8002c20:	f018 0f01 	tst.w	r8, #1
 8002c24:	f040 80ee 	bne.w	8002e04 <_dtoa_r+0x6bc>
 8002c28:	4649      	mov	r1, r9
 8002c2a:	4658      	mov	r0, fp
 8002c2c:	f000 fc90 	bl	8003550 <_Bfree>
 8002c30:	2300      	movs	r3, #0
 8002c32:	7033      	strb	r3, [r6, #0]
 8002c34:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8002c36:	3701      	adds	r7, #1
 8002c38:	601f      	str	r7, [r3, #0]
 8002c3a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8002c3c:	2b00      	cmp	r3, #0
 8002c3e:	f000 831d 	beq.w	800327c <_dtoa_r+0xb34>
 8002c42:	601e      	str	r6, [r3, #0]
 8002c44:	e31a      	b.n	800327c <_dtoa_r+0xb34>
 8002c46:	07e2      	lsls	r2, r4, #31
 8002c48:	d505      	bpl.n	8002c56 <_dtoa_r+0x50e>
 8002c4a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002c4e:	f7fd fcdb 	bl	8000608 <__aeabi_dmul>
 8002c52:	3601      	adds	r6, #1
 8002c54:	2301      	movs	r3, #1
 8002c56:	1064      	asrs	r4, r4, #1
 8002c58:	3508      	adds	r5, #8
 8002c5a:	e73f      	b.n	8002adc <_dtoa_r+0x394>
 8002c5c:	2602      	movs	r6, #2
 8002c5e:	e742      	b.n	8002ae6 <_dtoa_r+0x39e>
 8002c60:	9c07      	ldr	r4, [sp, #28]
 8002c62:	9704      	str	r7, [sp, #16]
 8002c64:	e761      	b.n	8002b2a <_dtoa_r+0x3e2>
 8002c66:	4b27      	ldr	r3, [pc, #156]	@ (8002d04 <_dtoa_r+0x5bc>)
 8002c68:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002c6a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002c6e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002c72:	4454      	add	r4, sl
 8002c74:	2900      	cmp	r1, #0
 8002c76:	d053      	beq.n	8002d20 <_dtoa_r+0x5d8>
 8002c78:	4928      	ldr	r1, [pc, #160]	@ (8002d1c <_dtoa_r+0x5d4>)
 8002c7a:	2000      	movs	r0, #0
 8002c7c:	f7fd fdee 	bl	800085c <__aeabi_ddiv>
 8002c80:	4633      	mov	r3, r6
 8002c82:	462a      	mov	r2, r5
 8002c84:	f7fd fb08 	bl	8000298 <__aeabi_dsub>
 8002c88:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002c8c:	4656      	mov	r6, sl
 8002c8e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002c92:	f7fd ff69 	bl	8000b68 <__aeabi_d2iz>
 8002c96:	4605      	mov	r5, r0
 8002c98:	f7fd fc4c 	bl	8000534 <__aeabi_i2d>
 8002c9c:	4602      	mov	r2, r0
 8002c9e:	460b      	mov	r3, r1
 8002ca0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002ca4:	f7fd faf8 	bl	8000298 <__aeabi_dsub>
 8002ca8:	3530      	adds	r5, #48	@ 0x30
 8002caa:	4602      	mov	r2, r0
 8002cac:	460b      	mov	r3, r1
 8002cae:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002cb2:	f806 5b01 	strb.w	r5, [r6], #1
 8002cb6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002cba:	f7fd ff17 	bl	8000aec <__aeabi_dcmplt>
 8002cbe:	2800      	cmp	r0, #0
 8002cc0:	d171      	bne.n	8002da6 <_dtoa_r+0x65e>
 8002cc2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002cc6:	4911      	ldr	r1, [pc, #68]	@ (8002d0c <_dtoa_r+0x5c4>)
 8002cc8:	2000      	movs	r0, #0
 8002cca:	f7fd fae5 	bl	8000298 <__aeabi_dsub>
 8002cce:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002cd2:	f7fd ff0b 	bl	8000aec <__aeabi_dcmplt>
 8002cd6:	2800      	cmp	r0, #0
 8002cd8:	f040 8095 	bne.w	8002e06 <_dtoa_r+0x6be>
 8002cdc:	42a6      	cmp	r6, r4
 8002cde:	f43f af50 	beq.w	8002b82 <_dtoa_r+0x43a>
 8002ce2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002ce6:	4b0a      	ldr	r3, [pc, #40]	@ (8002d10 <_dtoa_r+0x5c8>)
 8002ce8:	2200      	movs	r2, #0
 8002cea:	f7fd fc8d 	bl	8000608 <__aeabi_dmul>
 8002cee:	4b08      	ldr	r3, [pc, #32]	@ (8002d10 <_dtoa_r+0x5c8>)
 8002cf0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002cf4:	2200      	movs	r2, #0
 8002cf6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002cfa:	f7fd fc85 	bl	8000608 <__aeabi_dmul>
 8002cfe:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002d02:	e7c4      	b.n	8002c8e <_dtoa_r+0x546>
 8002d04:	08004ff8 	.word	0x08004ff8
 8002d08:	08004fd0 	.word	0x08004fd0
 8002d0c:	3ff00000 	.word	0x3ff00000
 8002d10:	40240000 	.word	0x40240000
 8002d14:	401c0000 	.word	0x401c0000
 8002d18:	40140000 	.word	0x40140000
 8002d1c:	3fe00000 	.word	0x3fe00000
 8002d20:	4631      	mov	r1, r6
 8002d22:	4628      	mov	r0, r5
 8002d24:	f7fd fc70 	bl	8000608 <__aeabi_dmul>
 8002d28:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002d2c:	9415      	str	r4, [sp, #84]	@ 0x54
 8002d2e:	4656      	mov	r6, sl
 8002d30:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d34:	f7fd ff18 	bl	8000b68 <__aeabi_d2iz>
 8002d38:	4605      	mov	r5, r0
 8002d3a:	f7fd fbfb 	bl	8000534 <__aeabi_i2d>
 8002d3e:	4602      	mov	r2, r0
 8002d40:	460b      	mov	r3, r1
 8002d42:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d46:	f7fd faa7 	bl	8000298 <__aeabi_dsub>
 8002d4a:	3530      	adds	r5, #48	@ 0x30
 8002d4c:	f806 5b01 	strb.w	r5, [r6], #1
 8002d50:	4602      	mov	r2, r0
 8002d52:	460b      	mov	r3, r1
 8002d54:	42a6      	cmp	r6, r4
 8002d56:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002d5a:	f04f 0200 	mov.w	r2, #0
 8002d5e:	d124      	bne.n	8002daa <_dtoa_r+0x662>
 8002d60:	4bac      	ldr	r3, [pc, #688]	@ (8003014 <_dtoa_r+0x8cc>)
 8002d62:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002d66:	f7fd fa99 	bl	800029c <__adddf3>
 8002d6a:	4602      	mov	r2, r0
 8002d6c:	460b      	mov	r3, r1
 8002d6e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d72:	f7fd fed9 	bl	8000b28 <__aeabi_dcmpgt>
 8002d76:	2800      	cmp	r0, #0
 8002d78:	d145      	bne.n	8002e06 <_dtoa_r+0x6be>
 8002d7a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002d7e:	49a5      	ldr	r1, [pc, #660]	@ (8003014 <_dtoa_r+0x8cc>)
 8002d80:	2000      	movs	r0, #0
 8002d82:	f7fd fa89 	bl	8000298 <__aeabi_dsub>
 8002d86:	4602      	mov	r2, r0
 8002d88:	460b      	mov	r3, r1
 8002d8a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d8e:	f7fd fead 	bl	8000aec <__aeabi_dcmplt>
 8002d92:	2800      	cmp	r0, #0
 8002d94:	f43f aef5 	beq.w	8002b82 <_dtoa_r+0x43a>
 8002d98:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8002d9a:	1e73      	subs	r3, r6, #1
 8002d9c:	9315      	str	r3, [sp, #84]	@ 0x54
 8002d9e:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8002da2:	2b30      	cmp	r3, #48	@ 0x30
 8002da4:	d0f8      	beq.n	8002d98 <_dtoa_r+0x650>
 8002da6:	9f04      	ldr	r7, [sp, #16]
 8002da8:	e73e      	b.n	8002c28 <_dtoa_r+0x4e0>
 8002daa:	4b9b      	ldr	r3, [pc, #620]	@ (8003018 <_dtoa_r+0x8d0>)
 8002dac:	f7fd fc2c 	bl	8000608 <__aeabi_dmul>
 8002db0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002db4:	e7bc      	b.n	8002d30 <_dtoa_r+0x5e8>
 8002db6:	d10c      	bne.n	8002dd2 <_dtoa_r+0x68a>
 8002db8:	4b98      	ldr	r3, [pc, #608]	@ (800301c <_dtoa_r+0x8d4>)
 8002dba:	2200      	movs	r2, #0
 8002dbc:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002dc0:	f7fd fc22 	bl	8000608 <__aeabi_dmul>
 8002dc4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002dc8:	f7fd fea4 	bl	8000b14 <__aeabi_dcmpge>
 8002dcc:	2800      	cmp	r0, #0
 8002dce:	f000 8157 	beq.w	8003080 <_dtoa_r+0x938>
 8002dd2:	2400      	movs	r4, #0
 8002dd4:	4625      	mov	r5, r4
 8002dd6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002dd8:	43db      	mvns	r3, r3
 8002dda:	9304      	str	r3, [sp, #16]
 8002ddc:	4656      	mov	r6, sl
 8002dde:	2700      	movs	r7, #0
 8002de0:	4621      	mov	r1, r4
 8002de2:	4658      	mov	r0, fp
 8002de4:	f000 fbb4 	bl	8003550 <_Bfree>
 8002de8:	2d00      	cmp	r5, #0
 8002dea:	d0dc      	beq.n	8002da6 <_dtoa_r+0x65e>
 8002dec:	b12f      	cbz	r7, 8002dfa <_dtoa_r+0x6b2>
 8002dee:	42af      	cmp	r7, r5
 8002df0:	d003      	beq.n	8002dfa <_dtoa_r+0x6b2>
 8002df2:	4639      	mov	r1, r7
 8002df4:	4658      	mov	r0, fp
 8002df6:	f000 fbab 	bl	8003550 <_Bfree>
 8002dfa:	4629      	mov	r1, r5
 8002dfc:	4658      	mov	r0, fp
 8002dfe:	f000 fba7 	bl	8003550 <_Bfree>
 8002e02:	e7d0      	b.n	8002da6 <_dtoa_r+0x65e>
 8002e04:	9704      	str	r7, [sp, #16]
 8002e06:	4633      	mov	r3, r6
 8002e08:	461e      	mov	r6, r3
 8002e0a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002e0e:	2a39      	cmp	r2, #57	@ 0x39
 8002e10:	d107      	bne.n	8002e22 <_dtoa_r+0x6da>
 8002e12:	459a      	cmp	sl, r3
 8002e14:	d1f8      	bne.n	8002e08 <_dtoa_r+0x6c0>
 8002e16:	9a04      	ldr	r2, [sp, #16]
 8002e18:	3201      	adds	r2, #1
 8002e1a:	9204      	str	r2, [sp, #16]
 8002e1c:	2230      	movs	r2, #48	@ 0x30
 8002e1e:	f88a 2000 	strb.w	r2, [sl]
 8002e22:	781a      	ldrb	r2, [r3, #0]
 8002e24:	3201      	adds	r2, #1
 8002e26:	701a      	strb	r2, [r3, #0]
 8002e28:	e7bd      	b.n	8002da6 <_dtoa_r+0x65e>
 8002e2a:	4b7b      	ldr	r3, [pc, #492]	@ (8003018 <_dtoa_r+0x8d0>)
 8002e2c:	2200      	movs	r2, #0
 8002e2e:	f7fd fbeb 	bl	8000608 <__aeabi_dmul>
 8002e32:	2200      	movs	r2, #0
 8002e34:	2300      	movs	r3, #0
 8002e36:	4604      	mov	r4, r0
 8002e38:	460d      	mov	r5, r1
 8002e3a:	f7fd fe4d 	bl	8000ad8 <__aeabi_dcmpeq>
 8002e3e:	2800      	cmp	r0, #0
 8002e40:	f43f aebb 	beq.w	8002bba <_dtoa_r+0x472>
 8002e44:	e6f0      	b.n	8002c28 <_dtoa_r+0x4e0>
 8002e46:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8002e48:	2a00      	cmp	r2, #0
 8002e4a:	f000 80db 	beq.w	8003004 <_dtoa_r+0x8bc>
 8002e4e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002e50:	2a01      	cmp	r2, #1
 8002e52:	f300 80bf 	bgt.w	8002fd4 <_dtoa_r+0x88c>
 8002e56:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8002e58:	2a00      	cmp	r2, #0
 8002e5a:	f000 80b7 	beq.w	8002fcc <_dtoa_r+0x884>
 8002e5e:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8002e62:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002e64:	4646      	mov	r6, r8
 8002e66:	9a08      	ldr	r2, [sp, #32]
 8002e68:	2101      	movs	r1, #1
 8002e6a:	441a      	add	r2, r3
 8002e6c:	4658      	mov	r0, fp
 8002e6e:	4498      	add	r8, r3
 8002e70:	9208      	str	r2, [sp, #32]
 8002e72:	f000 fc21 	bl	80036b8 <__i2b>
 8002e76:	4605      	mov	r5, r0
 8002e78:	b15e      	cbz	r6, 8002e92 <_dtoa_r+0x74a>
 8002e7a:	9b08      	ldr	r3, [sp, #32]
 8002e7c:	2b00      	cmp	r3, #0
 8002e7e:	dd08      	ble.n	8002e92 <_dtoa_r+0x74a>
 8002e80:	42b3      	cmp	r3, r6
 8002e82:	9a08      	ldr	r2, [sp, #32]
 8002e84:	bfa8      	it	ge
 8002e86:	4633      	movge	r3, r6
 8002e88:	eba8 0803 	sub.w	r8, r8, r3
 8002e8c:	1af6      	subs	r6, r6, r3
 8002e8e:	1ad3      	subs	r3, r2, r3
 8002e90:	9308      	str	r3, [sp, #32]
 8002e92:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002e94:	b1f3      	cbz	r3, 8002ed4 <_dtoa_r+0x78c>
 8002e96:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002e98:	2b00      	cmp	r3, #0
 8002e9a:	f000 80b7 	beq.w	800300c <_dtoa_r+0x8c4>
 8002e9e:	b18c      	cbz	r4, 8002ec4 <_dtoa_r+0x77c>
 8002ea0:	4629      	mov	r1, r5
 8002ea2:	4622      	mov	r2, r4
 8002ea4:	4658      	mov	r0, fp
 8002ea6:	f000 fcc7 	bl	8003838 <__pow5mult>
 8002eaa:	464a      	mov	r2, r9
 8002eac:	4601      	mov	r1, r0
 8002eae:	4605      	mov	r5, r0
 8002eb0:	4658      	mov	r0, fp
 8002eb2:	f000 fc17 	bl	80036e4 <__multiply>
 8002eb6:	4649      	mov	r1, r9
 8002eb8:	9004      	str	r0, [sp, #16]
 8002eba:	4658      	mov	r0, fp
 8002ebc:	f000 fb48 	bl	8003550 <_Bfree>
 8002ec0:	9b04      	ldr	r3, [sp, #16]
 8002ec2:	4699      	mov	r9, r3
 8002ec4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002ec6:	1b1a      	subs	r2, r3, r4
 8002ec8:	d004      	beq.n	8002ed4 <_dtoa_r+0x78c>
 8002eca:	4649      	mov	r1, r9
 8002ecc:	4658      	mov	r0, fp
 8002ece:	f000 fcb3 	bl	8003838 <__pow5mult>
 8002ed2:	4681      	mov	r9, r0
 8002ed4:	2101      	movs	r1, #1
 8002ed6:	4658      	mov	r0, fp
 8002ed8:	f000 fbee 	bl	80036b8 <__i2b>
 8002edc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002ede:	4604      	mov	r4, r0
 8002ee0:	2b00      	cmp	r3, #0
 8002ee2:	f000 81cf 	beq.w	8003284 <_dtoa_r+0xb3c>
 8002ee6:	461a      	mov	r2, r3
 8002ee8:	4601      	mov	r1, r0
 8002eea:	4658      	mov	r0, fp
 8002eec:	f000 fca4 	bl	8003838 <__pow5mult>
 8002ef0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002ef2:	2b01      	cmp	r3, #1
 8002ef4:	4604      	mov	r4, r0
 8002ef6:	f300 8095 	bgt.w	8003024 <_dtoa_r+0x8dc>
 8002efa:	9b02      	ldr	r3, [sp, #8]
 8002efc:	2b00      	cmp	r3, #0
 8002efe:	f040 8087 	bne.w	8003010 <_dtoa_r+0x8c8>
 8002f02:	9b03      	ldr	r3, [sp, #12]
 8002f04:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002f08:	2b00      	cmp	r3, #0
 8002f0a:	f040 8089 	bne.w	8003020 <_dtoa_r+0x8d8>
 8002f0e:	9b03      	ldr	r3, [sp, #12]
 8002f10:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002f14:	0d1b      	lsrs	r3, r3, #20
 8002f16:	051b      	lsls	r3, r3, #20
 8002f18:	b12b      	cbz	r3, 8002f26 <_dtoa_r+0x7de>
 8002f1a:	9b08      	ldr	r3, [sp, #32]
 8002f1c:	3301      	adds	r3, #1
 8002f1e:	9308      	str	r3, [sp, #32]
 8002f20:	f108 0801 	add.w	r8, r8, #1
 8002f24:	2301      	movs	r3, #1
 8002f26:	930a      	str	r3, [sp, #40]	@ 0x28
 8002f28:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002f2a:	2b00      	cmp	r3, #0
 8002f2c:	f000 81b0 	beq.w	8003290 <_dtoa_r+0xb48>
 8002f30:	6923      	ldr	r3, [r4, #16]
 8002f32:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002f36:	6918      	ldr	r0, [r3, #16]
 8002f38:	f000 fb72 	bl	8003620 <__hi0bits>
 8002f3c:	f1c0 0020 	rsb	r0, r0, #32
 8002f40:	9b08      	ldr	r3, [sp, #32]
 8002f42:	4418      	add	r0, r3
 8002f44:	f010 001f 	ands.w	r0, r0, #31
 8002f48:	d077      	beq.n	800303a <_dtoa_r+0x8f2>
 8002f4a:	f1c0 0320 	rsb	r3, r0, #32
 8002f4e:	2b04      	cmp	r3, #4
 8002f50:	dd6b      	ble.n	800302a <_dtoa_r+0x8e2>
 8002f52:	9b08      	ldr	r3, [sp, #32]
 8002f54:	f1c0 001c 	rsb	r0, r0, #28
 8002f58:	4403      	add	r3, r0
 8002f5a:	4480      	add	r8, r0
 8002f5c:	4406      	add	r6, r0
 8002f5e:	9308      	str	r3, [sp, #32]
 8002f60:	f1b8 0f00 	cmp.w	r8, #0
 8002f64:	dd05      	ble.n	8002f72 <_dtoa_r+0x82a>
 8002f66:	4649      	mov	r1, r9
 8002f68:	4642      	mov	r2, r8
 8002f6a:	4658      	mov	r0, fp
 8002f6c:	f000 fcbe 	bl	80038ec <__lshift>
 8002f70:	4681      	mov	r9, r0
 8002f72:	9b08      	ldr	r3, [sp, #32]
 8002f74:	2b00      	cmp	r3, #0
 8002f76:	dd05      	ble.n	8002f84 <_dtoa_r+0x83c>
 8002f78:	4621      	mov	r1, r4
 8002f7a:	461a      	mov	r2, r3
 8002f7c:	4658      	mov	r0, fp
 8002f7e:	f000 fcb5 	bl	80038ec <__lshift>
 8002f82:	4604      	mov	r4, r0
 8002f84:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8002f86:	2b00      	cmp	r3, #0
 8002f88:	d059      	beq.n	800303e <_dtoa_r+0x8f6>
 8002f8a:	4621      	mov	r1, r4
 8002f8c:	4648      	mov	r0, r9
 8002f8e:	f000 fd19 	bl	80039c4 <__mcmp>
 8002f92:	2800      	cmp	r0, #0
 8002f94:	da53      	bge.n	800303e <_dtoa_r+0x8f6>
 8002f96:	1e7b      	subs	r3, r7, #1
 8002f98:	9304      	str	r3, [sp, #16]
 8002f9a:	4649      	mov	r1, r9
 8002f9c:	2300      	movs	r3, #0
 8002f9e:	220a      	movs	r2, #10
 8002fa0:	4658      	mov	r0, fp
 8002fa2:	f000 faf7 	bl	8003594 <__multadd>
 8002fa6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002fa8:	4681      	mov	r9, r0
 8002faa:	2b00      	cmp	r3, #0
 8002fac:	f000 8172 	beq.w	8003294 <_dtoa_r+0xb4c>
 8002fb0:	2300      	movs	r3, #0
 8002fb2:	4629      	mov	r1, r5
 8002fb4:	220a      	movs	r2, #10
 8002fb6:	4658      	mov	r0, fp
 8002fb8:	f000 faec 	bl	8003594 <__multadd>
 8002fbc:	9b00      	ldr	r3, [sp, #0]
 8002fbe:	2b00      	cmp	r3, #0
 8002fc0:	4605      	mov	r5, r0
 8002fc2:	dc67      	bgt.n	8003094 <_dtoa_r+0x94c>
 8002fc4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002fc6:	2b02      	cmp	r3, #2
 8002fc8:	dc41      	bgt.n	800304e <_dtoa_r+0x906>
 8002fca:	e063      	b.n	8003094 <_dtoa_r+0x94c>
 8002fcc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002fce:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8002fd2:	e746      	b.n	8002e62 <_dtoa_r+0x71a>
 8002fd4:	9b07      	ldr	r3, [sp, #28]
 8002fd6:	1e5c      	subs	r4, r3, #1
 8002fd8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002fda:	42a3      	cmp	r3, r4
 8002fdc:	bfbf      	itttt	lt
 8002fde:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8002fe0:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8002fe2:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8002fe4:	1ae3      	sublt	r3, r4, r3
 8002fe6:	bfb4      	ite	lt
 8002fe8:	18d2      	addlt	r2, r2, r3
 8002fea:	1b1c      	subge	r4, r3, r4
 8002fec:	9b07      	ldr	r3, [sp, #28]
 8002fee:	bfbc      	itt	lt
 8002ff0:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8002ff2:	2400      	movlt	r4, #0
 8002ff4:	2b00      	cmp	r3, #0
 8002ff6:	bfb5      	itete	lt
 8002ff8:	eba8 0603 	sublt.w	r6, r8, r3
 8002ffc:	9b07      	ldrge	r3, [sp, #28]
 8002ffe:	2300      	movlt	r3, #0
 8003000:	4646      	movge	r6, r8
 8003002:	e730      	b.n	8002e66 <_dtoa_r+0x71e>
 8003004:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003006:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8003008:	4646      	mov	r6, r8
 800300a:	e735      	b.n	8002e78 <_dtoa_r+0x730>
 800300c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800300e:	e75c      	b.n	8002eca <_dtoa_r+0x782>
 8003010:	2300      	movs	r3, #0
 8003012:	e788      	b.n	8002f26 <_dtoa_r+0x7de>
 8003014:	3fe00000 	.word	0x3fe00000
 8003018:	40240000 	.word	0x40240000
 800301c:	40140000 	.word	0x40140000
 8003020:	9b02      	ldr	r3, [sp, #8]
 8003022:	e780      	b.n	8002f26 <_dtoa_r+0x7de>
 8003024:	2300      	movs	r3, #0
 8003026:	930a      	str	r3, [sp, #40]	@ 0x28
 8003028:	e782      	b.n	8002f30 <_dtoa_r+0x7e8>
 800302a:	d099      	beq.n	8002f60 <_dtoa_r+0x818>
 800302c:	9a08      	ldr	r2, [sp, #32]
 800302e:	331c      	adds	r3, #28
 8003030:	441a      	add	r2, r3
 8003032:	4498      	add	r8, r3
 8003034:	441e      	add	r6, r3
 8003036:	9208      	str	r2, [sp, #32]
 8003038:	e792      	b.n	8002f60 <_dtoa_r+0x818>
 800303a:	4603      	mov	r3, r0
 800303c:	e7f6      	b.n	800302c <_dtoa_r+0x8e4>
 800303e:	9b07      	ldr	r3, [sp, #28]
 8003040:	9704      	str	r7, [sp, #16]
 8003042:	2b00      	cmp	r3, #0
 8003044:	dc20      	bgt.n	8003088 <_dtoa_r+0x940>
 8003046:	9300      	str	r3, [sp, #0]
 8003048:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800304a:	2b02      	cmp	r3, #2
 800304c:	dd1e      	ble.n	800308c <_dtoa_r+0x944>
 800304e:	9b00      	ldr	r3, [sp, #0]
 8003050:	2b00      	cmp	r3, #0
 8003052:	f47f aec0 	bne.w	8002dd6 <_dtoa_r+0x68e>
 8003056:	4621      	mov	r1, r4
 8003058:	2205      	movs	r2, #5
 800305a:	4658      	mov	r0, fp
 800305c:	f000 fa9a 	bl	8003594 <__multadd>
 8003060:	4601      	mov	r1, r0
 8003062:	4604      	mov	r4, r0
 8003064:	4648      	mov	r0, r9
 8003066:	f000 fcad 	bl	80039c4 <__mcmp>
 800306a:	2800      	cmp	r0, #0
 800306c:	f77f aeb3 	ble.w	8002dd6 <_dtoa_r+0x68e>
 8003070:	4656      	mov	r6, sl
 8003072:	2331      	movs	r3, #49	@ 0x31
 8003074:	f806 3b01 	strb.w	r3, [r6], #1
 8003078:	9b04      	ldr	r3, [sp, #16]
 800307a:	3301      	adds	r3, #1
 800307c:	9304      	str	r3, [sp, #16]
 800307e:	e6ae      	b.n	8002dde <_dtoa_r+0x696>
 8003080:	9c07      	ldr	r4, [sp, #28]
 8003082:	9704      	str	r7, [sp, #16]
 8003084:	4625      	mov	r5, r4
 8003086:	e7f3      	b.n	8003070 <_dtoa_r+0x928>
 8003088:	9b07      	ldr	r3, [sp, #28]
 800308a:	9300      	str	r3, [sp, #0]
 800308c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800308e:	2b00      	cmp	r3, #0
 8003090:	f000 8104 	beq.w	800329c <_dtoa_r+0xb54>
 8003094:	2e00      	cmp	r6, #0
 8003096:	dd05      	ble.n	80030a4 <_dtoa_r+0x95c>
 8003098:	4629      	mov	r1, r5
 800309a:	4632      	mov	r2, r6
 800309c:	4658      	mov	r0, fp
 800309e:	f000 fc25 	bl	80038ec <__lshift>
 80030a2:	4605      	mov	r5, r0
 80030a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80030a6:	2b00      	cmp	r3, #0
 80030a8:	d05a      	beq.n	8003160 <_dtoa_r+0xa18>
 80030aa:	6869      	ldr	r1, [r5, #4]
 80030ac:	4658      	mov	r0, fp
 80030ae:	f000 fa0f 	bl	80034d0 <_Balloc>
 80030b2:	4606      	mov	r6, r0
 80030b4:	b928      	cbnz	r0, 80030c2 <_dtoa_r+0x97a>
 80030b6:	4b84      	ldr	r3, [pc, #528]	@ (80032c8 <_dtoa_r+0xb80>)
 80030b8:	4602      	mov	r2, r0
 80030ba:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80030be:	f7ff bb5a 	b.w	8002776 <_dtoa_r+0x2e>
 80030c2:	692a      	ldr	r2, [r5, #16]
 80030c4:	3202      	adds	r2, #2
 80030c6:	0092      	lsls	r2, r2, #2
 80030c8:	f105 010c 	add.w	r1, r5, #12
 80030cc:	300c      	adds	r0, #12
 80030ce:	f000 ffaf 	bl	8004030 <memcpy>
 80030d2:	2201      	movs	r2, #1
 80030d4:	4631      	mov	r1, r6
 80030d6:	4658      	mov	r0, fp
 80030d8:	f000 fc08 	bl	80038ec <__lshift>
 80030dc:	f10a 0301 	add.w	r3, sl, #1
 80030e0:	9307      	str	r3, [sp, #28]
 80030e2:	9b00      	ldr	r3, [sp, #0]
 80030e4:	4453      	add	r3, sl
 80030e6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80030e8:	9b02      	ldr	r3, [sp, #8]
 80030ea:	f003 0301 	and.w	r3, r3, #1
 80030ee:	462f      	mov	r7, r5
 80030f0:	930a      	str	r3, [sp, #40]	@ 0x28
 80030f2:	4605      	mov	r5, r0
 80030f4:	9b07      	ldr	r3, [sp, #28]
 80030f6:	4621      	mov	r1, r4
 80030f8:	3b01      	subs	r3, #1
 80030fa:	4648      	mov	r0, r9
 80030fc:	9300      	str	r3, [sp, #0]
 80030fe:	f7ff fa98 	bl	8002632 <quorem>
 8003102:	4639      	mov	r1, r7
 8003104:	9002      	str	r0, [sp, #8]
 8003106:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800310a:	4648      	mov	r0, r9
 800310c:	f000 fc5a 	bl	80039c4 <__mcmp>
 8003110:	462a      	mov	r2, r5
 8003112:	9008      	str	r0, [sp, #32]
 8003114:	4621      	mov	r1, r4
 8003116:	4658      	mov	r0, fp
 8003118:	f000 fc70 	bl	80039fc <__mdiff>
 800311c:	68c2      	ldr	r2, [r0, #12]
 800311e:	4606      	mov	r6, r0
 8003120:	bb02      	cbnz	r2, 8003164 <_dtoa_r+0xa1c>
 8003122:	4601      	mov	r1, r0
 8003124:	4648      	mov	r0, r9
 8003126:	f000 fc4d 	bl	80039c4 <__mcmp>
 800312a:	4602      	mov	r2, r0
 800312c:	4631      	mov	r1, r6
 800312e:	4658      	mov	r0, fp
 8003130:	920e      	str	r2, [sp, #56]	@ 0x38
 8003132:	f000 fa0d 	bl	8003550 <_Bfree>
 8003136:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003138:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800313a:	9e07      	ldr	r6, [sp, #28]
 800313c:	ea43 0102 	orr.w	r1, r3, r2
 8003140:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003142:	4319      	orrs	r1, r3
 8003144:	d110      	bne.n	8003168 <_dtoa_r+0xa20>
 8003146:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800314a:	d029      	beq.n	80031a0 <_dtoa_r+0xa58>
 800314c:	9b08      	ldr	r3, [sp, #32]
 800314e:	2b00      	cmp	r3, #0
 8003150:	dd02      	ble.n	8003158 <_dtoa_r+0xa10>
 8003152:	9b02      	ldr	r3, [sp, #8]
 8003154:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8003158:	9b00      	ldr	r3, [sp, #0]
 800315a:	f883 8000 	strb.w	r8, [r3]
 800315e:	e63f      	b.n	8002de0 <_dtoa_r+0x698>
 8003160:	4628      	mov	r0, r5
 8003162:	e7bb      	b.n	80030dc <_dtoa_r+0x994>
 8003164:	2201      	movs	r2, #1
 8003166:	e7e1      	b.n	800312c <_dtoa_r+0x9e4>
 8003168:	9b08      	ldr	r3, [sp, #32]
 800316a:	2b00      	cmp	r3, #0
 800316c:	db04      	blt.n	8003178 <_dtoa_r+0xa30>
 800316e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003170:	430b      	orrs	r3, r1
 8003172:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003174:	430b      	orrs	r3, r1
 8003176:	d120      	bne.n	80031ba <_dtoa_r+0xa72>
 8003178:	2a00      	cmp	r2, #0
 800317a:	dded      	ble.n	8003158 <_dtoa_r+0xa10>
 800317c:	4649      	mov	r1, r9
 800317e:	2201      	movs	r2, #1
 8003180:	4658      	mov	r0, fp
 8003182:	f000 fbb3 	bl	80038ec <__lshift>
 8003186:	4621      	mov	r1, r4
 8003188:	4681      	mov	r9, r0
 800318a:	f000 fc1b 	bl	80039c4 <__mcmp>
 800318e:	2800      	cmp	r0, #0
 8003190:	dc03      	bgt.n	800319a <_dtoa_r+0xa52>
 8003192:	d1e1      	bne.n	8003158 <_dtoa_r+0xa10>
 8003194:	f018 0f01 	tst.w	r8, #1
 8003198:	d0de      	beq.n	8003158 <_dtoa_r+0xa10>
 800319a:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800319e:	d1d8      	bne.n	8003152 <_dtoa_r+0xa0a>
 80031a0:	9a00      	ldr	r2, [sp, #0]
 80031a2:	2339      	movs	r3, #57	@ 0x39
 80031a4:	7013      	strb	r3, [r2, #0]
 80031a6:	4633      	mov	r3, r6
 80031a8:	461e      	mov	r6, r3
 80031aa:	3b01      	subs	r3, #1
 80031ac:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80031b0:	2a39      	cmp	r2, #57	@ 0x39
 80031b2:	d052      	beq.n	800325a <_dtoa_r+0xb12>
 80031b4:	3201      	adds	r2, #1
 80031b6:	701a      	strb	r2, [r3, #0]
 80031b8:	e612      	b.n	8002de0 <_dtoa_r+0x698>
 80031ba:	2a00      	cmp	r2, #0
 80031bc:	dd07      	ble.n	80031ce <_dtoa_r+0xa86>
 80031be:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80031c2:	d0ed      	beq.n	80031a0 <_dtoa_r+0xa58>
 80031c4:	9a00      	ldr	r2, [sp, #0]
 80031c6:	f108 0301 	add.w	r3, r8, #1
 80031ca:	7013      	strb	r3, [r2, #0]
 80031cc:	e608      	b.n	8002de0 <_dtoa_r+0x698>
 80031ce:	9b07      	ldr	r3, [sp, #28]
 80031d0:	9a07      	ldr	r2, [sp, #28]
 80031d2:	f803 8c01 	strb.w	r8, [r3, #-1]
 80031d6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80031d8:	4293      	cmp	r3, r2
 80031da:	d028      	beq.n	800322e <_dtoa_r+0xae6>
 80031dc:	4649      	mov	r1, r9
 80031de:	2300      	movs	r3, #0
 80031e0:	220a      	movs	r2, #10
 80031e2:	4658      	mov	r0, fp
 80031e4:	f000 f9d6 	bl	8003594 <__multadd>
 80031e8:	42af      	cmp	r7, r5
 80031ea:	4681      	mov	r9, r0
 80031ec:	f04f 0300 	mov.w	r3, #0
 80031f0:	f04f 020a 	mov.w	r2, #10
 80031f4:	4639      	mov	r1, r7
 80031f6:	4658      	mov	r0, fp
 80031f8:	d107      	bne.n	800320a <_dtoa_r+0xac2>
 80031fa:	f000 f9cb 	bl	8003594 <__multadd>
 80031fe:	4607      	mov	r7, r0
 8003200:	4605      	mov	r5, r0
 8003202:	9b07      	ldr	r3, [sp, #28]
 8003204:	3301      	adds	r3, #1
 8003206:	9307      	str	r3, [sp, #28]
 8003208:	e774      	b.n	80030f4 <_dtoa_r+0x9ac>
 800320a:	f000 f9c3 	bl	8003594 <__multadd>
 800320e:	4629      	mov	r1, r5
 8003210:	4607      	mov	r7, r0
 8003212:	2300      	movs	r3, #0
 8003214:	220a      	movs	r2, #10
 8003216:	4658      	mov	r0, fp
 8003218:	f000 f9bc 	bl	8003594 <__multadd>
 800321c:	4605      	mov	r5, r0
 800321e:	e7f0      	b.n	8003202 <_dtoa_r+0xaba>
 8003220:	9b00      	ldr	r3, [sp, #0]
 8003222:	2b00      	cmp	r3, #0
 8003224:	bfcc      	ite	gt
 8003226:	461e      	movgt	r6, r3
 8003228:	2601      	movle	r6, #1
 800322a:	4456      	add	r6, sl
 800322c:	2700      	movs	r7, #0
 800322e:	4649      	mov	r1, r9
 8003230:	2201      	movs	r2, #1
 8003232:	4658      	mov	r0, fp
 8003234:	f000 fb5a 	bl	80038ec <__lshift>
 8003238:	4621      	mov	r1, r4
 800323a:	4681      	mov	r9, r0
 800323c:	f000 fbc2 	bl	80039c4 <__mcmp>
 8003240:	2800      	cmp	r0, #0
 8003242:	dcb0      	bgt.n	80031a6 <_dtoa_r+0xa5e>
 8003244:	d102      	bne.n	800324c <_dtoa_r+0xb04>
 8003246:	f018 0f01 	tst.w	r8, #1
 800324a:	d1ac      	bne.n	80031a6 <_dtoa_r+0xa5e>
 800324c:	4633      	mov	r3, r6
 800324e:	461e      	mov	r6, r3
 8003250:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003254:	2a30      	cmp	r2, #48	@ 0x30
 8003256:	d0fa      	beq.n	800324e <_dtoa_r+0xb06>
 8003258:	e5c2      	b.n	8002de0 <_dtoa_r+0x698>
 800325a:	459a      	cmp	sl, r3
 800325c:	d1a4      	bne.n	80031a8 <_dtoa_r+0xa60>
 800325e:	9b04      	ldr	r3, [sp, #16]
 8003260:	3301      	adds	r3, #1
 8003262:	9304      	str	r3, [sp, #16]
 8003264:	2331      	movs	r3, #49	@ 0x31
 8003266:	f88a 3000 	strb.w	r3, [sl]
 800326a:	e5b9      	b.n	8002de0 <_dtoa_r+0x698>
 800326c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800326e:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 80032cc <_dtoa_r+0xb84>
 8003272:	b11b      	cbz	r3, 800327c <_dtoa_r+0xb34>
 8003274:	f10a 0308 	add.w	r3, sl, #8
 8003278:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800327a:	6013      	str	r3, [r2, #0]
 800327c:	4650      	mov	r0, sl
 800327e:	b019      	add	sp, #100	@ 0x64
 8003280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003284:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003286:	2b01      	cmp	r3, #1
 8003288:	f77f ae37 	ble.w	8002efa <_dtoa_r+0x7b2>
 800328c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800328e:	930a      	str	r3, [sp, #40]	@ 0x28
 8003290:	2001      	movs	r0, #1
 8003292:	e655      	b.n	8002f40 <_dtoa_r+0x7f8>
 8003294:	9b00      	ldr	r3, [sp, #0]
 8003296:	2b00      	cmp	r3, #0
 8003298:	f77f aed6 	ble.w	8003048 <_dtoa_r+0x900>
 800329c:	4656      	mov	r6, sl
 800329e:	4621      	mov	r1, r4
 80032a0:	4648      	mov	r0, r9
 80032a2:	f7ff f9c6 	bl	8002632 <quorem>
 80032a6:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80032aa:	f806 8b01 	strb.w	r8, [r6], #1
 80032ae:	9b00      	ldr	r3, [sp, #0]
 80032b0:	eba6 020a 	sub.w	r2, r6, sl
 80032b4:	4293      	cmp	r3, r2
 80032b6:	ddb3      	ble.n	8003220 <_dtoa_r+0xad8>
 80032b8:	4649      	mov	r1, r9
 80032ba:	2300      	movs	r3, #0
 80032bc:	220a      	movs	r2, #10
 80032be:	4658      	mov	r0, fp
 80032c0:	f000 f968 	bl	8003594 <__multadd>
 80032c4:	4681      	mov	r9, r0
 80032c6:	e7ea      	b.n	800329e <_dtoa_r+0xb56>
 80032c8:	08004f59 	.word	0x08004f59
 80032cc:	08004edd 	.word	0x08004edd

080032d0 <_free_r>:
 80032d0:	b538      	push	{r3, r4, r5, lr}
 80032d2:	4605      	mov	r5, r0
 80032d4:	2900      	cmp	r1, #0
 80032d6:	d041      	beq.n	800335c <_free_r+0x8c>
 80032d8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80032dc:	1f0c      	subs	r4, r1, #4
 80032de:	2b00      	cmp	r3, #0
 80032e0:	bfb8      	it	lt
 80032e2:	18e4      	addlt	r4, r4, r3
 80032e4:	f000 f8e8 	bl	80034b8 <__malloc_lock>
 80032e8:	4a1d      	ldr	r2, [pc, #116]	@ (8003360 <_free_r+0x90>)
 80032ea:	6813      	ldr	r3, [r2, #0]
 80032ec:	b933      	cbnz	r3, 80032fc <_free_r+0x2c>
 80032ee:	6063      	str	r3, [r4, #4]
 80032f0:	6014      	str	r4, [r2, #0]
 80032f2:	4628      	mov	r0, r5
 80032f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80032f8:	f000 b8e4 	b.w	80034c4 <__malloc_unlock>
 80032fc:	42a3      	cmp	r3, r4
 80032fe:	d908      	bls.n	8003312 <_free_r+0x42>
 8003300:	6820      	ldr	r0, [r4, #0]
 8003302:	1821      	adds	r1, r4, r0
 8003304:	428b      	cmp	r3, r1
 8003306:	bf01      	itttt	eq
 8003308:	6819      	ldreq	r1, [r3, #0]
 800330a:	685b      	ldreq	r3, [r3, #4]
 800330c:	1809      	addeq	r1, r1, r0
 800330e:	6021      	streq	r1, [r4, #0]
 8003310:	e7ed      	b.n	80032ee <_free_r+0x1e>
 8003312:	461a      	mov	r2, r3
 8003314:	685b      	ldr	r3, [r3, #4]
 8003316:	b10b      	cbz	r3, 800331c <_free_r+0x4c>
 8003318:	42a3      	cmp	r3, r4
 800331a:	d9fa      	bls.n	8003312 <_free_r+0x42>
 800331c:	6811      	ldr	r1, [r2, #0]
 800331e:	1850      	adds	r0, r2, r1
 8003320:	42a0      	cmp	r0, r4
 8003322:	d10b      	bne.n	800333c <_free_r+0x6c>
 8003324:	6820      	ldr	r0, [r4, #0]
 8003326:	4401      	add	r1, r0
 8003328:	1850      	adds	r0, r2, r1
 800332a:	4283      	cmp	r3, r0
 800332c:	6011      	str	r1, [r2, #0]
 800332e:	d1e0      	bne.n	80032f2 <_free_r+0x22>
 8003330:	6818      	ldr	r0, [r3, #0]
 8003332:	685b      	ldr	r3, [r3, #4]
 8003334:	6053      	str	r3, [r2, #4]
 8003336:	4408      	add	r0, r1
 8003338:	6010      	str	r0, [r2, #0]
 800333a:	e7da      	b.n	80032f2 <_free_r+0x22>
 800333c:	d902      	bls.n	8003344 <_free_r+0x74>
 800333e:	230c      	movs	r3, #12
 8003340:	602b      	str	r3, [r5, #0]
 8003342:	e7d6      	b.n	80032f2 <_free_r+0x22>
 8003344:	6820      	ldr	r0, [r4, #0]
 8003346:	1821      	adds	r1, r4, r0
 8003348:	428b      	cmp	r3, r1
 800334a:	bf04      	itt	eq
 800334c:	6819      	ldreq	r1, [r3, #0]
 800334e:	685b      	ldreq	r3, [r3, #4]
 8003350:	6063      	str	r3, [r4, #4]
 8003352:	bf04      	itt	eq
 8003354:	1809      	addeq	r1, r1, r0
 8003356:	6021      	streq	r1, [r4, #0]
 8003358:	6054      	str	r4, [r2, #4]
 800335a:	e7ca      	b.n	80032f2 <_free_r+0x22>
 800335c:	bd38      	pop	{r3, r4, r5, pc}
 800335e:	bf00      	nop
 8003360:	20000344 	.word	0x20000344

08003364 <malloc>:
 8003364:	4b02      	ldr	r3, [pc, #8]	@ (8003370 <malloc+0xc>)
 8003366:	4601      	mov	r1, r0
 8003368:	6818      	ldr	r0, [r3, #0]
 800336a:	f000 b825 	b.w	80033b8 <_malloc_r>
 800336e:	bf00      	nop
 8003370:	20000014 	.word	0x20000014

08003374 <sbrk_aligned>:
 8003374:	b570      	push	{r4, r5, r6, lr}
 8003376:	4e0f      	ldr	r6, [pc, #60]	@ (80033b4 <sbrk_aligned+0x40>)
 8003378:	460c      	mov	r4, r1
 800337a:	6831      	ldr	r1, [r6, #0]
 800337c:	4605      	mov	r5, r0
 800337e:	b911      	cbnz	r1, 8003386 <sbrk_aligned+0x12>
 8003380:	f000 fe46 	bl	8004010 <_sbrk_r>
 8003384:	6030      	str	r0, [r6, #0]
 8003386:	4621      	mov	r1, r4
 8003388:	4628      	mov	r0, r5
 800338a:	f000 fe41 	bl	8004010 <_sbrk_r>
 800338e:	1c43      	adds	r3, r0, #1
 8003390:	d103      	bne.n	800339a <sbrk_aligned+0x26>
 8003392:	f04f 34ff 	mov.w	r4, #4294967295
 8003396:	4620      	mov	r0, r4
 8003398:	bd70      	pop	{r4, r5, r6, pc}
 800339a:	1cc4      	adds	r4, r0, #3
 800339c:	f024 0403 	bic.w	r4, r4, #3
 80033a0:	42a0      	cmp	r0, r4
 80033a2:	d0f8      	beq.n	8003396 <sbrk_aligned+0x22>
 80033a4:	1a21      	subs	r1, r4, r0
 80033a6:	4628      	mov	r0, r5
 80033a8:	f000 fe32 	bl	8004010 <_sbrk_r>
 80033ac:	3001      	adds	r0, #1
 80033ae:	d1f2      	bne.n	8003396 <sbrk_aligned+0x22>
 80033b0:	e7ef      	b.n	8003392 <sbrk_aligned+0x1e>
 80033b2:	bf00      	nop
 80033b4:	20000340 	.word	0x20000340

080033b8 <_malloc_r>:
 80033b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80033bc:	1ccd      	adds	r5, r1, #3
 80033be:	f025 0503 	bic.w	r5, r5, #3
 80033c2:	3508      	adds	r5, #8
 80033c4:	2d0c      	cmp	r5, #12
 80033c6:	bf38      	it	cc
 80033c8:	250c      	movcc	r5, #12
 80033ca:	2d00      	cmp	r5, #0
 80033cc:	4606      	mov	r6, r0
 80033ce:	db01      	blt.n	80033d4 <_malloc_r+0x1c>
 80033d0:	42a9      	cmp	r1, r5
 80033d2:	d904      	bls.n	80033de <_malloc_r+0x26>
 80033d4:	230c      	movs	r3, #12
 80033d6:	6033      	str	r3, [r6, #0]
 80033d8:	2000      	movs	r0, #0
 80033da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80033de:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80034b4 <_malloc_r+0xfc>
 80033e2:	f000 f869 	bl	80034b8 <__malloc_lock>
 80033e6:	f8d8 3000 	ldr.w	r3, [r8]
 80033ea:	461c      	mov	r4, r3
 80033ec:	bb44      	cbnz	r4, 8003440 <_malloc_r+0x88>
 80033ee:	4629      	mov	r1, r5
 80033f0:	4630      	mov	r0, r6
 80033f2:	f7ff ffbf 	bl	8003374 <sbrk_aligned>
 80033f6:	1c43      	adds	r3, r0, #1
 80033f8:	4604      	mov	r4, r0
 80033fa:	d158      	bne.n	80034ae <_malloc_r+0xf6>
 80033fc:	f8d8 4000 	ldr.w	r4, [r8]
 8003400:	4627      	mov	r7, r4
 8003402:	2f00      	cmp	r7, #0
 8003404:	d143      	bne.n	800348e <_malloc_r+0xd6>
 8003406:	2c00      	cmp	r4, #0
 8003408:	d04b      	beq.n	80034a2 <_malloc_r+0xea>
 800340a:	6823      	ldr	r3, [r4, #0]
 800340c:	4639      	mov	r1, r7
 800340e:	4630      	mov	r0, r6
 8003410:	eb04 0903 	add.w	r9, r4, r3
 8003414:	f000 fdfc 	bl	8004010 <_sbrk_r>
 8003418:	4581      	cmp	r9, r0
 800341a:	d142      	bne.n	80034a2 <_malloc_r+0xea>
 800341c:	6821      	ldr	r1, [r4, #0]
 800341e:	1a6d      	subs	r5, r5, r1
 8003420:	4629      	mov	r1, r5
 8003422:	4630      	mov	r0, r6
 8003424:	f7ff ffa6 	bl	8003374 <sbrk_aligned>
 8003428:	3001      	adds	r0, #1
 800342a:	d03a      	beq.n	80034a2 <_malloc_r+0xea>
 800342c:	6823      	ldr	r3, [r4, #0]
 800342e:	442b      	add	r3, r5
 8003430:	6023      	str	r3, [r4, #0]
 8003432:	f8d8 3000 	ldr.w	r3, [r8]
 8003436:	685a      	ldr	r2, [r3, #4]
 8003438:	bb62      	cbnz	r2, 8003494 <_malloc_r+0xdc>
 800343a:	f8c8 7000 	str.w	r7, [r8]
 800343e:	e00f      	b.n	8003460 <_malloc_r+0xa8>
 8003440:	6822      	ldr	r2, [r4, #0]
 8003442:	1b52      	subs	r2, r2, r5
 8003444:	d420      	bmi.n	8003488 <_malloc_r+0xd0>
 8003446:	2a0b      	cmp	r2, #11
 8003448:	d917      	bls.n	800347a <_malloc_r+0xc2>
 800344a:	1961      	adds	r1, r4, r5
 800344c:	42a3      	cmp	r3, r4
 800344e:	6025      	str	r5, [r4, #0]
 8003450:	bf18      	it	ne
 8003452:	6059      	strne	r1, [r3, #4]
 8003454:	6863      	ldr	r3, [r4, #4]
 8003456:	bf08      	it	eq
 8003458:	f8c8 1000 	streq.w	r1, [r8]
 800345c:	5162      	str	r2, [r4, r5]
 800345e:	604b      	str	r3, [r1, #4]
 8003460:	4630      	mov	r0, r6
 8003462:	f000 f82f 	bl	80034c4 <__malloc_unlock>
 8003466:	f104 000b 	add.w	r0, r4, #11
 800346a:	1d23      	adds	r3, r4, #4
 800346c:	f020 0007 	bic.w	r0, r0, #7
 8003470:	1ac2      	subs	r2, r0, r3
 8003472:	bf1c      	itt	ne
 8003474:	1a1b      	subne	r3, r3, r0
 8003476:	50a3      	strne	r3, [r4, r2]
 8003478:	e7af      	b.n	80033da <_malloc_r+0x22>
 800347a:	6862      	ldr	r2, [r4, #4]
 800347c:	42a3      	cmp	r3, r4
 800347e:	bf0c      	ite	eq
 8003480:	f8c8 2000 	streq.w	r2, [r8]
 8003484:	605a      	strne	r2, [r3, #4]
 8003486:	e7eb      	b.n	8003460 <_malloc_r+0xa8>
 8003488:	4623      	mov	r3, r4
 800348a:	6864      	ldr	r4, [r4, #4]
 800348c:	e7ae      	b.n	80033ec <_malloc_r+0x34>
 800348e:	463c      	mov	r4, r7
 8003490:	687f      	ldr	r7, [r7, #4]
 8003492:	e7b6      	b.n	8003402 <_malloc_r+0x4a>
 8003494:	461a      	mov	r2, r3
 8003496:	685b      	ldr	r3, [r3, #4]
 8003498:	42a3      	cmp	r3, r4
 800349a:	d1fb      	bne.n	8003494 <_malloc_r+0xdc>
 800349c:	2300      	movs	r3, #0
 800349e:	6053      	str	r3, [r2, #4]
 80034a0:	e7de      	b.n	8003460 <_malloc_r+0xa8>
 80034a2:	230c      	movs	r3, #12
 80034a4:	6033      	str	r3, [r6, #0]
 80034a6:	4630      	mov	r0, r6
 80034a8:	f000 f80c 	bl	80034c4 <__malloc_unlock>
 80034ac:	e794      	b.n	80033d8 <_malloc_r+0x20>
 80034ae:	6005      	str	r5, [r0, #0]
 80034b0:	e7d6      	b.n	8003460 <_malloc_r+0xa8>
 80034b2:	bf00      	nop
 80034b4:	20000344 	.word	0x20000344

080034b8 <__malloc_lock>:
 80034b8:	4801      	ldr	r0, [pc, #4]	@ (80034c0 <__malloc_lock+0x8>)
 80034ba:	f7ff b8b8 	b.w	800262e <__retarget_lock_acquire_recursive>
 80034be:	bf00      	nop
 80034c0:	2000033c 	.word	0x2000033c

080034c4 <__malloc_unlock>:
 80034c4:	4801      	ldr	r0, [pc, #4]	@ (80034cc <__malloc_unlock+0x8>)
 80034c6:	f7ff b8b3 	b.w	8002630 <__retarget_lock_release_recursive>
 80034ca:	bf00      	nop
 80034cc:	2000033c 	.word	0x2000033c

080034d0 <_Balloc>:
 80034d0:	b570      	push	{r4, r5, r6, lr}
 80034d2:	69c6      	ldr	r6, [r0, #28]
 80034d4:	4604      	mov	r4, r0
 80034d6:	460d      	mov	r5, r1
 80034d8:	b976      	cbnz	r6, 80034f8 <_Balloc+0x28>
 80034da:	2010      	movs	r0, #16
 80034dc:	f7ff ff42 	bl	8003364 <malloc>
 80034e0:	4602      	mov	r2, r0
 80034e2:	61e0      	str	r0, [r4, #28]
 80034e4:	b920      	cbnz	r0, 80034f0 <_Balloc+0x20>
 80034e6:	4b18      	ldr	r3, [pc, #96]	@ (8003548 <_Balloc+0x78>)
 80034e8:	4818      	ldr	r0, [pc, #96]	@ (800354c <_Balloc+0x7c>)
 80034ea:	216b      	movs	r1, #107	@ 0x6b
 80034ec:	f000 fdae 	bl	800404c <__assert_func>
 80034f0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80034f4:	6006      	str	r6, [r0, #0]
 80034f6:	60c6      	str	r6, [r0, #12]
 80034f8:	69e6      	ldr	r6, [r4, #28]
 80034fa:	68f3      	ldr	r3, [r6, #12]
 80034fc:	b183      	cbz	r3, 8003520 <_Balloc+0x50>
 80034fe:	69e3      	ldr	r3, [r4, #28]
 8003500:	68db      	ldr	r3, [r3, #12]
 8003502:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003506:	b9b8      	cbnz	r0, 8003538 <_Balloc+0x68>
 8003508:	2101      	movs	r1, #1
 800350a:	fa01 f605 	lsl.w	r6, r1, r5
 800350e:	1d72      	adds	r2, r6, #5
 8003510:	0092      	lsls	r2, r2, #2
 8003512:	4620      	mov	r0, r4
 8003514:	f000 fdb8 	bl	8004088 <_calloc_r>
 8003518:	b160      	cbz	r0, 8003534 <_Balloc+0x64>
 800351a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800351e:	e00e      	b.n	800353e <_Balloc+0x6e>
 8003520:	2221      	movs	r2, #33	@ 0x21
 8003522:	2104      	movs	r1, #4
 8003524:	4620      	mov	r0, r4
 8003526:	f000 fdaf 	bl	8004088 <_calloc_r>
 800352a:	69e3      	ldr	r3, [r4, #28]
 800352c:	60f0      	str	r0, [r6, #12]
 800352e:	68db      	ldr	r3, [r3, #12]
 8003530:	2b00      	cmp	r3, #0
 8003532:	d1e4      	bne.n	80034fe <_Balloc+0x2e>
 8003534:	2000      	movs	r0, #0
 8003536:	bd70      	pop	{r4, r5, r6, pc}
 8003538:	6802      	ldr	r2, [r0, #0]
 800353a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800353e:	2300      	movs	r3, #0
 8003540:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003544:	e7f7      	b.n	8003536 <_Balloc+0x66>
 8003546:	bf00      	nop
 8003548:	08004eea 	.word	0x08004eea
 800354c:	08004f6a 	.word	0x08004f6a

08003550 <_Bfree>:
 8003550:	b570      	push	{r4, r5, r6, lr}
 8003552:	69c6      	ldr	r6, [r0, #28]
 8003554:	4605      	mov	r5, r0
 8003556:	460c      	mov	r4, r1
 8003558:	b976      	cbnz	r6, 8003578 <_Bfree+0x28>
 800355a:	2010      	movs	r0, #16
 800355c:	f7ff ff02 	bl	8003364 <malloc>
 8003560:	4602      	mov	r2, r0
 8003562:	61e8      	str	r0, [r5, #28]
 8003564:	b920      	cbnz	r0, 8003570 <_Bfree+0x20>
 8003566:	4b09      	ldr	r3, [pc, #36]	@ (800358c <_Bfree+0x3c>)
 8003568:	4809      	ldr	r0, [pc, #36]	@ (8003590 <_Bfree+0x40>)
 800356a:	218f      	movs	r1, #143	@ 0x8f
 800356c:	f000 fd6e 	bl	800404c <__assert_func>
 8003570:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003574:	6006      	str	r6, [r0, #0]
 8003576:	60c6      	str	r6, [r0, #12]
 8003578:	b13c      	cbz	r4, 800358a <_Bfree+0x3a>
 800357a:	69eb      	ldr	r3, [r5, #28]
 800357c:	6862      	ldr	r2, [r4, #4]
 800357e:	68db      	ldr	r3, [r3, #12]
 8003580:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003584:	6021      	str	r1, [r4, #0]
 8003586:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800358a:	bd70      	pop	{r4, r5, r6, pc}
 800358c:	08004eea 	.word	0x08004eea
 8003590:	08004f6a 	.word	0x08004f6a

08003594 <__multadd>:
 8003594:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003598:	690d      	ldr	r5, [r1, #16]
 800359a:	4607      	mov	r7, r0
 800359c:	460c      	mov	r4, r1
 800359e:	461e      	mov	r6, r3
 80035a0:	f101 0c14 	add.w	ip, r1, #20
 80035a4:	2000      	movs	r0, #0
 80035a6:	f8dc 3000 	ldr.w	r3, [ip]
 80035aa:	b299      	uxth	r1, r3
 80035ac:	fb02 6101 	mla	r1, r2, r1, r6
 80035b0:	0c1e      	lsrs	r6, r3, #16
 80035b2:	0c0b      	lsrs	r3, r1, #16
 80035b4:	fb02 3306 	mla	r3, r2, r6, r3
 80035b8:	b289      	uxth	r1, r1
 80035ba:	3001      	adds	r0, #1
 80035bc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80035c0:	4285      	cmp	r5, r0
 80035c2:	f84c 1b04 	str.w	r1, [ip], #4
 80035c6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80035ca:	dcec      	bgt.n	80035a6 <__multadd+0x12>
 80035cc:	b30e      	cbz	r6, 8003612 <__multadd+0x7e>
 80035ce:	68a3      	ldr	r3, [r4, #8]
 80035d0:	42ab      	cmp	r3, r5
 80035d2:	dc19      	bgt.n	8003608 <__multadd+0x74>
 80035d4:	6861      	ldr	r1, [r4, #4]
 80035d6:	4638      	mov	r0, r7
 80035d8:	3101      	adds	r1, #1
 80035da:	f7ff ff79 	bl	80034d0 <_Balloc>
 80035de:	4680      	mov	r8, r0
 80035e0:	b928      	cbnz	r0, 80035ee <__multadd+0x5a>
 80035e2:	4602      	mov	r2, r0
 80035e4:	4b0c      	ldr	r3, [pc, #48]	@ (8003618 <__multadd+0x84>)
 80035e6:	480d      	ldr	r0, [pc, #52]	@ (800361c <__multadd+0x88>)
 80035e8:	21ba      	movs	r1, #186	@ 0xba
 80035ea:	f000 fd2f 	bl	800404c <__assert_func>
 80035ee:	6922      	ldr	r2, [r4, #16]
 80035f0:	3202      	adds	r2, #2
 80035f2:	f104 010c 	add.w	r1, r4, #12
 80035f6:	0092      	lsls	r2, r2, #2
 80035f8:	300c      	adds	r0, #12
 80035fa:	f000 fd19 	bl	8004030 <memcpy>
 80035fe:	4621      	mov	r1, r4
 8003600:	4638      	mov	r0, r7
 8003602:	f7ff ffa5 	bl	8003550 <_Bfree>
 8003606:	4644      	mov	r4, r8
 8003608:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800360c:	3501      	adds	r5, #1
 800360e:	615e      	str	r6, [r3, #20]
 8003610:	6125      	str	r5, [r4, #16]
 8003612:	4620      	mov	r0, r4
 8003614:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003618:	08004f59 	.word	0x08004f59
 800361c:	08004f6a 	.word	0x08004f6a

08003620 <__hi0bits>:
 8003620:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8003624:	4603      	mov	r3, r0
 8003626:	bf36      	itet	cc
 8003628:	0403      	lslcc	r3, r0, #16
 800362a:	2000      	movcs	r0, #0
 800362c:	2010      	movcc	r0, #16
 800362e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003632:	bf3c      	itt	cc
 8003634:	021b      	lslcc	r3, r3, #8
 8003636:	3008      	addcc	r0, #8
 8003638:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800363c:	bf3c      	itt	cc
 800363e:	011b      	lslcc	r3, r3, #4
 8003640:	3004      	addcc	r0, #4
 8003642:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003646:	bf3c      	itt	cc
 8003648:	009b      	lslcc	r3, r3, #2
 800364a:	3002      	addcc	r0, #2
 800364c:	2b00      	cmp	r3, #0
 800364e:	db05      	blt.n	800365c <__hi0bits+0x3c>
 8003650:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8003654:	f100 0001 	add.w	r0, r0, #1
 8003658:	bf08      	it	eq
 800365a:	2020      	moveq	r0, #32
 800365c:	4770      	bx	lr

0800365e <__lo0bits>:
 800365e:	6803      	ldr	r3, [r0, #0]
 8003660:	4602      	mov	r2, r0
 8003662:	f013 0007 	ands.w	r0, r3, #7
 8003666:	d00b      	beq.n	8003680 <__lo0bits+0x22>
 8003668:	07d9      	lsls	r1, r3, #31
 800366a:	d421      	bmi.n	80036b0 <__lo0bits+0x52>
 800366c:	0798      	lsls	r0, r3, #30
 800366e:	bf49      	itett	mi
 8003670:	085b      	lsrmi	r3, r3, #1
 8003672:	089b      	lsrpl	r3, r3, #2
 8003674:	2001      	movmi	r0, #1
 8003676:	6013      	strmi	r3, [r2, #0]
 8003678:	bf5c      	itt	pl
 800367a:	6013      	strpl	r3, [r2, #0]
 800367c:	2002      	movpl	r0, #2
 800367e:	4770      	bx	lr
 8003680:	b299      	uxth	r1, r3
 8003682:	b909      	cbnz	r1, 8003688 <__lo0bits+0x2a>
 8003684:	0c1b      	lsrs	r3, r3, #16
 8003686:	2010      	movs	r0, #16
 8003688:	b2d9      	uxtb	r1, r3
 800368a:	b909      	cbnz	r1, 8003690 <__lo0bits+0x32>
 800368c:	3008      	adds	r0, #8
 800368e:	0a1b      	lsrs	r3, r3, #8
 8003690:	0719      	lsls	r1, r3, #28
 8003692:	bf04      	itt	eq
 8003694:	091b      	lsreq	r3, r3, #4
 8003696:	3004      	addeq	r0, #4
 8003698:	0799      	lsls	r1, r3, #30
 800369a:	bf04      	itt	eq
 800369c:	089b      	lsreq	r3, r3, #2
 800369e:	3002      	addeq	r0, #2
 80036a0:	07d9      	lsls	r1, r3, #31
 80036a2:	d403      	bmi.n	80036ac <__lo0bits+0x4e>
 80036a4:	085b      	lsrs	r3, r3, #1
 80036a6:	f100 0001 	add.w	r0, r0, #1
 80036aa:	d003      	beq.n	80036b4 <__lo0bits+0x56>
 80036ac:	6013      	str	r3, [r2, #0]
 80036ae:	4770      	bx	lr
 80036b0:	2000      	movs	r0, #0
 80036b2:	4770      	bx	lr
 80036b4:	2020      	movs	r0, #32
 80036b6:	4770      	bx	lr

080036b8 <__i2b>:
 80036b8:	b510      	push	{r4, lr}
 80036ba:	460c      	mov	r4, r1
 80036bc:	2101      	movs	r1, #1
 80036be:	f7ff ff07 	bl	80034d0 <_Balloc>
 80036c2:	4602      	mov	r2, r0
 80036c4:	b928      	cbnz	r0, 80036d2 <__i2b+0x1a>
 80036c6:	4b05      	ldr	r3, [pc, #20]	@ (80036dc <__i2b+0x24>)
 80036c8:	4805      	ldr	r0, [pc, #20]	@ (80036e0 <__i2b+0x28>)
 80036ca:	f240 1145 	movw	r1, #325	@ 0x145
 80036ce:	f000 fcbd 	bl	800404c <__assert_func>
 80036d2:	2301      	movs	r3, #1
 80036d4:	6144      	str	r4, [r0, #20]
 80036d6:	6103      	str	r3, [r0, #16]
 80036d8:	bd10      	pop	{r4, pc}
 80036da:	bf00      	nop
 80036dc:	08004f59 	.word	0x08004f59
 80036e0:	08004f6a 	.word	0x08004f6a

080036e4 <__multiply>:
 80036e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80036e8:	4614      	mov	r4, r2
 80036ea:	690a      	ldr	r2, [r1, #16]
 80036ec:	6923      	ldr	r3, [r4, #16]
 80036ee:	429a      	cmp	r2, r3
 80036f0:	bfa8      	it	ge
 80036f2:	4623      	movge	r3, r4
 80036f4:	460f      	mov	r7, r1
 80036f6:	bfa4      	itt	ge
 80036f8:	460c      	movge	r4, r1
 80036fa:	461f      	movge	r7, r3
 80036fc:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8003700:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8003704:	68a3      	ldr	r3, [r4, #8]
 8003706:	6861      	ldr	r1, [r4, #4]
 8003708:	eb0a 0609 	add.w	r6, sl, r9
 800370c:	42b3      	cmp	r3, r6
 800370e:	b085      	sub	sp, #20
 8003710:	bfb8      	it	lt
 8003712:	3101      	addlt	r1, #1
 8003714:	f7ff fedc 	bl	80034d0 <_Balloc>
 8003718:	b930      	cbnz	r0, 8003728 <__multiply+0x44>
 800371a:	4602      	mov	r2, r0
 800371c:	4b44      	ldr	r3, [pc, #272]	@ (8003830 <__multiply+0x14c>)
 800371e:	4845      	ldr	r0, [pc, #276]	@ (8003834 <__multiply+0x150>)
 8003720:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8003724:	f000 fc92 	bl	800404c <__assert_func>
 8003728:	f100 0514 	add.w	r5, r0, #20
 800372c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003730:	462b      	mov	r3, r5
 8003732:	2200      	movs	r2, #0
 8003734:	4543      	cmp	r3, r8
 8003736:	d321      	bcc.n	800377c <__multiply+0x98>
 8003738:	f107 0114 	add.w	r1, r7, #20
 800373c:	f104 0214 	add.w	r2, r4, #20
 8003740:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8003744:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8003748:	9302      	str	r3, [sp, #8]
 800374a:	1b13      	subs	r3, r2, r4
 800374c:	3b15      	subs	r3, #21
 800374e:	f023 0303 	bic.w	r3, r3, #3
 8003752:	3304      	adds	r3, #4
 8003754:	f104 0715 	add.w	r7, r4, #21
 8003758:	42ba      	cmp	r2, r7
 800375a:	bf38      	it	cc
 800375c:	2304      	movcc	r3, #4
 800375e:	9301      	str	r3, [sp, #4]
 8003760:	9b02      	ldr	r3, [sp, #8]
 8003762:	9103      	str	r1, [sp, #12]
 8003764:	428b      	cmp	r3, r1
 8003766:	d80c      	bhi.n	8003782 <__multiply+0x9e>
 8003768:	2e00      	cmp	r6, #0
 800376a:	dd03      	ble.n	8003774 <__multiply+0x90>
 800376c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003770:	2b00      	cmp	r3, #0
 8003772:	d05b      	beq.n	800382c <__multiply+0x148>
 8003774:	6106      	str	r6, [r0, #16]
 8003776:	b005      	add	sp, #20
 8003778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800377c:	f843 2b04 	str.w	r2, [r3], #4
 8003780:	e7d8      	b.n	8003734 <__multiply+0x50>
 8003782:	f8b1 a000 	ldrh.w	sl, [r1]
 8003786:	f1ba 0f00 	cmp.w	sl, #0
 800378a:	d024      	beq.n	80037d6 <__multiply+0xf2>
 800378c:	f104 0e14 	add.w	lr, r4, #20
 8003790:	46a9      	mov	r9, r5
 8003792:	f04f 0c00 	mov.w	ip, #0
 8003796:	f85e 7b04 	ldr.w	r7, [lr], #4
 800379a:	f8d9 3000 	ldr.w	r3, [r9]
 800379e:	fa1f fb87 	uxth.w	fp, r7
 80037a2:	b29b      	uxth	r3, r3
 80037a4:	fb0a 330b 	mla	r3, sl, fp, r3
 80037a8:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 80037ac:	f8d9 7000 	ldr.w	r7, [r9]
 80037b0:	4463      	add	r3, ip
 80037b2:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 80037b6:	fb0a c70b 	mla	r7, sl, fp, ip
 80037ba:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 80037be:	b29b      	uxth	r3, r3
 80037c0:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80037c4:	4572      	cmp	r2, lr
 80037c6:	f849 3b04 	str.w	r3, [r9], #4
 80037ca:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 80037ce:	d8e2      	bhi.n	8003796 <__multiply+0xb2>
 80037d0:	9b01      	ldr	r3, [sp, #4]
 80037d2:	f845 c003 	str.w	ip, [r5, r3]
 80037d6:	9b03      	ldr	r3, [sp, #12]
 80037d8:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80037dc:	3104      	adds	r1, #4
 80037de:	f1b9 0f00 	cmp.w	r9, #0
 80037e2:	d021      	beq.n	8003828 <__multiply+0x144>
 80037e4:	682b      	ldr	r3, [r5, #0]
 80037e6:	f104 0c14 	add.w	ip, r4, #20
 80037ea:	46ae      	mov	lr, r5
 80037ec:	f04f 0a00 	mov.w	sl, #0
 80037f0:	f8bc b000 	ldrh.w	fp, [ip]
 80037f4:	f8be 7002 	ldrh.w	r7, [lr, #2]
 80037f8:	fb09 770b 	mla	r7, r9, fp, r7
 80037fc:	4457      	add	r7, sl
 80037fe:	b29b      	uxth	r3, r3
 8003800:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003804:	f84e 3b04 	str.w	r3, [lr], #4
 8003808:	f85c 3b04 	ldr.w	r3, [ip], #4
 800380c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003810:	f8be 3000 	ldrh.w	r3, [lr]
 8003814:	fb09 330a 	mla	r3, r9, sl, r3
 8003818:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800381c:	4562      	cmp	r2, ip
 800381e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003822:	d8e5      	bhi.n	80037f0 <__multiply+0x10c>
 8003824:	9f01      	ldr	r7, [sp, #4]
 8003826:	51eb      	str	r3, [r5, r7]
 8003828:	3504      	adds	r5, #4
 800382a:	e799      	b.n	8003760 <__multiply+0x7c>
 800382c:	3e01      	subs	r6, #1
 800382e:	e79b      	b.n	8003768 <__multiply+0x84>
 8003830:	08004f59 	.word	0x08004f59
 8003834:	08004f6a 	.word	0x08004f6a

08003838 <__pow5mult>:
 8003838:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800383c:	4615      	mov	r5, r2
 800383e:	f012 0203 	ands.w	r2, r2, #3
 8003842:	4607      	mov	r7, r0
 8003844:	460e      	mov	r6, r1
 8003846:	d007      	beq.n	8003858 <__pow5mult+0x20>
 8003848:	4c25      	ldr	r4, [pc, #148]	@ (80038e0 <__pow5mult+0xa8>)
 800384a:	3a01      	subs	r2, #1
 800384c:	2300      	movs	r3, #0
 800384e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003852:	f7ff fe9f 	bl	8003594 <__multadd>
 8003856:	4606      	mov	r6, r0
 8003858:	10ad      	asrs	r5, r5, #2
 800385a:	d03d      	beq.n	80038d8 <__pow5mult+0xa0>
 800385c:	69fc      	ldr	r4, [r7, #28]
 800385e:	b97c      	cbnz	r4, 8003880 <__pow5mult+0x48>
 8003860:	2010      	movs	r0, #16
 8003862:	f7ff fd7f 	bl	8003364 <malloc>
 8003866:	4602      	mov	r2, r0
 8003868:	61f8      	str	r0, [r7, #28]
 800386a:	b928      	cbnz	r0, 8003878 <__pow5mult+0x40>
 800386c:	4b1d      	ldr	r3, [pc, #116]	@ (80038e4 <__pow5mult+0xac>)
 800386e:	481e      	ldr	r0, [pc, #120]	@ (80038e8 <__pow5mult+0xb0>)
 8003870:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8003874:	f000 fbea 	bl	800404c <__assert_func>
 8003878:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800387c:	6004      	str	r4, [r0, #0]
 800387e:	60c4      	str	r4, [r0, #12]
 8003880:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8003884:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003888:	b94c      	cbnz	r4, 800389e <__pow5mult+0x66>
 800388a:	f240 2171 	movw	r1, #625	@ 0x271
 800388e:	4638      	mov	r0, r7
 8003890:	f7ff ff12 	bl	80036b8 <__i2b>
 8003894:	2300      	movs	r3, #0
 8003896:	f8c8 0008 	str.w	r0, [r8, #8]
 800389a:	4604      	mov	r4, r0
 800389c:	6003      	str	r3, [r0, #0]
 800389e:	f04f 0900 	mov.w	r9, #0
 80038a2:	07eb      	lsls	r3, r5, #31
 80038a4:	d50a      	bpl.n	80038bc <__pow5mult+0x84>
 80038a6:	4631      	mov	r1, r6
 80038a8:	4622      	mov	r2, r4
 80038aa:	4638      	mov	r0, r7
 80038ac:	f7ff ff1a 	bl	80036e4 <__multiply>
 80038b0:	4631      	mov	r1, r6
 80038b2:	4680      	mov	r8, r0
 80038b4:	4638      	mov	r0, r7
 80038b6:	f7ff fe4b 	bl	8003550 <_Bfree>
 80038ba:	4646      	mov	r6, r8
 80038bc:	106d      	asrs	r5, r5, #1
 80038be:	d00b      	beq.n	80038d8 <__pow5mult+0xa0>
 80038c0:	6820      	ldr	r0, [r4, #0]
 80038c2:	b938      	cbnz	r0, 80038d4 <__pow5mult+0x9c>
 80038c4:	4622      	mov	r2, r4
 80038c6:	4621      	mov	r1, r4
 80038c8:	4638      	mov	r0, r7
 80038ca:	f7ff ff0b 	bl	80036e4 <__multiply>
 80038ce:	6020      	str	r0, [r4, #0]
 80038d0:	f8c0 9000 	str.w	r9, [r0]
 80038d4:	4604      	mov	r4, r0
 80038d6:	e7e4      	b.n	80038a2 <__pow5mult+0x6a>
 80038d8:	4630      	mov	r0, r6
 80038da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80038de:	bf00      	nop
 80038e0:	08004fc4 	.word	0x08004fc4
 80038e4:	08004eea 	.word	0x08004eea
 80038e8:	08004f6a 	.word	0x08004f6a

080038ec <__lshift>:
 80038ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80038f0:	460c      	mov	r4, r1
 80038f2:	6849      	ldr	r1, [r1, #4]
 80038f4:	6923      	ldr	r3, [r4, #16]
 80038f6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80038fa:	68a3      	ldr	r3, [r4, #8]
 80038fc:	4607      	mov	r7, r0
 80038fe:	4691      	mov	r9, r2
 8003900:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003904:	f108 0601 	add.w	r6, r8, #1
 8003908:	42b3      	cmp	r3, r6
 800390a:	db0b      	blt.n	8003924 <__lshift+0x38>
 800390c:	4638      	mov	r0, r7
 800390e:	f7ff fddf 	bl	80034d0 <_Balloc>
 8003912:	4605      	mov	r5, r0
 8003914:	b948      	cbnz	r0, 800392a <__lshift+0x3e>
 8003916:	4602      	mov	r2, r0
 8003918:	4b28      	ldr	r3, [pc, #160]	@ (80039bc <__lshift+0xd0>)
 800391a:	4829      	ldr	r0, [pc, #164]	@ (80039c0 <__lshift+0xd4>)
 800391c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003920:	f000 fb94 	bl	800404c <__assert_func>
 8003924:	3101      	adds	r1, #1
 8003926:	005b      	lsls	r3, r3, #1
 8003928:	e7ee      	b.n	8003908 <__lshift+0x1c>
 800392a:	2300      	movs	r3, #0
 800392c:	f100 0114 	add.w	r1, r0, #20
 8003930:	f100 0210 	add.w	r2, r0, #16
 8003934:	4618      	mov	r0, r3
 8003936:	4553      	cmp	r3, sl
 8003938:	db33      	blt.n	80039a2 <__lshift+0xb6>
 800393a:	6920      	ldr	r0, [r4, #16]
 800393c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003940:	f104 0314 	add.w	r3, r4, #20
 8003944:	f019 091f 	ands.w	r9, r9, #31
 8003948:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800394c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003950:	d02b      	beq.n	80039aa <__lshift+0xbe>
 8003952:	f1c9 0e20 	rsb	lr, r9, #32
 8003956:	468a      	mov	sl, r1
 8003958:	2200      	movs	r2, #0
 800395a:	6818      	ldr	r0, [r3, #0]
 800395c:	fa00 f009 	lsl.w	r0, r0, r9
 8003960:	4310      	orrs	r0, r2
 8003962:	f84a 0b04 	str.w	r0, [sl], #4
 8003966:	f853 2b04 	ldr.w	r2, [r3], #4
 800396a:	459c      	cmp	ip, r3
 800396c:	fa22 f20e 	lsr.w	r2, r2, lr
 8003970:	d8f3      	bhi.n	800395a <__lshift+0x6e>
 8003972:	ebac 0304 	sub.w	r3, ip, r4
 8003976:	3b15      	subs	r3, #21
 8003978:	f023 0303 	bic.w	r3, r3, #3
 800397c:	3304      	adds	r3, #4
 800397e:	f104 0015 	add.w	r0, r4, #21
 8003982:	4584      	cmp	ip, r0
 8003984:	bf38      	it	cc
 8003986:	2304      	movcc	r3, #4
 8003988:	50ca      	str	r2, [r1, r3]
 800398a:	b10a      	cbz	r2, 8003990 <__lshift+0xa4>
 800398c:	f108 0602 	add.w	r6, r8, #2
 8003990:	3e01      	subs	r6, #1
 8003992:	4638      	mov	r0, r7
 8003994:	612e      	str	r6, [r5, #16]
 8003996:	4621      	mov	r1, r4
 8003998:	f7ff fdda 	bl	8003550 <_Bfree>
 800399c:	4628      	mov	r0, r5
 800399e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80039a2:	f842 0f04 	str.w	r0, [r2, #4]!
 80039a6:	3301      	adds	r3, #1
 80039a8:	e7c5      	b.n	8003936 <__lshift+0x4a>
 80039aa:	3904      	subs	r1, #4
 80039ac:	f853 2b04 	ldr.w	r2, [r3], #4
 80039b0:	f841 2f04 	str.w	r2, [r1, #4]!
 80039b4:	459c      	cmp	ip, r3
 80039b6:	d8f9      	bhi.n	80039ac <__lshift+0xc0>
 80039b8:	e7ea      	b.n	8003990 <__lshift+0xa4>
 80039ba:	bf00      	nop
 80039bc:	08004f59 	.word	0x08004f59
 80039c0:	08004f6a 	.word	0x08004f6a

080039c4 <__mcmp>:
 80039c4:	690a      	ldr	r2, [r1, #16]
 80039c6:	4603      	mov	r3, r0
 80039c8:	6900      	ldr	r0, [r0, #16]
 80039ca:	1a80      	subs	r0, r0, r2
 80039cc:	b530      	push	{r4, r5, lr}
 80039ce:	d10e      	bne.n	80039ee <__mcmp+0x2a>
 80039d0:	3314      	adds	r3, #20
 80039d2:	3114      	adds	r1, #20
 80039d4:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80039d8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80039dc:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80039e0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80039e4:	4295      	cmp	r5, r2
 80039e6:	d003      	beq.n	80039f0 <__mcmp+0x2c>
 80039e8:	d205      	bcs.n	80039f6 <__mcmp+0x32>
 80039ea:	f04f 30ff 	mov.w	r0, #4294967295
 80039ee:	bd30      	pop	{r4, r5, pc}
 80039f0:	42a3      	cmp	r3, r4
 80039f2:	d3f3      	bcc.n	80039dc <__mcmp+0x18>
 80039f4:	e7fb      	b.n	80039ee <__mcmp+0x2a>
 80039f6:	2001      	movs	r0, #1
 80039f8:	e7f9      	b.n	80039ee <__mcmp+0x2a>
	...

080039fc <__mdiff>:
 80039fc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a00:	4689      	mov	r9, r1
 8003a02:	4606      	mov	r6, r0
 8003a04:	4611      	mov	r1, r2
 8003a06:	4648      	mov	r0, r9
 8003a08:	4614      	mov	r4, r2
 8003a0a:	f7ff ffdb 	bl	80039c4 <__mcmp>
 8003a0e:	1e05      	subs	r5, r0, #0
 8003a10:	d112      	bne.n	8003a38 <__mdiff+0x3c>
 8003a12:	4629      	mov	r1, r5
 8003a14:	4630      	mov	r0, r6
 8003a16:	f7ff fd5b 	bl	80034d0 <_Balloc>
 8003a1a:	4602      	mov	r2, r0
 8003a1c:	b928      	cbnz	r0, 8003a2a <__mdiff+0x2e>
 8003a1e:	4b3f      	ldr	r3, [pc, #252]	@ (8003b1c <__mdiff+0x120>)
 8003a20:	f240 2137 	movw	r1, #567	@ 0x237
 8003a24:	483e      	ldr	r0, [pc, #248]	@ (8003b20 <__mdiff+0x124>)
 8003a26:	f000 fb11 	bl	800404c <__assert_func>
 8003a2a:	2301      	movs	r3, #1
 8003a2c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003a30:	4610      	mov	r0, r2
 8003a32:	b003      	add	sp, #12
 8003a34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a38:	bfbc      	itt	lt
 8003a3a:	464b      	movlt	r3, r9
 8003a3c:	46a1      	movlt	r9, r4
 8003a3e:	4630      	mov	r0, r6
 8003a40:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003a44:	bfba      	itte	lt
 8003a46:	461c      	movlt	r4, r3
 8003a48:	2501      	movlt	r5, #1
 8003a4a:	2500      	movge	r5, #0
 8003a4c:	f7ff fd40 	bl	80034d0 <_Balloc>
 8003a50:	4602      	mov	r2, r0
 8003a52:	b918      	cbnz	r0, 8003a5c <__mdiff+0x60>
 8003a54:	4b31      	ldr	r3, [pc, #196]	@ (8003b1c <__mdiff+0x120>)
 8003a56:	f240 2145 	movw	r1, #581	@ 0x245
 8003a5a:	e7e3      	b.n	8003a24 <__mdiff+0x28>
 8003a5c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003a60:	6926      	ldr	r6, [r4, #16]
 8003a62:	60c5      	str	r5, [r0, #12]
 8003a64:	f109 0310 	add.w	r3, r9, #16
 8003a68:	f109 0514 	add.w	r5, r9, #20
 8003a6c:	f104 0e14 	add.w	lr, r4, #20
 8003a70:	f100 0b14 	add.w	fp, r0, #20
 8003a74:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003a78:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003a7c:	9301      	str	r3, [sp, #4]
 8003a7e:	46d9      	mov	r9, fp
 8003a80:	f04f 0c00 	mov.w	ip, #0
 8003a84:	9b01      	ldr	r3, [sp, #4]
 8003a86:	f85e 0b04 	ldr.w	r0, [lr], #4
 8003a8a:	f853 af04 	ldr.w	sl, [r3, #4]!
 8003a8e:	9301      	str	r3, [sp, #4]
 8003a90:	fa1f f38a 	uxth.w	r3, sl
 8003a94:	4619      	mov	r1, r3
 8003a96:	b283      	uxth	r3, r0
 8003a98:	1acb      	subs	r3, r1, r3
 8003a9a:	0c00      	lsrs	r0, r0, #16
 8003a9c:	4463      	add	r3, ip
 8003a9e:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8003aa2:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8003aa6:	b29b      	uxth	r3, r3
 8003aa8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003aac:	4576      	cmp	r6, lr
 8003aae:	f849 3b04 	str.w	r3, [r9], #4
 8003ab2:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003ab6:	d8e5      	bhi.n	8003a84 <__mdiff+0x88>
 8003ab8:	1b33      	subs	r3, r6, r4
 8003aba:	3b15      	subs	r3, #21
 8003abc:	f023 0303 	bic.w	r3, r3, #3
 8003ac0:	3415      	adds	r4, #21
 8003ac2:	3304      	adds	r3, #4
 8003ac4:	42a6      	cmp	r6, r4
 8003ac6:	bf38      	it	cc
 8003ac8:	2304      	movcc	r3, #4
 8003aca:	441d      	add	r5, r3
 8003acc:	445b      	add	r3, fp
 8003ace:	461e      	mov	r6, r3
 8003ad0:	462c      	mov	r4, r5
 8003ad2:	4544      	cmp	r4, r8
 8003ad4:	d30e      	bcc.n	8003af4 <__mdiff+0xf8>
 8003ad6:	f108 0103 	add.w	r1, r8, #3
 8003ada:	1b49      	subs	r1, r1, r5
 8003adc:	f021 0103 	bic.w	r1, r1, #3
 8003ae0:	3d03      	subs	r5, #3
 8003ae2:	45a8      	cmp	r8, r5
 8003ae4:	bf38      	it	cc
 8003ae6:	2100      	movcc	r1, #0
 8003ae8:	440b      	add	r3, r1
 8003aea:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003aee:	b191      	cbz	r1, 8003b16 <__mdiff+0x11a>
 8003af0:	6117      	str	r7, [r2, #16]
 8003af2:	e79d      	b.n	8003a30 <__mdiff+0x34>
 8003af4:	f854 1b04 	ldr.w	r1, [r4], #4
 8003af8:	46e6      	mov	lr, ip
 8003afa:	0c08      	lsrs	r0, r1, #16
 8003afc:	fa1c fc81 	uxtah	ip, ip, r1
 8003b00:	4471      	add	r1, lr
 8003b02:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8003b06:	b289      	uxth	r1, r1
 8003b08:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8003b0c:	f846 1b04 	str.w	r1, [r6], #4
 8003b10:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003b14:	e7dd      	b.n	8003ad2 <__mdiff+0xd6>
 8003b16:	3f01      	subs	r7, #1
 8003b18:	e7e7      	b.n	8003aea <__mdiff+0xee>
 8003b1a:	bf00      	nop
 8003b1c:	08004f59 	.word	0x08004f59
 8003b20:	08004f6a 	.word	0x08004f6a

08003b24 <__d2b>:
 8003b24:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003b28:	460f      	mov	r7, r1
 8003b2a:	2101      	movs	r1, #1
 8003b2c:	ec59 8b10 	vmov	r8, r9, d0
 8003b30:	4616      	mov	r6, r2
 8003b32:	f7ff fccd 	bl	80034d0 <_Balloc>
 8003b36:	4604      	mov	r4, r0
 8003b38:	b930      	cbnz	r0, 8003b48 <__d2b+0x24>
 8003b3a:	4602      	mov	r2, r0
 8003b3c:	4b23      	ldr	r3, [pc, #140]	@ (8003bcc <__d2b+0xa8>)
 8003b3e:	4824      	ldr	r0, [pc, #144]	@ (8003bd0 <__d2b+0xac>)
 8003b40:	f240 310f 	movw	r1, #783	@ 0x30f
 8003b44:	f000 fa82 	bl	800404c <__assert_func>
 8003b48:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003b4c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003b50:	b10d      	cbz	r5, 8003b56 <__d2b+0x32>
 8003b52:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003b56:	9301      	str	r3, [sp, #4]
 8003b58:	f1b8 0300 	subs.w	r3, r8, #0
 8003b5c:	d023      	beq.n	8003ba6 <__d2b+0x82>
 8003b5e:	4668      	mov	r0, sp
 8003b60:	9300      	str	r3, [sp, #0]
 8003b62:	f7ff fd7c 	bl	800365e <__lo0bits>
 8003b66:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003b6a:	b1d0      	cbz	r0, 8003ba2 <__d2b+0x7e>
 8003b6c:	f1c0 0320 	rsb	r3, r0, #32
 8003b70:	fa02 f303 	lsl.w	r3, r2, r3
 8003b74:	430b      	orrs	r3, r1
 8003b76:	40c2      	lsrs	r2, r0
 8003b78:	6163      	str	r3, [r4, #20]
 8003b7a:	9201      	str	r2, [sp, #4]
 8003b7c:	9b01      	ldr	r3, [sp, #4]
 8003b7e:	61a3      	str	r3, [r4, #24]
 8003b80:	2b00      	cmp	r3, #0
 8003b82:	bf0c      	ite	eq
 8003b84:	2201      	moveq	r2, #1
 8003b86:	2202      	movne	r2, #2
 8003b88:	6122      	str	r2, [r4, #16]
 8003b8a:	b1a5      	cbz	r5, 8003bb6 <__d2b+0x92>
 8003b8c:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003b90:	4405      	add	r5, r0
 8003b92:	603d      	str	r5, [r7, #0]
 8003b94:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003b98:	6030      	str	r0, [r6, #0]
 8003b9a:	4620      	mov	r0, r4
 8003b9c:	b003      	add	sp, #12
 8003b9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003ba2:	6161      	str	r1, [r4, #20]
 8003ba4:	e7ea      	b.n	8003b7c <__d2b+0x58>
 8003ba6:	a801      	add	r0, sp, #4
 8003ba8:	f7ff fd59 	bl	800365e <__lo0bits>
 8003bac:	9b01      	ldr	r3, [sp, #4]
 8003bae:	6163      	str	r3, [r4, #20]
 8003bb0:	3020      	adds	r0, #32
 8003bb2:	2201      	movs	r2, #1
 8003bb4:	e7e8      	b.n	8003b88 <__d2b+0x64>
 8003bb6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003bba:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003bbe:	6038      	str	r0, [r7, #0]
 8003bc0:	6918      	ldr	r0, [r3, #16]
 8003bc2:	f7ff fd2d 	bl	8003620 <__hi0bits>
 8003bc6:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003bca:	e7e5      	b.n	8003b98 <__d2b+0x74>
 8003bcc:	08004f59 	.word	0x08004f59
 8003bd0:	08004f6a 	.word	0x08004f6a

08003bd4 <__ssputs_r>:
 8003bd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003bd8:	688e      	ldr	r6, [r1, #8]
 8003bda:	461f      	mov	r7, r3
 8003bdc:	42be      	cmp	r6, r7
 8003bde:	680b      	ldr	r3, [r1, #0]
 8003be0:	4682      	mov	sl, r0
 8003be2:	460c      	mov	r4, r1
 8003be4:	4690      	mov	r8, r2
 8003be6:	d82d      	bhi.n	8003c44 <__ssputs_r+0x70>
 8003be8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003bec:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8003bf0:	d026      	beq.n	8003c40 <__ssputs_r+0x6c>
 8003bf2:	6965      	ldr	r5, [r4, #20]
 8003bf4:	6909      	ldr	r1, [r1, #16]
 8003bf6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003bfa:	eba3 0901 	sub.w	r9, r3, r1
 8003bfe:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003c02:	1c7b      	adds	r3, r7, #1
 8003c04:	444b      	add	r3, r9
 8003c06:	106d      	asrs	r5, r5, #1
 8003c08:	429d      	cmp	r5, r3
 8003c0a:	bf38      	it	cc
 8003c0c:	461d      	movcc	r5, r3
 8003c0e:	0553      	lsls	r3, r2, #21
 8003c10:	d527      	bpl.n	8003c62 <__ssputs_r+0x8e>
 8003c12:	4629      	mov	r1, r5
 8003c14:	f7ff fbd0 	bl	80033b8 <_malloc_r>
 8003c18:	4606      	mov	r6, r0
 8003c1a:	b360      	cbz	r0, 8003c76 <__ssputs_r+0xa2>
 8003c1c:	6921      	ldr	r1, [r4, #16]
 8003c1e:	464a      	mov	r2, r9
 8003c20:	f000 fa06 	bl	8004030 <memcpy>
 8003c24:	89a3      	ldrh	r3, [r4, #12]
 8003c26:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8003c2a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003c2e:	81a3      	strh	r3, [r4, #12]
 8003c30:	6126      	str	r6, [r4, #16]
 8003c32:	6165      	str	r5, [r4, #20]
 8003c34:	444e      	add	r6, r9
 8003c36:	eba5 0509 	sub.w	r5, r5, r9
 8003c3a:	6026      	str	r6, [r4, #0]
 8003c3c:	60a5      	str	r5, [r4, #8]
 8003c3e:	463e      	mov	r6, r7
 8003c40:	42be      	cmp	r6, r7
 8003c42:	d900      	bls.n	8003c46 <__ssputs_r+0x72>
 8003c44:	463e      	mov	r6, r7
 8003c46:	6820      	ldr	r0, [r4, #0]
 8003c48:	4632      	mov	r2, r6
 8003c4a:	4641      	mov	r1, r8
 8003c4c:	f000 f9c6 	bl	8003fdc <memmove>
 8003c50:	68a3      	ldr	r3, [r4, #8]
 8003c52:	1b9b      	subs	r3, r3, r6
 8003c54:	60a3      	str	r3, [r4, #8]
 8003c56:	6823      	ldr	r3, [r4, #0]
 8003c58:	4433      	add	r3, r6
 8003c5a:	6023      	str	r3, [r4, #0]
 8003c5c:	2000      	movs	r0, #0
 8003c5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003c62:	462a      	mov	r2, r5
 8003c64:	f000 fa36 	bl	80040d4 <_realloc_r>
 8003c68:	4606      	mov	r6, r0
 8003c6a:	2800      	cmp	r0, #0
 8003c6c:	d1e0      	bne.n	8003c30 <__ssputs_r+0x5c>
 8003c6e:	6921      	ldr	r1, [r4, #16]
 8003c70:	4650      	mov	r0, sl
 8003c72:	f7ff fb2d 	bl	80032d0 <_free_r>
 8003c76:	230c      	movs	r3, #12
 8003c78:	f8ca 3000 	str.w	r3, [sl]
 8003c7c:	89a3      	ldrh	r3, [r4, #12]
 8003c7e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003c82:	81a3      	strh	r3, [r4, #12]
 8003c84:	f04f 30ff 	mov.w	r0, #4294967295
 8003c88:	e7e9      	b.n	8003c5e <__ssputs_r+0x8a>
	...

08003c8c <_svfiprintf_r>:
 8003c8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c90:	4698      	mov	r8, r3
 8003c92:	898b      	ldrh	r3, [r1, #12]
 8003c94:	061b      	lsls	r3, r3, #24
 8003c96:	b09d      	sub	sp, #116	@ 0x74
 8003c98:	4607      	mov	r7, r0
 8003c9a:	460d      	mov	r5, r1
 8003c9c:	4614      	mov	r4, r2
 8003c9e:	d510      	bpl.n	8003cc2 <_svfiprintf_r+0x36>
 8003ca0:	690b      	ldr	r3, [r1, #16]
 8003ca2:	b973      	cbnz	r3, 8003cc2 <_svfiprintf_r+0x36>
 8003ca4:	2140      	movs	r1, #64	@ 0x40
 8003ca6:	f7ff fb87 	bl	80033b8 <_malloc_r>
 8003caa:	6028      	str	r0, [r5, #0]
 8003cac:	6128      	str	r0, [r5, #16]
 8003cae:	b930      	cbnz	r0, 8003cbe <_svfiprintf_r+0x32>
 8003cb0:	230c      	movs	r3, #12
 8003cb2:	603b      	str	r3, [r7, #0]
 8003cb4:	f04f 30ff 	mov.w	r0, #4294967295
 8003cb8:	b01d      	add	sp, #116	@ 0x74
 8003cba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003cbe:	2340      	movs	r3, #64	@ 0x40
 8003cc0:	616b      	str	r3, [r5, #20]
 8003cc2:	2300      	movs	r3, #0
 8003cc4:	9309      	str	r3, [sp, #36]	@ 0x24
 8003cc6:	2320      	movs	r3, #32
 8003cc8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003ccc:	f8cd 800c 	str.w	r8, [sp, #12]
 8003cd0:	2330      	movs	r3, #48	@ 0x30
 8003cd2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8003e70 <_svfiprintf_r+0x1e4>
 8003cd6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003cda:	f04f 0901 	mov.w	r9, #1
 8003cde:	4623      	mov	r3, r4
 8003ce0:	469a      	mov	sl, r3
 8003ce2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003ce6:	b10a      	cbz	r2, 8003cec <_svfiprintf_r+0x60>
 8003ce8:	2a25      	cmp	r2, #37	@ 0x25
 8003cea:	d1f9      	bne.n	8003ce0 <_svfiprintf_r+0x54>
 8003cec:	ebba 0b04 	subs.w	fp, sl, r4
 8003cf0:	d00b      	beq.n	8003d0a <_svfiprintf_r+0x7e>
 8003cf2:	465b      	mov	r3, fp
 8003cf4:	4622      	mov	r2, r4
 8003cf6:	4629      	mov	r1, r5
 8003cf8:	4638      	mov	r0, r7
 8003cfa:	f7ff ff6b 	bl	8003bd4 <__ssputs_r>
 8003cfe:	3001      	adds	r0, #1
 8003d00:	f000 80a7 	beq.w	8003e52 <_svfiprintf_r+0x1c6>
 8003d04:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003d06:	445a      	add	r2, fp
 8003d08:	9209      	str	r2, [sp, #36]	@ 0x24
 8003d0a:	f89a 3000 	ldrb.w	r3, [sl]
 8003d0e:	2b00      	cmp	r3, #0
 8003d10:	f000 809f 	beq.w	8003e52 <_svfiprintf_r+0x1c6>
 8003d14:	2300      	movs	r3, #0
 8003d16:	f04f 32ff 	mov.w	r2, #4294967295
 8003d1a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003d1e:	f10a 0a01 	add.w	sl, sl, #1
 8003d22:	9304      	str	r3, [sp, #16]
 8003d24:	9307      	str	r3, [sp, #28]
 8003d26:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003d2a:	931a      	str	r3, [sp, #104]	@ 0x68
 8003d2c:	4654      	mov	r4, sl
 8003d2e:	2205      	movs	r2, #5
 8003d30:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003d34:	484e      	ldr	r0, [pc, #312]	@ (8003e70 <_svfiprintf_r+0x1e4>)
 8003d36:	f7fc fa53 	bl	80001e0 <memchr>
 8003d3a:	9a04      	ldr	r2, [sp, #16]
 8003d3c:	b9d8      	cbnz	r0, 8003d76 <_svfiprintf_r+0xea>
 8003d3e:	06d0      	lsls	r0, r2, #27
 8003d40:	bf44      	itt	mi
 8003d42:	2320      	movmi	r3, #32
 8003d44:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003d48:	0711      	lsls	r1, r2, #28
 8003d4a:	bf44      	itt	mi
 8003d4c:	232b      	movmi	r3, #43	@ 0x2b
 8003d4e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003d52:	f89a 3000 	ldrb.w	r3, [sl]
 8003d56:	2b2a      	cmp	r3, #42	@ 0x2a
 8003d58:	d015      	beq.n	8003d86 <_svfiprintf_r+0xfa>
 8003d5a:	9a07      	ldr	r2, [sp, #28]
 8003d5c:	4654      	mov	r4, sl
 8003d5e:	2000      	movs	r0, #0
 8003d60:	f04f 0c0a 	mov.w	ip, #10
 8003d64:	4621      	mov	r1, r4
 8003d66:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003d6a:	3b30      	subs	r3, #48	@ 0x30
 8003d6c:	2b09      	cmp	r3, #9
 8003d6e:	d94b      	bls.n	8003e08 <_svfiprintf_r+0x17c>
 8003d70:	b1b0      	cbz	r0, 8003da0 <_svfiprintf_r+0x114>
 8003d72:	9207      	str	r2, [sp, #28]
 8003d74:	e014      	b.n	8003da0 <_svfiprintf_r+0x114>
 8003d76:	eba0 0308 	sub.w	r3, r0, r8
 8003d7a:	fa09 f303 	lsl.w	r3, r9, r3
 8003d7e:	4313      	orrs	r3, r2
 8003d80:	9304      	str	r3, [sp, #16]
 8003d82:	46a2      	mov	sl, r4
 8003d84:	e7d2      	b.n	8003d2c <_svfiprintf_r+0xa0>
 8003d86:	9b03      	ldr	r3, [sp, #12]
 8003d88:	1d19      	adds	r1, r3, #4
 8003d8a:	681b      	ldr	r3, [r3, #0]
 8003d8c:	9103      	str	r1, [sp, #12]
 8003d8e:	2b00      	cmp	r3, #0
 8003d90:	bfbb      	ittet	lt
 8003d92:	425b      	neglt	r3, r3
 8003d94:	f042 0202 	orrlt.w	r2, r2, #2
 8003d98:	9307      	strge	r3, [sp, #28]
 8003d9a:	9307      	strlt	r3, [sp, #28]
 8003d9c:	bfb8      	it	lt
 8003d9e:	9204      	strlt	r2, [sp, #16]
 8003da0:	7823      	ldrb	r3, [r4, #0]
 8003da2:	2b2e      	cmp	r3, #46	@ 0x2e
 8003da4:	d10a      	bne.n	8003dbc <_svfiprintf_r+0x130>
 8003da6:	7863      	ldrb	r3, [r4, #1]
 8003da8:	2b2a      	cmp	r3, #42	@ 0x2a
 8003daa:	d132      	bne.n	8003e12 <_svfiprintf_r+0x186>
 8003dac:	9b03      	ldr	r3, [sp, #12]
 8003dae:	1d1a      	adds	r2, r3, #4
 8003db0:	681b      	ldr	r3, [r3, #0]
 8003db2:	9203      	str	r2, [sp, #12]
 8003db4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003db8:	3402      	adds	r4, #2
 8003dba:	9305      	str	r3, [sp, #20]
 8003dbc:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8003e80 <_svfiprintf_r+0x1f4>
 8003dc0:	7821      	ldrb	r1, [r4, #0]
 8003dc2:	2203      	movs	r2, #3
 8003dc4:	4650      	mov	r0, sl
 8003dc6:	f7fc fa0b 	bl	80001e0 <memchr>
 8003dca:	b138      	cbz	r0, 8003ddc <_svfiprintf_r+0x150>
 8003dcc:	9b04      	ldr	r3, [sp, #16]
 8003dce:	eba0 000a 	sub.w	r0, r0, sl
 8003dd2:	2240      	movs	r2, #64	@ 0x40
 8003dd4:	4082      	lsls	r2, r0
 8003dd6:	4313      	orrs	r3, r2
 8003dd8:	3401      	adds	r4, #1
 8003dda:	9304      	str	r3, [sp, #16]
 8003ddc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003de0:	4824      	ldr	r0, [pc, #144]	@ (8003e74 <_svfiprintf_r+0x1e8>)
 8003de2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003de6:	2206      	movs	r2, #6
 8003de8:	f7fc f9fa 	bl	80001e0 <memchr>
 8003dec:	2800      	cmp	r0, #0
 8003dee:	d036      	beq.n	8003e5e <_svfiprintf_r+0x1d2>
 8003df0:	4b21      	ldr	r3, [pc, #132]	@ (8003e78 <_svfiprintf_r+0x1ec>)
 8003df2:	bb1b      	cbnz	r3, 8003e3c <_svfiprintf_r+0x1b0>
 8003df4:	9b03      	ldr	r3, [sp, #12]
 8003df6:	3307      	adds	r3, #7
 8003df8:	f023 0307 	bic.w	r3, r3, #7
 8003dfc:	3308      	adds	r3, #8
 8003dfe:	9303      	str	r3, [sp, #12]
 8003e00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003e02:	4433      	add	r3, r6
 8003e04:	9309      	str	r3, [sp, #36]	@ 0x24
 8003e06:	e76a      	b.n	8003cde <_svfiprintf_r+0x52>
 8003e08:	fb0c 3202 	mla	r2, ip, r2, r3
 8003e0c:	460c      	mov	r4, r1
 8003e0e:	2001      	movs	r0, #1
 8003e10:	e7a8      	b.n	8003d64 <_svfiprintf_r+0xd8>
 8003e12:	2300      	movs	r3, #0
 8003e14:	3401      	adds	r4, #1
 8003e16:	9305      	str	r3, [sp, #20]
 8003e18:	4619      	mov	r1, r3
 8003e1a:	f04f 0c0a 	mov.w	ip, #10
 8003e1e:	4620      	mov	r0, r4
 8003e20:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003e24:	3a30      	subs	r2, #48	@ 0x30
 8003e26:	2a09      	cmp	r2, #9
 8003e28:	d903      	bls.n	8003e32 <_svfiprintf_r+0x1a6>
 8003e2a:	2b00      	cmp	r3, #0
 8003e2c:	d0c6      	beq.n	8003dbc <_svfiprintf_r+0x130>
 8003e2e:	9105      	str	r1, [sp, #20]
 8003e30:	e7c4      	b.n	8003dbc <_svfiprintf_r+0x130>
 8003e32:	fb0c 2101 	mla	r1, ip, r1, r2
 8003e36:	4604      	mov	r4, r0
 8003e38:	2301      	movs	r3, #1
 8003e3a:	e7f0      	b.n	8003e1e <_svfiprintf_r+0x192>
 8003e3c:	ab03      	add	r3, sp, #12
 8003e3e:	9300      	str	r3, [sp, #0]
 8003e40:	462a      	mov	r2, r5
 8003e42:	4b0e      	ldr	r3, [pc, #56]	@ (8003e7c <_svfiprintf_r+0x1f0>)
 8003e44:	a904      	add	r1, sp, #16
 8003e46:	4638      	mov	r0, r7
 8003e48:	f7fd fe96 	bl	8001b78 <_printf_float>
 8003e4c:	1c42      	adds	r2, r0, #1
 8003e4e:	4606      	mov	r6, r0
 8003e50:	d1d6      	bne.n	8003e00 <_svfiprintf_r+0x174>
 8003e52:	89ab      	ldrh	r3, [r5, #12]
 8003e54:	065b      	lsls	r3, r3, #25
 8003e56:	f53f af2d 	bmi.w	8003cb4 <_svfiprintf_r+0x28>
 8003e5a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003e5c:	e72c      	b.n	8003cb8 <_svfiprintf_r+0x2c>
 8003e5e:	ab03      	add	r3, sp, #12
 8003e60:	9300      	str	r3, [sp, #0]
 8003e62:	462a      	mov	r2, r5
 8003e64:	4b05      	ldr	r3, [pc, #20]	@ (8003e7c <_svfiprintf_r+0x1f0>)
 8003e66:	a904      	add	r1, sp, #16
 8003e68:	4638      	mov	r0, r7
 8003e6a:	f7fe f91d 	bl	80020a8 <_printf_i>
 8003e6e:	e7ed      	b.n	8003e4c <_svfiprintf_r+0x1c0>
 8003e70:	080050c0 	.word	0x080050c0
 8003e74:	080050ca 	.word	0x080050ca
 8003e78:	08001b79 	.word	0x08001b79
 8003e7c:	08003bd5 	.word	0x08003bd5
 8003e80:	080050c6 	.word	0x080050c6

08003e84 <__sflush_r>:
 8003e84:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003e88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e8c:	0716      	lsls	r6, r2, #28
 8003e8e:	4605      	mov	r5, r0
 8003e90:	460c      	mov	r4, r1
 8003e92:	d454      	bmi.n	8003f3e <__sflush_r+0xba>
 8003e94:	684b      	ldr	r3, [r1, #4]
 8003e96:	2b00      	cmp	r3, #0
 8003e98:	dc02      	bgt.n	8003ea0 <__sflush_r+0x1c>
 8003e9a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003e9c:	2b00      	cmp	r3, #0
 8003e9e:	dd48      	ble.n	8003f32 <__sflush_r+0xae>
 8003ea0:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003ea2:	2e00      	cmp	r6, #0
 8003ea4:	d045      	beq.n	8003f32 <__sflush_r+0xae>
 8003ea6:	2300      	movs	r3, #0
 8003ea8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8003eac:	682f      	ldr	r7, [r5, #0]
 8003eae:	6a21      	ldr	r1, [r4, #32]
 8003eb0:	602b      	str	r3, [r5, #0]
 8003eb2:	d030      	beq.n	8003f16 <__sflush_r+0x92>
 8003eb4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003eb6:	89a3      	ldrh	r3, [r4, #12]
 8003eb8:	0759      	lsls	r1, r3, #29
 8003eba:	d505      	bpl.n	8003ec8 <__sflush_r+0x44>
 8003ebc:	6863      	ldr	r3, [r4, #4]
 8003ebe:	1ad2      	subs	r2, r2, r3
 8003ec0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8003ec2:	b10b      	cbz	r3, 8003ec8 <__sflush_r+0x44>
 8003ec4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003ec6:	1ad2      	subs	r2, r2, r3
 8003ec8:	2300      	movs	r3, #0
 8003eca:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003ecc:	6a21      	ldr	r1, [r4, #32]
 8003ece:	4628      	mov	r0, r5
 8003ed0:	47b0      	blx	r6
 8003ed2:	1c43      	adds	r3, r0, #1
 8003ed4:	89a3      	ldrh	r3, [r4, #12]
 8003ed6:	d106      	bne.n	8003ee6 <__sflush_r+0x62>
 8003ed8:	6829      	ldr	r1, [r5, #0]
 8003eda:	291d      	cmp	r1, #29
 8003edc:	d82b      	bhi.n	8003f36 <__sflush_r+0xb2>
 8003ede:	4a2a      	ldr	r2, [pc, #168]	@ (8003f88 <__sflush_r+0x104>)
 8003ee0:	410a      	asrs	r2, r1
 8003ee2:	07d6      	lsls	r6, r2, #31
 8003ee4:	d427      	bmi.n	8003f36 <__sflush_r+0xb2>
 8003ee6:	2200      	movs	r2, #0
 8003ee8:	6062      	str	r2, [r4, #4]
 8003eea:	04d9      	lsls	r1, r3, #19
 8003eec:	6922      	ldr	r2, [r4, #16]
 8003eee:	6022      	str	r2, [r4, #0]
 8003ef0:	d504      	bpl.n	8003efc <__sflush_r+0x78>
 8003ef2:	1c42      	adds	r2, r0, #1
 8003ef4:	d101      	bne.n	8003efa <__sflush_r+0x76>
 8003ef6:	682b      	ldr	r3, [r5, #0]
 8003ef8:	b903      	cbnz	r3, 8003efc <__sflush_r+0x78>
 8003efa:	6560      	str	r0, [r4, #84]	@ 0x54
 8003efc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003efe:	602f      	str	r7, [r5, #0]
 8003f00:	b1b9      	cbz	r1, 8003f32 <__sflush_r+0xae>
 8003f02:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003f06:	4299      	cmp	r1, r3
 8003f08:	d002      	beq.n	8003f10 <__sflush_r+0x8c>
 8003f0a:	4628      	mov	r0, r5
 8003f0c:	f7ff f9e0 	bl	80032d0 <_free_r>
 8003f10:	2300      	movs	r3, #0
 8003f12:	6363      	str	r3, [r4, #52]	@ 0x34
 8003f14:	e00d      	b.n	8003f32 <__sflush_r+0xae>
 8003f16:	2301      	movs	r3, #1
 8003f18:	4628      	mov	r0, r5
 8003f1a:	47b0      	blx	r6
 8003f1c:	4602      	mov	r2, r0
 8003f1e:	1c50      	adds	r0, r2, #1
 8003f20:	d1c9      	bne.n	8003eb6 <__sflush_r+0x32>
 8003f22:	682b      	ldr	r3, [r5, #0]
 8003f24:	2b00      	cmp	r3, #0
 8003f26:	d0c6      	beq.n	8003eb6 <__sflush_r+0x32>
 8003f28:	2b1d      	cmp	r3, #29
 8003f2a:	d001      	beq.n	8003f30 <__sflush_r+0xac>
 8003f2c:	2b16      	cmp	r3, #22
 8003f2e:	d11e      	bne.n	8003f6e <__sflush_r+0xea>
 8003f30:	602f      	str	r7, [r5, #0]
 8003f32:	2000      	movs	r0, #0
 8003f34:	e022      	b.n	8003f7c <__sflush_r+0xf8>
 8003f36:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003f3a:	b21b      	sxth	r3, r3
 8003f3c:	e01b      	b.n	8003f76 <__sflush_r+0xf2>
 8003f3e:	690f      	ldr	r7, [r1, #16]
 8003f40:	2f00      	cmp	r7, #0
 8003f42:	d0f6      	beq.n	8003f32 <__sflush_r+0xae>
 8003f44:	0793      	lsls	r3, r2, #30
 8003f46:	680e      	ldr	r6, [r1, #0]
 8003f48:	bf08      	it	eq
 8003f4a:	694b      	ldreq	r3, [r1, #20]
 8003f4c:	600f      	str	r7, [r1, #0]
 8003f4e:	bf18      	it	ne
 8003f50:	2300      	movne	r3, #0
 8003f52:	eba6 0807 	sub.w	r8, r6, r7
 8003f56:	608b      	str	r3, [r1, #8]
 8003f58:	f1b8 0f00 	cmp.w	r8, #0
 8003f5c:	dde9      	ble.n	8003f32 <__sflush_r+0xae>
 8003f5e:	6a21      	ldr	r1, [r4, #32]
 8003f60:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8003f62:	4643      	mov	r3, r8
 8003f64:	463a      	mov	r2, r7
 8003f66:	4628      	mov	r0, r5
 8003f68:	47b0      	blx	r6
 8003f6a:	2800      	cmp	r0, #0
 8003f6c:	dc08      	bgt.n	8003f80 <__sflush_r+0xfc>
 8003f6e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003f72:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003f76:	81a3      	strh	r3, [r4, #12]
 8003f78:	f04f 30ff 	mov.w	r0, #4294967295
 8003f7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003f80:	4407      	add	r7, r0
 8003f82:	eba8 0800 	sub.w	r8, r8, r0
 8003f86:	e7e7      	b.n	8003f58 <__sflush_r+0xd4>
 8003f88:	dfbffffe 	.word	0xdfbffffe

08003f8c <_fflush_r>:
 8003f8c:	b538      	push	{r3, r4, r5, lr}
 8003f8e:	690b      	ldr	r3, [r1, #16]
 8003f90:	4605      	mov	r5, r0
 8003f92:	460c      	mov	r4, r1
 8003f94:	b913      	cbnz	r3, 8003f9c <_fflush_r+0x10>
 8003f96:	2500      	movs	r5, #0
 8003f98:	4628      	mov	r0, r5
 8003f9a:	bd38      	pop	{r3, r4, r5, pc}
 8003f9c:	b118      	cbz	r0, 8003fa6 <_fflush_r+0x1a>
 8003f9e:	6a03      	ldr	r3, [r0, #32]
 8003fa0:	b90b      	cbnz	r3, 8003fa6 <_fflush_r+0x1a>
 8003fa2:	f7fe fa2d 	bl	8002400 <__sinit>
 8003fa6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003faa:	2b00      	cmp	r3, #0
 8003fac:	d0f3      	beq.n	8003f96 <_fflush_r+0xa>
 8003fae:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8003fb0:	07d0      	lsls	r0, r2, #31
 8003fb2:	d404      	bmi.n	8003fbe <_fflush_r+0x32>
 8003fb4:	0599      	lsls	r1, r3, #22
 8003fb6:	d402      	bmi.n	8003fbe <_fflush_r+0x32>
 8003fb8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003fba:	f7fe fb38 	bl	800262e <__retarget_lock_acquire_recursive>
 8003fbe:	4628      	mov	r0, r5
 8003fc0:	4621      	mov	r1, r4
 8003fc2:	f7ff ff5f 	bl	8003e84 <__sflush_r>
 8003fc6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003fc8:	07da      	lsls	r2, r3, #31
 8003fca:	4605      	mov	r5, r0
 8003fcc:	d4e4      	bmi.n	8003f98 <_fflush_r+0xc>
 8003fce:	89a3      	ldrh	r3, [r4, #12]
 8003fd0:	059b      	lsls	r3, r3, #22
 8003fd2:	d4e1      	bmi.n	8003f98 <_fflush_r+0xc>
 8003fd4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003fd6:	f7fe fb2b 	bl	8002630 <__retarget_lock_release_recursive>
 8003fda:	e7dd      	b.n	8003f98 <_fflush_r+0xc>

08003fdc <memmove>:
 8003fdc:	4288      	cmp	r0, r1
 8003fde:	b510      	push	{r4, lr}
 8003fe0:	eb01 0402 	add.w	r4, r1, r2
 8003fe4:	d902      	bls.n	8003fec <memmove+0x10>
 8003fe6:	4284      	cmp	r4, r0
 8003fe8:	4623      	mov	r3, r4
 8003fea:	d807      	bhi.n	8003ffc <memmove+0x20>
 8003fec:	1e43      	subs	r3, r0, #1
 8003fee:	42a1      	cmp	r1, r4
 8003ff0:	d008      	beq.n	8004004 <memmove+0x28>
 8003ff2:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003ff6:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003ffa:	e7f8      	b.n	8003fee <memmove+0x12>
 8003ffc:	4402      	add	r2, r0
 8003ffe:	4601      	mov	r1, r0
 8004000:	428a      	cmp	r2, r1
 8004002:	d100      	bne.n	8004006 <memmove+0x2a>
 8004004:	bd10      	pop	{r4, pc}
 8004006:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800400a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800400e:	e7f7      	b.n	8004000 <memmove+0x24>

08004010 <_sbrk_r>:
 8004010:	b538      	push	{r3, r4, r5, lr}
 8004012:	4d06      	ldr	r5, [pc, #24]	@ (800402c <_sbrk_r+0x1c>)
 8004014:	2300      	movs	r3, #0
 8004016:	4604      	mov	r4, r0
 8004018:	4608      	mov	r0, r1
 800401a:	602b      	str	r3, [r5, #0]
 800401c:	f7fd fc5c 	bl	80018d8 <_sbrk>
 8004020:	1c43      	adds	r3, r0, #1
 8004022:	d102      	bne.n	800402a <_sbrk_r+0x1a>
 8004024:	682b      	ldr	r3, [r5, #0]
 8004026:	b103      	cbz	r3, 800402a <_sbrk_r+0x1a>
 8004028:	6023      	str	r3, [r4, #0]
 800402a:	bd38      	pop	{r3, r4, r5, pc}
 800402c:	20000338 	.word	0x20000338

08004030 <memcpy>:
 8004030:	440a      	add	r2, r1
 8004032:	4291      	cmp	r1, r2
 8004034:	f100 33ff 	add.w	r3, r0, #4294967295
 8004038:	d100      	bne.n	800403c <memcpy+0xc>
 800403a:	4770      	bx	lr
 800403c:	b510      	push	{r4, lr}
 800403e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004042:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004046:	4291      	cmp	r1, r2
 8004048:	d1f9      	bne.n	800403e <memcpy+0xe>
 800404a:	bd10      	pop	{r4, pc}

0800404c <__assert_func>:
 800404c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800404e:	4614      	mov	r4, r2
 8004050:	461a      	mov	r2, r3
 8004052:	4b09      	ldr	r3, [pc, #36]	@ (8004078 <__assert_func+0x2c>)
 8004054:	681b      	ldr	r3, [r3, #0]
 8004056:	4605      	mov	r5, r0
 8004058:	68d8      	ldr	r0, [r3, #12]
 800405a:	b954      	cbnz	r4, 8004072 <__assert_func+0x26>
 800405c:	4b07      	ldr	r3, [pc, #28]	@ (800407c <__assert_func+0x30>)
 800405e:	461c      	mov	r4, r3
 8004060:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004064:	9100      	str	r1, [sp, #0]
 8004066:	462b      	mov	r3, r5
 8004068:	4905      	ldr	r1, [pc, #20]	@ (8004080 <__assert_func+0x34>)
 800406a:	f000 f86f 	bl	800414c <fiprintf>
 800406e:	f000 f87f 	bl	8004170 <abort>
 8004072:	4b04      	ldr	r3, [pc, #16]	@ (8004084 <__assert_func+0x38>)
 8004074:	e7f4      	b.n	8004060 <__assert_func+0x14>
 8004076:	bf00      	nop
 8004078:	20000014 	.word	0x20000014
 800407c:	08005116 	.word	0x08005116
 8004080:	080050e8 	.word	0x080050e8
 8004084:	080050db 	.word	0x080050db

08004088 <_calloc_r>:
 8004088:	b570      	push	{r4, r5, r6, lr}
 800408a:	fba1 5402 	umull	r5, r4, r1, r2
 800408e:	b93c      	cbnz	r4, 80040a0 <_calloc_r+0x18>
 8004090:	4629      	mov	r1, r5
 8004092:	f7ff f991 	bl	80033b8 <_malloc_r>
 8004096:	4606      	mov	r6, r0
 8004098:	b928      	cbnz	r0, 80040a6 <_calloc_r+0x1e>
 800409a:	2600      	movs	r6, #0
 800409c:	4630      	mov	r0, r6
 800409e:	bd70      	pop	{r4, r5, r6, pc}
 80040a0:	220c      	movs	r2, #12
 80040a2:	6002      	str	r2, [r0, #0]
 80040a4:	e7f9      	b.n	800409a <_calloc_r+0x12>
 80040a6:	462a      	mov	r2, r5
 80040a8:	4621      	mov	r1, r4
 80040aa:	f7fe fa42 	bl	8002532 <memset>
 80040ae:	e7f5      	b.n	800409c <_calloc_r+0x14>

080040b0 <__ascii_mbtowc>:
 80040b0:	b082      	sub	sp, #8
 80040b2:	b901      	cbnz	r1, 80040b6 <__ascii_mbtowc+0x6>
 80040b4:	a901      	add	r1, sp, #4
 80040b6:	b142      	cbz	r2, 80040ca <__ascii_mbtowc+0x1a>
 80040b8:	b14b      	cbz	r3, 80040ce <__ascii_mbtowc+0x1e>
 80040ba:	7813      	ldrb	r3, [r2, #0]
 80040bc:	600b      	str	r3, [r1, #0]
 80040be:	7812      	ldrb	r2, [r2, #0]
 80040c0:	1e10      	subs	r0, r2, #0
 80040c2:	bf18      	it	ne
 80040c4:	2001      	movne	r0, #1
 80040c6:	b002      	add	sp, #8
 80040c8:	4770      	bx	lr
 80040ca:	4610      	mov	r0, r2
 80040cc:	e7fb      	b.n	80040c6 <__ascii_mbtowc+0x16>
 80040ce:	f06f 0001 	mvn.w	r0, #1
 80040d2:	e7f8      	b.n	80040c6 <__ascii_mbtowc+0x16>

080040d4 <_realloc_r>:
 80040d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80040d8:	4680      	mov	r8, r0
 80040da:	4615      	mov	r5, r2
 80040dc:	460c      	mov	r4, r1
 80040de:	b921      	cbnz	r1, 80040ea <_realloc_r+0x16>
 80040e0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80040e4:	4611      	mov	r1, r2
 80040e6:	f7ff b967 	b.w	80033b8 <_malloc_r>
 80040ea:	b92a      	cbnz	r2, 80040f8 <_realloc_r+0x24>
 80040ec:	f7ff f8f0 	bl	80032d0 <_free_r>
 80040f0:	2400      	movs	r4, #0
 80040f2:	4620      	mov	r0, r4
 80040f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80040f8:	f000 f841 	bl	800417e <_malloc_usable_size_r>
 80040fc:	4285      	cmp	r5, r0
 80040fe:	4606      	mov	r6, r0
 8004100:	d802      	bhi.n	8004108 <_realloc_r+0x34>
 8004102:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8004106:	d8f4      	bhi.n	80040f2 <_realloc_r+0x1e>
 8004108:	4629      	mov	r1, r5
 800410a:	4640      	mov	r0, r8
 800410c:	f7ff f954 	bl	80033b8 <_malloc_r>
 8004110:	4607      	mov	r7, r0
 8004112:	2800      	cmp	r0, #0
 8004114:	d0ec      	beq.n	80040f0 <_realloc_r+0x1c>
 8004116:	42b5      	cmp	r5, r6
 8004118:	462a      	mov	r2, r5
 800411a:	4621      	mov	r1, r4
 800411c:	bf28      	it	cs
 800411e:	4632      	movcs	r2, r6
 8004120:	f7ff ff86 	bl	8004030 <memcpy>
 8004124:	4621      	mov	r1, r4
 8004126:	4640      	mov	r0, r8
 8004128:	f7ff f8d2 	bl	80032d0 <_free_r>
 800412c:	463c      	mov	r4, r7
 800412e:	e7e0      	b.n	80040f2 <_realloc_r+0x1e>

08004130 <__ascii_wctomb>:
 8004130:	4603      	mov	r3, r0
 8004132:	4608      	mov	r0, r1
 8004134:	b141      	cbz	r1, 8004148 <__ascii_wctomb+0x18>
 8004136:	2aff      	cmp	r2, #255	@ 0xff
 8004138:	d904      	bls.n	8004144 <__ascii_wctomb+0x14>
 800413a:	228a      	movs	r2, #138	@ 0x8a
 800413c:	601a      	str	r2, [r3, #0]
 800413e:	f04f 30ff 	mov.w	r0, #4294967295
 8004142:	4770      	bx	lr
 8004144:	700a      	strb	r2, [r1, #0]
 8004146:	2001      	movs	r0, #1
 8004148:	4770      	bx	lr
	...

0800414c <fiprintf>:
 800414c:	b40e      	push	{r1, r2, r3}
 800414e:	b503      	push	{r0, r1, lr}
 8004150:	4601      	mov	r1, r0
 8004152:	ab03      	add	r3, sp, #12
 8004154:	4805      	ldr	r0, [pc, #20]	@ (800416c <fiprintf+0x20>)
 8004156:	f853 2b04 	ldr.w	r2, [r3], #4
 800415a:	6800      	ldr	r0, [r0, #0]
 800415c:	9301      	str	r3, [sp, #4]
 800415e:	f000 f83f 	bl	80041e0 <_vfiprintf_r>
 8004162:	b002      	add	sp, #8
 8004164:	f85d eb04 	ldr.w	lr, [sp], #4
 8004168:	b003      	add	sp, #12
 800416a:	4770      	bx	lr
 800416c:	20000014 	.word	0x20000014

08004170 <abort>:
 8004170:	b508      	push	{r3, lr}
 8004172:	2006      	movs	r0, #6
 8004174:	f000 fa08 	bl	8004588 <raise>
 8004178:	2001      	movs	r0, #1
 800417a:	f7fd fb34 	bl	80017e6 <_exit>

0800417e <_malloc_usable_size_r>:
 800417e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004182:	1f18      	subs	r0, r3, #4
 8004184:	2b00      	cmp	r3, #0
 8004186:	bfbc      	itt	lt
 8004188:	580b      	ldrlt	r3, [r1, r0]
 800418a:	18c0      	addlt	r0, r0, r3
 800418c:	4770      	bx	lr

0800418e <__sfputc_r>:
 800418e:	6893      	ldr	r3, [r2, #8]
 8004190:	3b01      	subs	r3, #1
 8004192:	2b00      	cmp	r3, #0
 8004194:	b410      	push	{r4}
 8004196:	6093      	str	r3, [r2, #8]
 8004198:	da08      	bge.n	80041ac <__sfputc_r+0x1e>
 800419a:	6994      	ldr	r4, [r2, #24]
 800419c:	42a3      	cmp	r3, r4
 800419e:	db01      	blt.n	80041a4 <__sfputc_r+0x16>
 80041a0:	290a      	cmp	r1, #10
 80041a2:	d103      	bne.n	80041ac <__sfputc_r+0x1e>
 80041a4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80041a8:	f000 b932 	b.w	8004410 <__swbuf_r>
 80041ac:	6813      	ldr	r3, [r2, #0]
 80041ae:	1c58      	adds	r0, r3, #1
 80041b0:	6010      	str	r0, [r2, #0]
 80041b2:	7019      	strb	r1, [r3, #0]
 80041b4:	4608      	mov	r0, r1
 80041b6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80041ba:	4770      	bx	lr

080041bc <__sfputs_r>:
 80041bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80041be:	4606      	mov	r6, r0
 80041c0:	460f      	mov	r7, r1
 80041c2:	4614      	mov	r4, r2
 80041c4:	18d5      	adds	r5, r2, r3
 80041c6:	42ac      	cmp	r4, r5
 80041c8:	d101      	bne.n	80041ce <__sfputs_r+0x12>
 80041ca:	2000      	movs	r0, #0
 80041cc:	e007      	b.n	80041de <__sfputs_r+0x22>
 80041ce:	f814 1b01 	ldrb.w	r1, [r4], #1
 80041d2:	463a      	mov	r2, r7
 80041d4:	4630      	mov	r0, r6
 80041d6:	f7ff ffda 	bl	800418e <__sfputc_r>
 80041da:	1c43      	adds	r3, r0, #1
 80041dc:	d1f3      	bne.n	80041c6 <__sfputs_r+0xa>
 80041de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080041e0 <_vfiprintf_r>:
 80041e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80041e4:	460d      	mov	r5, r1
 80041e6:	b09d      	sub	sp, #116	@ 0x74
 80041e8:	4614      	mov	r4, r2
 80041ea:	4698      	mov	r8, r3
 80041ec:	4606      	mov	r6, r0
 80041ee:	b118      	cbz	r0, 80041f8 <_vfiprintf_r+0x18>
 80041f0:	6a03      	ldr	r3, [r0, #32]
 80041f2:	b90b      	cbnz	r3, 80041f8 <_vfiprintf_r+0x18>
 80041f4:	f7fe f904 	bl	8002400 <__sinit>
 80041f8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80041fa:	07d9      	lsls	r1, r3, #31
 80041fc:	d405      	bmi.n	800420a <_vfiprintf_r+0x2a>
 80041fe:	89ab      	ldrh	r3, [r5, #12]
 8004200:	059a      	lsls	r2, r3, #22
 8004202:	d402      	bmi.n	800420a <_vfiprintf_r+0x2a>
 8004204:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004206:	f7fe fa12 	bl	800262e <__retarget_lock_acquire_recursive>
 800420a:	89ab      	ldrh	r3, [r5, #12]
 800420c:	071b      	lsls	r3, r3, #28
 800420e:	d501      	bpl.n	8004214 <_vfiprintf_r+0x34>
 8004210:	692b      	ldr	r3, [r5, #16]
 8004212:	b99b      	cbnz	r3, 800423c <_vfiprintf_r+0x5c>
 8004214:	4629      	mov	r1, r5
 8004216:	4630      	mov	r0, r6
 8004218:	f000 f938 	bl	800448c <__swsetup_r>
 800421c:	b170      	cbz	r0, 800423c <_vfiprintf_r+0x5c>
 800421e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004220:	07dc      	lsls	r4, r3, #31
 8004222:	d504      	bpl.n	800422e <_vfiprintf_r+0x4e>
 8004224:	f04f 30ff 	mov.w	r0, #4294967295
 8004228:	b01d      	add	sp, #116	@ 0x74
 800422a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800422e:	89ab      	ldrh	r3, [r5, #12]
 8004230:	0598      	lsls	r0, r3, #22
 8004232:	d4f7      	bmi.n	8004224 <_vfiprintf_r+0x44>
 8004234:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004236:	f7fe f9fb 	bl	8002630 <__retarget_lock_release_recursive>
 800423a:	e7f3      	b.n	8004224 <_vfiprintf_r+0x44>
 800423c:	2300      	movs	r3, #0
 800423e:	9309      	str	r3, [sp, #36]	@ 0x24
 8004240:	2320      	movs	r3, #32
 8004242:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8004246:	f8cd 800c 	str.w	r8, [sp, #12]
 800424a:	2330      	movs	r3, #48	@ 0x30
 800424c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80043fc <_vfiprintf_r+0x21c>
 8004250:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8004254:	f04f 0901 	mov.w	r9, #1
 8004258:	4623      	mov	r3, r4
 800425a:	469a      	mov	sl, r3
 800425c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004260:	b10a      	cbz	r2, 8004266 <_vfiprintf_r+0x86>
 8004262:	2a25      	cmp	r2, #37	@ 0x25
 8004264:	d1f9      	bne.n	800425a <_vfiprintf_r+0x7a>
 8004266:	ebba 0b04 	subs.w	fp, sl, r4
 800426a:	d00b      	beq.n	8004284 <_vfiprintf_r+0xa4>
 800426c:	465b      	mov	r3, fp
 800426e:	4622      	mov	r2, r4
 8004270:	4629      	mov	r1, r5
 8004272:	4630      	mov	r0, r6
 8004274:	f7ff ffa2 	bl	80041bc <__sfputs_r>
 8004278:	3001      	adds	r0, #1
 800427a:	f000 80a7 	beq.w	80043cc <_vfiprintf_r+0x1ec>
 800427e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004280:	445a      	add	r2, fp
 8004282:	9209      	str	r2, [sp, #36]	@ 0x24
 8004284:	f89a 3000 	ldrb.w	r3, [sl]
 8004288:	2b00      	cmp	r3, #0
 800428a:	f000 809f 	beq.w	80043cc <_vfiprintf_r+0x1ec>
 800428e:	2300      	movs	r3, #0
 8004290:	f04f 32ff 	mov.w	r2, #4294967295
 8004294:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004298:	f10a 0a01 	add.w	sl, sl, #1
 800429c:	9304      	str	r3, [sp, #16]
 800429e:	9307      	str	r3, [sp, #28]
 80042a0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80042a4:	931a      	str	r3, [sp, #104]	@ 0x68
 80042a6:	4654      	mov	r4, sl
 80042a8:	2205      	movs	r2, #5
 80042aa:	f814 1b01 	ldrb.w	r1, [r4], #1
 80042ae:	4853      	ldr	r0, [pc, #332]	@ (80043fc <_vfiprintf_r+0x21c>)
 80042b0:	f7fb ff96 	bl	80001e0 <memchr>
 80042b4:	9a04      	ldr	r2, [sp, #16]
 80042b6:	b9d8      	cbnz	r0, 80042f0 <_vfiprintf_r+0x110>
 80042b8:	06d1      	lsls	r1, r2, #27
 80042ba:	bf44      	itt	mi
 80042bc:	2320      	movmi	r3, #32
 80042be:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80042c2:	0713      	lsls	r3, r2, #28
 80042c4:	bf44      	itt	mi
 80042c6:	232b      	movmi	r3, #43	@ 0x2b
 80042c8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80042cc:	f89a 3000 	ldrb.w	r3, [sl]
 80042d0:	2b2a      	cmp	r3, #42	@ 0x2a
 80042d2:	d015      	beq.n	8004300 <_vfiprintf_r+0x120>
 80042d4:	9a07      	ldr	r2, [sp, #28]
 80042d6:	4654      	mov	r4, sl
 80042d8:	2000      	movs	r0, #0
 80042da:	f04f 0c0a 	mov.w	ip, #10
 80042de:	4621      	mov	r1, r4
 80042e0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80042e4:	3b30      	subs	r3, #48	@ 0x30
 80042e6:	2b09      	cmp	r3, #9
 80042e8:	d94b      	bls.n	8004382 <_vfiprintf_r+0x1a2>
 80042ea:	b1b0      	cbz	r0, 800431a <_vfiprintf_r+0x13a>
 80042ec:	9207      	str	r2, [sp, #28]
 80042ee:	e014      	b.n	800431a <_vfiprintf_r+0x13a>
 80042f0:	eba0 0308 	sub.w	r3, r0, r8
 80042f4:	fa09 f303 	lsl.w	r3, r9, r3
 80042f8:	4313      	orrs	r3, r2
 80042fa:	9304      	str	r3, [sp, #16]
 80042fc:	46a2      	mov	sl, r4
 80042fe:	e7d2      	b.n	80042a6 <_vfiprintf_r+0xc6>
 8004300:	9b03      	ldr	r3, [sp, #12]
 8004302:	1d19      	adds	r1, r3, #4
 8004304:	681b      	ldr	r3, [r3, #0]
 8004306:	9103      	str	r1, [sp, #12]
 8004308:	2b00      	cmp	r3, #0
 800430a:	bfbb      	ittet	lt
 800430c:	425b      	neglt	r3, r3
 800430e:	f042 0202 	orrlt.w	r2, r2, #2
 8004312:	9307      	strge	r3, [sp, #28]
 8004314:	9307      	strlt	r3, [sp, #28]
 8004316:	bfb8      	it	lt
 8004318:	9204      	strlt	r2, [sp, #16]
 800431a:	7823      	ldrb	r3, [r4, #0]
 800431c:	2b2e      	cmp	r3, #46	@ 0x2e
 800431e:	d10a      	bne.n	8004336 <_vfiprintf_r+0x156>
 8004320:	7863      	ldrb	r3, [r4, #1]
 8004322:	2b2a      	cmp	r3, #42	@ 0x2a
 8004324:	d132      	bne.n	800438c <_vfiprintf_r+0x1ac>
 8004326:	9b03      	ldr	r3, [sp, #12]
 8004328:	1d1a      	adds	r2, r3, #4
 800432a:	681b      	ldr	r3, [r3, #0]
 800432c:	9203      	str	r2, [sp, #12]
 800432e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8004332:	3402      	adds	r4, #2
 8004334:	9305      	str	r3, [sp, #20]
 8004336:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800440c <_vfiprintf_r+0x22c>
 800433a:	7821      	ldrb	r1, [r4, #0]
 800433c:	2203      	movs	r2, #3
 800433e:	4650      	mov	r0, sl
 8004340:	f7fb ff4e 	bl	80001e0 <memchr>
 8004344:	b138      	cbz	r0, 8004356 <_vfiprintf_r+0x176>
 8004346:	9b04      	ldr	r3, [sp, #16]
 8004348:	eba0 000a 	sub.w	r0, r0, sl
 800434c:	2240      	movs	r2, #64	@ 0x40
 800434e:	4082      	lsls	r2, r0
 8004350:	4313      	orrs	r3, r2
 8004352:	3401      	adds	r4, #1
 8004354:	9304      	str	r3, [sp, #16]
 8004356:	f814 1b01 	ldrb.w	r1, [r4], #1
 800435a:	4829      	ldr	r0, [pc, #164]	@ (8004400 <_vfiprintf_r+0x220>)
 800435c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004360:	2206      	movs	r2, #6
 8004362:	f7fb ff3d 	bl	80001e0 <memchr>
 8004366:	2800      	cmp	r0, #0
 8004368:	d03f      	beq.n	80043ea <_vfiprintf_r+0x20a>
 800436a:	4b26      	ldr	r3, [pc, #152]	@ (8004404 <_vfiprintf_r+0x224>)
 800436c:	bb1b      	cbnz	r3, 80043b6 <_vfiprintf_r+0x1d6>
 800436e:	9b03      	ldr	r3, [sp, #12]
 8004370:	3307      	adds	r3, #7
 8004372:	f023 0307 	bic.w	r3, r3, #7
 8004376:	3308      	adds	r3, #8
 8004378:	9303      	str	r3, [sp, #12]
 800437a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800437c:	443b      	add	r3, r7
 800437e:	9309      	str	r3, [sp, #36]	@ 0x24
 8004380:	e76a      	b.n	8004258 <_vfiprintf_r+0x78>
 8004382:	fb0c 3202 	mla	r2, ip, r2, r3
 8004386:	460c      	mov	r4, r1
 8004388:	2001      	movs	r0, #1
 800438a:	e7a8      	b.n	80042de <_vfiprintf_r+0xfe>
 800438c:	2300      	movs	r3, #0
 800438e:	3401      	adds	r4, #1
 8004390:	9305      	str	r3, [sp, #20]
 8004392:	4619      	mov	r1, r3
 8004394:	f04f 0c0a 	mov.w	ip, #10
 8004398:	4620      	mov	r0, r4
 800439a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800439e:	3a30      	subs	r2, #48	@ 0x30
 80043a0:	2a09      	cmp	r2, #9
 80043a2:	d903      	bls.n	80043ac <_vfiprintf_r+0x1cc>
 80043a4:	2b00      	cmp	r3, #0
 80043a6:	d0c6      	beq.n	8004336 <_vfiprintf_r+0x156>
 80043a8:	9105      	str	r1, [sp, #20]
 80043aa:	e7c4      	b.n	8004336 <_vfiprintf_r+0x156>
 80043ac:	fb0c 2101 	mla	r1, ip, r1, r2
 80043b0:	4604      	mov	r4, r0
 80043b2:	2301      	movs	r3, #1
 80043b4:	e7f0      	b.n	8004398 <_vfiprintf_r+0x1b8>
 80043b6:	ab03      	add	r3, sp, #12
 80043b8:	9300      	str	r3, [sp, #0]
 80043ba:	462a      	mov	r2, r5
 80043bc:	4b12      	ldr	r3, [pc, #72]	@ (8004408 <_vfiprintf_r+0x228>)
 80043be:	a904      	add	r1, sp, #16
 80043c0:	4630      	mov	r0, r6
 80043c2:	f7fd fbd9 	bl	8001b78 <_printf_float>
 80043c6:	4607      	mov	r7, r0
 80043c8:	1c78      	adds	r0, r7, #1
 80043ca:	d1d6      	bne.n	800437a <_vfiprintf_r+0x19a>
 80043cc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80043ce:	07d9      	lsls	r1, r3, #31
 80043d0:	d405      	bmi.n	80043de <_vfiprintf_r+0x1fe>
 80043d2:	89ab      	ldrh	r3, [r5, #12]
 80043d4:	059a      	lsls	r2, r3, #22
 80043d6:	d402      	bmi.n	80043de <_vfiprintf_r+0x1fe>
 80043d8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80043da:	f7fe f929 	bl	8002630 <__retarget_lock_release_recursive>
 80043de:	89ab      	ldrh	r3, [r5, #12]
 80043e0:	065b      	lsls	r3, r3, #25
 80043e2:	f53f af1f 	bmi.w	8004224 <_vfiprintf_r+0x44>
 80043e6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80043e8:	e71e      	b.n	8004228 <_vfiprintf_r+0x48>
 80043ea:	ab03      	add	r3, sp, #12
 80043ec:	9300      	str	r3, [sp, #0]
 80043ee:	462a      	mov	r2, r5
 80043f0:	4b05      	ldr	r3, [pc, #20]	@ (8004408 <_vfiprintf_r+0x228>)
 80043f2:	a904      	add	r1, sp, #16
 80043f4:	4630      	mov	r0, r6
 80043f6:	f7fd fe57 	bl	80020a8 <_printf_i>
 80043fa:	e7e4      	b.n	80043c6 <_vfiprintf_r+0x1e6>
 80043fc:	080050c0 	.word	0x080050c0
 8004400:	080050ca 	.word	0x080050ca
 8004404:	08001b79 	.word	0x08001b79
 8004408:	080041bd 	.word	0x080041bd
 800440c:	080050c6 	.word	0x080050c6

08004410 <__swbuf_r>:
 8004410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004412:	460e      	mov	r6, r1
 8004414:	4614      	mov	r4, r2
 8004416:	4605      	mov	r5, r0
 8004418:	b118      	cbz	r0, 8004422 <__swbuf_r+0x12>
 800441a:	6a03      	ldr	r3, [r0, #32]
 800441c:	b90b      	cbnz	r3, 8004422 <__swbuf_r+0x12>
 800441e:	f7fd ffef 	bl	8002400 <__sinit>
 8004422:	69a3      	ldr	r3, [r4, #24]
 8004424:	60a3      	str	r3, [r4, #8]
 8004426:	89a3      	ldrh	r3, [r4, #12]
 8004428:	071a      	lsls	r2, r3, #28
 800442a:	d501      	bpl.n	8004430 <__swbuf_r+0x20>
 800442c:	6923      	ldr	r3, [r4, #16]
 800442e:	b943      	cbnz	r3, 8004442 <__swbuf_r+0x32>
 8004430:	4621      	mov	r1, r4
 8004432:	4628      	mov	r0, r5
 8004434:	f000 f82a 	bl	800448c <__swsetup_r>
 8004438:	b118      	cbz	r0, 8004442 <__swbuf_r+0x32>
 800443a:	f04f 37ff 	mov.w	r7, #4294967295
 800443e:	4638      	mov	r0, r7
 8004440:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004442:	6823      	ldr	r3, [r4, #0]
 8004444:	6922      	ldr	r2, [r4, #16]
 8004446:	1a98      	subs	r0, r3, r2
 8004448:	6963      	ldr	r3, [r4, #20]
 800444a:	b2f6      	uxtb	r6, r6
 800444c:	4283      	cmp	r3, r0
 800444e:	4637      	mov	r7, r6
 8004450:	dc05      	bgt.n	800445e <__swbuf_r+0x4e>
 8004452:	4621      	mov	r1, r4
 8004454:	4628      	mov	r0, r5
 8004456:	f7ff fd99 	bl	8003f8c <_fflush_r>
 800445a:	2800      	cmp	r0, #0
 800445c:	d1ed      	bne.n	800443a <__swbuf_r+0x2a>
 800445e:	68a3      	ldr	r3, [r4, #8]
 8004460:	3b01      	subs	r3, #1
 8004462:	60a3      	str	r3, [r4, #8]
 8004464:	6823      	ldr	r3, [r4, #0]
 8004466:	1c5a      	adds	r2, r3, #1
 8004468:	6022      	str	r2, [r4, #0]
 800446a:	701e      	strb	r6, [r3, #0]
 800446c:	6962      	ldr	r2, [r4, #20]
 800446e:	1c43      	adds	r3, r0, #1
 8004470:	429a      	cmp	r2, r3
 8004472:	d004      	beq.n	800447e <__swbuf_r+0x6e>
 8004474:	89a3      	ldrh	r3, [r4, #12]
 8004476:	07db      	lsls	r3, r3, #31
 8004478:	d5e1      	bpl.n	800443e <__swbuf_r+0x2e>
 800447a:	2e0a      	cmp	r6, #10
 800447c:	d1df      	bne.n	800443e <__swbuf_r+0x2e>
 800447e:	4621      	mov	r1, r4
 8004480:	4628      	mov	r0, r5
 8004482:	f7ff fd83 	bl	8003f8c <_fflush_r>
 8004486:	2800      	cmp	r0, #0
 8004488:	d0d9      	beq.n	800443e <__swbuf_r+0x2e>
 800448a:	e7d6      	b.n	800443a <__swbuf_r+0x2a>

0800448c <__swsetup_r>:
 800448c:	b538      	push	{r3, r4, r5, lr}
 800448e:	4b29      	ldr	r3, [pc, #164]	@ (8004534 <__swsetup_r+0xa8>)
 8004490:	4605      	mov	r5, r0
 8004492:	6818      	ldr	r0, [r3, #0]
 8004494:	460c      	mov	r4, r1
 8004496:	b118      	cbz	r0, 80044a0 <__swsetup_r+0x14>
 8004498:	6a03      	ldr	r3, [r0, #32]
 800449a:	b90b      	cbnz	r3, 80044a0 <__swsetup_r+0x14>
 800449c:	f7fd ffb0 	bl	8002400 <__sinit>
 80044a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80044a4:	0719      	lsls	r1, r3, #28
 80044a6:	d422      	bmi.n	80044ee <__swsetup_r+0x62>
 80044a8:	06da      	lsls	r2, r3, #27
 80044aa:	d407      	bmi.n	80044bc <__swsetup_r+0x30>
 80044ac:	2209      	movs	r2, #9
 80044ae:	602a      	str	r2, [r5, #0]
 80044b0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80044b4:	81a3      	strh	r3, [r4, #12]
 80044b6:	f04f 30ff 	mov.w	r0, #4294967295
 80044ba:	e033      	b.n	8004524 <__swsetup_r+0x98>
 80044bc:	0758      	lsls	r0, r3, #29
 80044be:	d512      	bpl.n	80044e6 <__swsetup_r+0x5a>
 80044c0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80044c2:	b141      	cbz	r1, 80044d6 <__swsetup_r+0x4a>
 80044c4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80044c8:	4299      	cmp	r1, r3
 80044ca:	d002      	beq.n	80044d2 <__swsetup_r+0x46>
 80044cc:	4628      	mov	r0, r5
 80044ce:	f7fe feff 	bl	80032d0 <_free_r>
 80044d2:	2300      	movs	r3, #0
 80044d4:	6363      	str	r3, [r4, #52]	@ 0x34
 80044d6:	89a3      	ldrh	r3, [r4, #12]
 80044d8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80044dc:	81a3      	strh	r3, [r4, #12]
 80044de:	2300      	movs	r3, #0
 80044e0:	6063      	str	r3, [r4, #4]
 80044e2:	6923      	ldr	r3, [r4, #16]
 80044e4:	6023      	str	r3, [r4, #0]
 80044e6:	89a3      	ldrh	r3, [r4, #12]
 80044e8:	f043 0308 	orr.w	r3, r3, #8
 80044ec:	81a3      	strh	r3, [r4, #12]
 80044ee:	6923      	ldr	r3, [r4, #16]
 80044f0:	b94b      	cbnz	r3, 8004506 <__swsetup_r+0x7a>
 80044f2:	89a3      	ldrh	r3, [r4, #12]
 80044f4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80044f8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80044fc:	d003      	beq.n	8004506 <__swsetup_r+0x7a>
 80044fe:	4621      	mov	r1, r4
 8004500:	4628      	mov	r0, r5
 8004502:	f000 f883 	bl	800460c <__smakebuf_r>
 8004506:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800450a:	f013 0201 	ands.w	r2, r3, #1
 800450e:	d00a      	beq.n	8004526 <__swsetup_r+0x9a>
 8004510:	2200      	movs	r2, #0
 8004512:	60a2      	str	r2, [r4, #8]
 8004514:	6962      	ldr	r2, [r4, #20]
 8004516:	4252      	negs	r2, r2
 8004518:	61a2      	str	r2, [r4, #24]
 800451a:	6922      	ldr	r2, [r4, #16]
 800451c:	b942      	cbnz	r2, 8004530 <__swsetup_r+0xa4>
 800451e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8004522:	d1c5      	bne.n	80044b0 <__swsetup_r+0x24>
 8004524:	bd38      	pop	{r3, r4, r5, pc}
 8004526:	0799      	lsls	r1, r3, #30
 8004528:	bf58      	it	pl
 800452a:	6962      	ldrpl	r2, [r4, #20]
 800452c:	60a2      	str	r2, [r4, #8]
 800452e:	e7f4      	b.n	800451a <__swsetup_r+0x8e>
 8004530:	2000      	movs	r0, #0
 8004532:	e7f7      	b.n	8004524 <__swsetup_r+0x98>
 8004534:	20000014 	.word	0x20000014

08004538 <_raise_r>:
 8004538:	291f      	cmp	r1, #31
 800453a:	b538      	push	{r3, r4, r5, lr}
 800453c:	4605      	mov	r5, r0
 800453e:	460c      	mov	r4, r1
 8004540:	d904      	bls.n	800454c <_raise_r+0x14>
 8004542:	2316      	movs	r3, #22
 8004544:	6003      	str	r3, [r0, #0]
 8004546:	f04f 30ff 	mov.w	r0, #4294967295
 800454a:	bd38      	pop	{r3, r4, r5, pc}
 800454c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800454e:	b112      	cbz	r2, 8004556 <_raise_r+0x1e>
 8004550:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004554:	b94b      	cbnz	r3, 800456a <_raise_r+0x32>
 8004556:	4628      	mov	r0, r5
 8004558:	f000 f830 	bl	80045bc <_getpid_r>
 800455c:	4622      	mov	r2, r4
 800455e:	4601      	mov	r1, r0
 8004560:	4628      	mov	r0, r5
 8004562:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004566:	f000 b817 	b.w	8004598 <_kill_r>
 800456a:	2b01      	cmp	r3, #1
 800456c:	d00a      	beq.n	8004584 <_raise_r+0x4c>
 800456e:	1c59      	adds	r1, r3, #1
 8004570:	d103      	bne.n	800457a <_raise_r+0x42>
 8004572:	2316      	movs	r3, #22
 8004574:	6003      	str	r3, [r0, #0]
 8004576:	2001      	movs	r0, #1
 8004578:	e7e7      	b.n	800454a <_raise_r+0x12>
 800457a:	2100      	movs	r1, #0
 800457c:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8004580:	4620      	mov	r0, r4
 8004582:	4798      	blx	r3
 8004584:	2000      	movs	r0, #0
 8004586:	e7e0      	b.n	800454a <_raise_r+0x12>

08004588 <raise>:
 8004588:	4b02      	ldr	r3, [pc, #8]	@ (8004594 <raise+0xc>)
 800458a:	4601      	mov	r1, r0
 800458c:	6818      	ldr	r0, [r3, #0]
 800458e:	f7ff bfd3 	b.w	8004538 <_raise_r>
 8004592:	bf00      	nop
 8004594:	20000014 	.word	0x20000014

08004598 <_kill_r>:
 8004598:	b538      	push	{r3, r4, r5, lr}
 800459a:	4d07      	ldr	r5, [pc, #28]	@ (80045b8 <_kill_r+0x20>)
 800459c:	2300      	movs	r3, #0
 800459e:	4604      	mov	r4, r0
 80045a0:	4608      	mov	r0, r1
 80045a2:	4611      	mov	r1, r2
 80045a4:	602b      	str	r3, [r5, #0]
 80045a6:	f7fd f90e 	bl	80017c6 <_kill>
 80045aa:	1c43      	adds	r3, r0, #1
 80045ac:	d102      	bne.n	80045b4 <_kill_r+0x1c>
 80045ae:	682b      	ldr	r3, [r5, #0]
 80045b0:	b103      	cbz	r3, 80045b4 <_kill_r+0x1c>
 80045b2:	6023      	str	r3, [r4, #0]
 80045b4:	bd38      	pop	{r3, r4, r5, pc}
 80045b6:	bf00      	nop
 80045b8:	20000338 	.word	0x20000338

080045bc <_getpid_r>:
 80045bc:	f7fd b8fb 	b.w	80017b6 <_getpid>

080045c0 <__swhatbuf_r>:
 80045c0:	b570      	push	{r4, r5, r6, lr}
 80045c2:	460c      	mov	r4, r1
 80045c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80045c8:	2900      	cmp	r1, #0
 80045ca:	b096      	sub	sp, #88	@ 0x58
 80045cc:	4615      	mov	r5, r2
 80045ce:	461e      	mov	r6, r3
 80045d0:	da0d      	bge.n	80045ee <__swhatbuf_r+0x2e>
 80045d2:	89a3      	ldrh	r3, [r4, #12]
 80045d4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80045d8:	f04f 0100 	mov.w	r1, #0
 80045dc:	bf14      	ite	ne
 80045de:	2340      	movne	r3, #64	@ 0x40
 80045e0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80045e4:	2000      	movs	r0, #0
 80045e6:	6031      	str	r1, [r6, #0]
 80045e8:	602b      	str	r3, [r5, #0]
 80045ea:	b016      	add	sp, #88	@ 0x58
 80045ec:	bd70      	pop	{r4, r5, r6, pc}
 80045ee:	466a      	mov	r2, sp
 80045f0:	f000 f848 	bl	8004684 <_fstat_r>
 80045f4:	2800      	cmp	r0, #0
 80045f6:	dbec      	blt.n	80045d2 <__swhatbuf_r+0x12>
 80045f8:	9901      	ldr	r1, [sp, #4]
 80045fa:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80045fe:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8004602:	4259      	negs	r1, r3
 8004604:	4159      	adcs	r1, r3
 8004606:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800460a:	e7eb      	b.n	80045e4 <__swhatbuf_r+0x24>

0800460c <__smakebuf_r>:
 800460c:	898b      	ldrh	r3, [r1, #12]
 800460e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004610:	079d      	lsls	r5, r3, #30
 8004612:	4606      	mov	r6, r0
 8004614:	460c      	mov	r4, r1
 8004616:	d507      	bpl.n	8004628 <__smakebuf_r+0x1c>
 8004618:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800461c:	6023      	str	r3, [r4, #0]
 800461e:	6123      	str	r3, [r4, #16]
 8004620:	2301      	movs	r3, #1
 8004622:	6163      	str	r3, [r4, #20]
 8004624:	b003      	add	sp, #12
 8004626:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004628:	ab01      	add	r3, sp, #4
 800462a:	466a      	mov	r2, sp
 800462c:	f7ff ffc8 	bl	80045c0 <__swhatbuf_r>
 8004630:	9f00      	ldr	r7, [sp, #0]
 8004632:	4605      	mov	r5, r0
 8004634:	4639      	mov	r1, r7
 8004636:	4630      	mov	r0, r6
 8004638:	f7fe febe 	bl	80033b8 <_malloc_r>
 800463c:	b948      	cbnz	r0, 8004652 <__smakebuf_r+0x46>
 800463e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004642:	059a      	lsls	r2, r3, #22
 8004644:	d4ee      	bmi.n	8004624 <__smakebuf_r+0x18>
 8004646:	f023 0303 	bic.w	r3, r3, #3
 800464a:	f043 0302 	orr.w	r3, r3, #2
 800464e:	81a3      	strh	r3, [r4, #12]
 8004650:	e7e2      	b.n	8004618 <__smakebuf_r+0xc>
 8004652:	89a3      	ldrh	r3, [r4, #12]
 8004654:	6020      	str	r0, [r4, #0]
 8004656:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800465a:	81a3      	strh	r3, [r4, #12]
 800465c:	9b01      	ldr	r3, [sp, #4]
 800465e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8004662:	b15b      	cbz	r3, 800467c <__smakebuf_r+0x70>
 8004664:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004668:	4630      	mov	r0, r6
 800466a:	f000 f81d 	bl	80046a8 <_isatty_r>
 800466e:	b128      	cbz	r0, 800467c <__smakebuf_r+0x70>
 8004670:	89a3      	ldrh	r3, [r4, #12]
 8004672:	f023 0303 	bic.w	r3, r3, #3
 8004676:	f043 0301 	orr.w	r3, r3, #1
 800467a:	81a3      	strh	r3, [r4, #12]
 800467c:	89a3      	ldrh	r3, [r4, #12]
 800467e:	431d      	orrs	r5, r3
 8004680:	81a5      	strh	r5, [r4, #12]
 8004682:	e7cf      	b.n	8004624 <__smakebuf_r+0x18>

08004684 <_fstat_r>:
 8004684:	b538      	push	{r3, r4, r5, lr}
 8004686:	4d07      	ldr	r5, [pc, #28]	@ (80046a4 <_fstat_r+0x20>)
 8004688:	2300      	movs	r3, #0
 800468a:	4604      	mov	r4, r0
 800468c:	4608      	mov	r0, r1
 800468e:	4611      	mov	r1, r2
 8004690:	602b      	str	r3, [r5, #0]
 8004692:	f7fd f8f8 	bl	8001886 <_fstat>
 8004696:	1c43      	adds	r3, r0, #1
 8004698:	d102      	bne.n	80046a0 <_fstat_r+0x1c>
 800469a:	682b      	ldr	r3, [r5, #0]
 800469c:	b103      	cbz	r3, 80046a0 <_fstat_r+0x1c>
 800469e:	6023      	str	r3, [r4, #0]
 80046a0:	bd38      	pop	{r3, r4, r5, pc}
 80046a2:	bf00      	nop
 80046a4:	20000338 	.word	0x20000338

080046a8 <_isatty_r>:
 80046a8:	b538      	push	{r3, r4, r5, lr}
 80046aa:	4d06      	ldr	r5, [pc, #24]	@ (80046c4 <_isatty_r+0x1c>)
 80046ac:	2300      	movs	r3, #0
 80046ae:	4604      	mov	r4, r0
 80046b0:	4608      	mov	r0, r1
 80046b2:	602b      	str	r3, [r5, #0]
 80046b4:	f7fd f8f7 	bl	80018a6 <_isatty>
 80046b8:	1c43      	adds	r3, r0, #1
 80046ba:	d102      	bne.n	80046c2 <_isatty_r+0x1a>
 80046bc:	682b      	ldr	r3, [r5, #0]
 80046be:	b103      	cbz	r3, 80046c2 <_isatty_r+0x1a>
 80046c0:	6023      	str	r3, [r4, #0]
 80046c2:	bd38      	pop	{r3, r4, r5, pc}
 80046c4:	20000338 	.word	0x20000338

080046c8 <powf>:
 80046c8:	b508      	push	{r3, lr}
 80046ca:	ed2d 8b04 	vpush	{d8-d9}
 80046ce:	eeb0 8a60 	vmov.f32	s16, s1
 80046d2:	eeb0 9a40 	vmov.f32	s18, s0
 80046d6:	f000 f859 	bl	800478c <__ieee754_powf>
 80046da:	eeb4 8a48 	vcmp.f32	s16, s16
 80046de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80046e2:	eef0 8a40 	vmov.f32	s17, s0
 80046e6:	d63e      	bvs.n	8004766 <powf+0x9e>
 80046e8:	eeb5 9a40 	vcmp.f32	s18, #0.0
 80046ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80046f0:	d112      	bne.n	8004718 <powf+0x50>
 80046f2:	eeb5 8a40 	vcmp.f32	s16, #0.0
 80046f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80046fa:	d039      	beq.n	8004770 <powf+0xa8>
 80046fc:	eeb0 0a48 	vmov.f32	s0, s16
 8004700:	f000 f839 	bl	8004776 <finitef>
 8004704:	b378      	cbz	r0, 8004766 <powf+0x9e>
 8004706:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800470a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800470e:	d52a      	bpl.n	8004766 <powf+0x9e>
 8004710:	f7fd ff62 	bl	80025d8 <__errno>
 8004714:	2322      	movs	r3, #34	@ 0x22
 8004716:	e014      	b.n	8004742 <powf+0x7a>
 8004718:	f000 f82d 	bl	8004776 <finitef>
 800471c:	b998      	cbnz	r0, 8004746 <powf+0x7e>
 800471e:	eeb0 0a49 	vmov.f32	s0, s18
 8004722:	f000 f828 	bl	8004776 <finitef>
 8004726:	b170      	cbz	r0, 8004746 <powf+0x7e>
 8004728:	eeb0 0a48 	vmov.f32	s0, s16
 800472c:	f000 f823 	bl	8004776 <finitef>
 8004730:	b148      	cbz	r0, 8004746 <powf+0x7e>
 8004732:	eef4 8a68 	vcmp.f32	s17, s17
 8004736:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800473a:	d7e9      	bvc.n	8004710 <powf+0x48>
 800473c:	f7fd ff4c 	bl	80025d8 <__errno>
 8004740:	2321      	movs	r3, #33	@ 0x21
 8004742:	6003      	str	r3, [r0, #0]
 8004744:	e00f      	b.n	8004766 <powf+0x9e>
 8004746:	eef5 8a40 	vcmp.f32	s17, #0.0
 800474a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800474e:	d10a      	bne.n	8004766 <powf+0x9e>
 8004750:	eeb0 0a49 	vmov.f32	s0, s18
 8004754:	f000 f80f 	bl	8004776 <finitef>
 8004758:	b128      	cbz	r0, 8004766 <powf+0x9e>
 800475a:	eeb0 0a48 	vmov.f32	s0, s16
 800475e:	f000 f80a 	bl	8004776 <finitef>
 8004762:	2800      	cmp	r0, #0
 8004764:	d1d4      	bne.n	8004710 <powf+0x48>
 8004766:	eeb0 0a68 	vmov.f32	s0, s17
 800476a:	ecbd 8b04 	vpop	{d8-d9}
 800476e:	bd08      	pop	{r3, pc}
 8004770:	eef7 8a00 	vmov.f32	s17, #112	@ 0x3f800000  1.0
 8004774:	e7f7      	b.n	8004766 <powf+0x9e>

08004776 <finitef>:
 8004776:	ee10 3a10 	vmov	r3, s0
 800477a:	f023 4000 	bic.w	r0, r3, #2147483648	@ 0x80000000
 800477e:	f1b0 4fff 	cmp.w	r0, #2139095040	@ 0x7f800000
 8004782:	bfac      	ite	ge
 8004784:	2000      	movge	r0, #0
 8004786:	2001      	movlt	r0, #1
 8004788:	4770      	bx	lr
	...

0800478c <__ieee754_powf>:
 800478c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004790:	ee10 4a90 	vmov	r4, s1
 8004794:	f034 4900 	bics.w	r9, r4, #2147483648	@ 0x80000000
 8004798:	ed2d 8b02 	vpush	{d8}
 800479c:	ee10 6a10 	vmov	r6, s0
 80047a0:	eeb0 8a40 	vmov.f32	s16, s0
 80047a4:	eef0 8a60 	vmov.f32	s17, s1
 80047a8:	d10c      	bne.n	80047c4 <__ieee754_powf+0x38>
 80047aa:	f486 0680 	eor.w	r6, r6, #4194304	@ 0x400000
 80047ae:	0076      	lsls	r6, r6, #1
 80047b0:	f516 0f00 	cmn.w	r6, #8388608	@ 0x800000
 80047b4:	f240 829c 	bls.w	8004cf0 <__ieee754_powf+0x564>
 80047b8:	ee38 0a28 	vadd.f32	s0, s16, s17
 80047bc:	ecbd 8b02 	vpop	{d8}
 80047c0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80047c4:	f026 4800 	bic.w	r8, r6, #2147483648	@ 0x80000000
 80047c8:	f1b8 4fff 	cmp.w	r8, #2139095040	@ 0x7f800000
 80047cc:	d802      	bhi.n	80047d4 <__ieee754_powf+0x48>
 80047ce:	f1b9 4fff 	cmp.w	r9, #2139095040	@ 0x7f800000
 80047d2:	d908      	bls.n	80047e6 <__ieee754_powf+0x5a>
 80047d4:	f1b6 5f7e 	cmp.w	r6, #1065353216	@ 0x3f800000
 80047d8:	d1ee      	bne.n	80047b8 <__ieee754_powf+0x2c>
 80047da:	f484 0480 	eor.w	r4, r4, #4194304	@ 0x400000
 80047de:	0064      	lsls	r4, r4, #1
 80047e0:	f514 0f00 	cmn.w	r4, #8388608	@ 0x800000
 80047e4:	e7e6      	b.n	80047b4 <__ieee754_powf+0x28>
 80047e6:	2e00      	cmp	r6, #0
 80047e8:	da1e      	bge.n	8004828 <__ieee754_powf+0x9c>
 80047ea:	f1b9 4f97 	cmp.w	r9, #1266679808	@ 0x4b800000
 80047ee:	d22b      	bcs.n	8004848 <__ieee754_powf+0xbc>
 80047f0:	f1b9 5f7e 	cmp.w	r9, #1065353216	@ 0x3f800000
 80047f4:	d332      	bcc.n	800485c <__ieee754_powf+0xd0>
 80047f6:	ea4f 53e9 	mov.w	r3, r9, asr #23
 80047fa:	f1c3 0396 	rsb	r3, r3, #150	@ 0x96
 80047fe:	fa49 f503 	asr.w	r5, r9, r3
 8004802:	fa05 f303 	lsl.w	r3, r5, r3
 8004806:	454b      	cmp	r3, r9
 8004808:	d126      	bne.n	8004858 <__ieee754_powf+0xcc>
 800480a:	f005 0501 	and.w	r5, r5, #1
 800480e:	f1c5 0502 	rsb	r5, r5, #2
 8004812:	f1b9 5f7e 	cmp.w	r9, #1065353216	@ 0x3f800000
 8004816:	d122      	bne.n	800485e <__ieee754_powf+0xd2>
 8004818:	2c00      	cmp	r4, #0
 800481a:	f280 826f 	bge.w	8004cfc <__ieee754_powf+0x570>
 800481e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8004822:	ee87 0a88 	vdiv.f32	s0, s15, s16
 8004826:	e7c9      	b.n	80047bc <__ieee754_powf+0x30>
 8004828:	2500      	movs	r5, #0
 800482a:	f1b9 4fff 	cmp.w	r9, #2139095040	@ 0x7f800000
 800482e:	d1f0      	bne.n	8004812 <__ieee754_powf+0x86>
 8004830:	f1b8 5f7e 	cmp.w	r8, #1065353216	@ 0x3f800000
 8004834:	f000 825c 	beq.w	8004cf0 <__ieee754_powf+0x564>
 8004838:	d908      	bls.n	800484c <__ieee754_powf+0xc0>
 800483a:	ed9f 0ad8 	vldr	s0, [pc, #864]	@ 8004b9c <__ieee754_powf+0x410>
 800483e:	2c00      	cmp	r4, #0
 8004840:	bfa8      	it	ge
 8004842:	eeb0 0a68 	vmovge.f32	s0, s17
 8004846:	e7b9      	b.n	80047bc <__ieee754_powf+0x30>
 8004848:	2502      	movs	r5, #2
 800484a:	e7ee      	b.n	800482a <__ieee754_powf+0x9e>
 800484c:	2c00      	cmp	r4, #0
 800484e:	f280 8252 	bge.w	8004cf6 <__ieee754_powf+0x56a>
 8004852:	eeb1 0a68 	vneg.f32	s0, s17
 8004856:	e7b1      	b.n	80047bc <__ieee754_powf+0x30>
 8004858:	2500      	movs	r5, #0
 800485a:	e7da      	b.n	8004812 <__ieee754_powf+0x86>
 800485c:	2500      	movs	r5, #0
 800485e:	f1b4 4f80 	cmp.w	r4, #1073741824	@ 0x40000000
 8004862:	d102      	bne.n	800486a <__ieee754_powf+0xde>
 8004864:	ee28 0a08 	vmul.f32	s0, s16, s16
 8004868:	e7a8      	b.n	80047bc <__ieee754_powf+0x30>
 800486a:	f1b4 5f7c 	cmp.w	r4, #1056964608	@ 0x3f000000
 800486e:	d109      	bne.n	8004884 <__ieee754_powf+0xf8>
 8004870:	2e00      	cmp	r6, #0
 8004872:	db07      	blt.n	8004884 <__ieee754_powf+0xf8>
 8004874:	eeb0 0a48 	vmov.f32	s0, s16
 8004878:	ecbd 8b02 	vpop	{d8}
 800487c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004880:	f000 bae8 	b.w	8004e54 <__ieee754_sqrtf>
 8004884:	eeb0 0a48 	vmov.f32	s0, s16
 8004888:	f000 fa50 	bl	8004d2c <fabsf>
 800488c:	f026 4340 	bic.w	r3, r6, #3221225472	@ 0xc0000000
 8004890:	f1b3 5f7e 	cmp.w	r3, #1065353216	@ 0x3f800000
 8004894:	4647      	mov	r7, r8
 8004896:	d002      	beq.n	800489e <__ieee754_powf+0x112>
 8004898:	f1b8 0f00 	cmp.w	r8, #0
 800489c:	d117      	bne.n	80048ce <__ieee754_powf+0x142>
 800489e:	2c00      	cmp	r4, #0
 80048a0:	bfbc      	itt	lt
 80048a2:	eef7 7a00 	vmovlt.f32	s15, #112	@ 0x3f800000  1.0
 80048a6:	ee87 0a80 	vdivlt.f32	s0, s15, s0
 80048aa:	2e00      	cmp	r6, #0
 80048ac:	da86      	bge.n	80047bc <__ieee754_powf+0x30>
 80048ae:	f1a8 587e 	sub.w	r8, r8, #1065353216	@ 0x3f800000
 80048b2:	ea58 0805 	orrs.w	r8, r8, r5
 80048b6:	d104      	bne.n	80048c2 <__ieee754_powf+0x136>
 80048b8:	ee70 7a40 	vsub.f32	s15, s0, s0
 80048bc:	ee87 0aa7 	vdiv.f32	s0, s15, s15
 80048c0:	e77c      	b.n	80047bc <__ieee754_powf+0x30>
 80048c2:	2d01      	cmp	r5, #1
 80048c4:	f47f af7a 	bne.w	80047bc <__ieee754_powf+0x30>
 80048c8:	eeb1 0a40 	vneg.f32	s0, s0
 80048cc:	e776      	b.n	80047bc <__ieee754_powf+0x30>
 80048ce:	0ff0      	lsrs	r0, r6, #31
 80048d0:	3801      	subs	r0, #1
 80048d2:	ea55 0300 	orrs.w	r3, r5, r0
 80048d6:	d104      	bne.n	80048e2 <__ieee754_powf+0x156>
 80048d8:	ee38 8a48 	vsub.f32	s16, s16, s16
 80048dc:	ee88 0a08 	vdiv.f32	s0, s16, s16
 80048e0:	e76c      	b.n	80047bc <__ieee754_powf+0x30>
 80048e2:	f1b9 4f9a 	cmp.w	r9, #1291845632	@ 0x4d000000
 80048e6:	d973      	bls.n	80049d0 <__ieee754_powf+0x244>
 80048e8:	4bad      	ldr	r3, [pc, #692]	@ (8004ba0 <__ieee754_powf+0x414>)
 80048ea:	4598      	cmp	r8, r3
 80048ec:	d808      	bhi.n	8004900 <__ieee754_powf+0x174>
 80048ee:	2c00      	cmp	r4, #0
 80048f0:	da0b      	bge.n	800490a <__ieee754_powf+0x17e>
 80048f2:	2000      	movs	r0, #0
 80048f4:	ecbd 8b02 	vpop	{d8}
 80048f8:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80048fc:	f000 baa4 	b.w	8004e48 <__math_oflowf>
 8004900:	4ba8      	ldr	r3, [pc, #672]	@ (8004ba4 <__ieee754_powf+0x418>)
 8004902:	4598      	cmp	r8, r3
 8004904:	d908      	bls.n	8004918 <__ieee754_powf+0x18c>
 8004906:	2c00      	cmp	r4, #0
 8004908:	dcf3      	bgt.n	80048f2 <__ieee754_powf+0x166>
 800490a:	2000      	movs	r0, #0
 800490c:	ecbd 8b02 	vpop	{d8}
 8004910:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004914:	f000 ba92 	b.w	8004e3c <__math_uflowf>
 8004918:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800491c:	ee30 0a67 	vsub.f32	s0, s0, s15
 8004920:	eddf 6aa1 	vldr	s13, [pc, #644]	@ 8004ba8 <__ieee754_powf+0x41c>
 8004924:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 8004928:	eee0 6a67 	vfms.f32	s13, s0, s15
 800492c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8004930:	eee6 7ac0 	vfms.f32	s15, s13, s0
 8004934:	ee20 7a00 	vmul.f32	s14, s0, s0
 8004938:	ee27 7a27 	vmul.f32	s14, s14, s15
 800493c:	eddf 7a9b 	vldr	s15, [pc, #620]	@ 8004bac <__ieee754_powf+0x420>
 8004940:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 8004944:	ed9f 7a9a 	vldr	s14, [pc, #616]	@ 8004bb0 <__ieee754_powf+0x424>
 8004948:	eee0 7a07 	vfma.f32	s15, s0, s14
 800494c:	ed9f 7a99 	vldr	s14, [pc, #612]	@ 8004bb4 <__ieee754_powf+0x428>
 8004950:	eef0 6a67 	vmov.f32	s13, s15
 8004954:	eee0 6a07 	vfma.f32	s13, s0, s14
 8004958:	ee16 3a90 	vmov	r3, s13
 800495c:	f423 637f 	bic.w	r3, r3, #4080	@ 0xff0
 8004960:	f023 030f 	bic.w	r3, r3, #15
 8004964:	ee06 3a90 	vmov	s13, r3
 8004968:	eee0 6a47 	vfms.f32	s13, s0, s14
 800496c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004970:	3d01      	subs	r5, #1
 8004972:	f424 647f 	bic.w	r4, r4, #4080	@ 0xff0
 8004976:	4305      	orrs	r5, r0
 8004978:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800497c:	f024 040f 	bic.w	r4, r4, #15
 8004980:	eebf 8a00 	vmov.f32	s16, #240	@ 0xbf800000 -1.0
 8004984:	bf18      	it	ne
 8004986:	eeb0 8a47 	vmovne.f32	s16, s14
 800498a:	ee07 4a10 	vmov	s14, r4
 800498e:	ee67 0aa8 	vmul.f32	s1, s15, s17
 8004992:	ee38 7ac7 	vsub.f32	s14, s17, s14
 8004996:	ee07 3a90 	vmov	s15, r3
 800499a:	eee7 0a27 	vfma.f32	s1, s14, s15
 800499e:	ee07 4a10 	vmov	s14, r4
 80049a2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80049a6:	ee30 7aa7 	vadd.f32	s14, s1, s15
 80049aa:	ee17 1a10 	vmov	r1, s14
 80049ae:	2900      	cmp	r1, #0
 80049b0:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 80049b4:	f340 80dd 	ble.w	8004b72 <__ieee754_powf+0x3e6>
 80049b8:	f1b3 4f86 	cmp.w	r3, #1124073472	@ 0x43000000
 80049bc:	f240 80ca 	bls.w	8004b54 <__ieee754_powf+0x3c8>
 80049c0:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80049c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80049c8:	bf4c      	ite	mi
 80049ca:	2001      	movmi	r0, #1
 80049cc:	2000      	movpl	r0, #0
 80049ce:	e791      	b.n	80048f4 <__ieee754_powf+0x168>
 80049d0:	f016 4fff 	tst.w	r6, #2139095040	@ 0x7f800000
 80049d4:	bf01      	itttt	eq
 80049d6:	eddf 7a78 	vldreq	s15, [pc, #480]	@ 8004bb8 <__ieee754_powf+0x42c>
 80049da:	ee60 7a27 	vmuleq.f32	s15, s0, s15
 80049de:	f06f 0317 	mvneq.w	r3, #23
 80049e2:	ee17 7a90 	vmoveq	r7, s15
 80049e6:	ea4f 52e7 	mov.w	r2, r7, asr #23
 80049ea:	bf18      	it	ne
 80049ec:	2300      	movne	r3, #0
 80049ee:	3a7f      	subs	r2, #127	@ 0x7f
 80049f0:	441a      	add	r2, r3
 80049f2:	4b72      	ldr	r3, [pc, #456]	@ (8004bbc <__ieee754_powf+0x430>)
 80049f4:	f3c7 0716 	ubfx	r7, r7, #0, #23
 80049f8:	429f      	cmp	r7, r3
 80049fa:	f047 517e 	orr.w	r1, r7, #1065353216	@ 0x3f800000
 80049fe:	dd06      	ble.n	8004a0e <__ieee754_powf+0x282>
 8004a00:	4b6f      	ldr	r3, [pc, #444]	@ (8004bc0 <__ieee754_powf+0x434>)
 8004a02:	429f      	cmp	r7, r3
 8004a04:	f340 80a4 	ble.w	8004b50 <__ieee754_powf+0x3c4>
 8004a08:	3201      	adds	r2, #1
 8004a0a:	f5a1 0100 	sub.w	r1, r1, #8388608	@ 0x800000
 8004a0e:	2600      	movs	r6, #0
 8004a10:	4b6c      	ldr	r3, [pc, #432]	@ (8004bc4 <__ieee754_powf+0x438>)
 8004a12:	eb03 0386 	add.w	r3, r3, r6, lsl #2
 8004a16:	ee07 1a10 	vmov	s14, r1
 8004a1a:	edd3 5a00 	vldr	s11, [r3]
 8004a1e:	4b6a      	ldr	r3, [pc, #424]	@ (8004bc8 <__ieee754_powf+0x43c>)
 8004a20:	ee75 7a87 	vadd.f32	s15, s11, s14
 8004a24:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8004a28:	eec6 4aa7 	vdiv.f32	s9, s13, s15
 8004a2c:	1049      	asrs	r1, r1, #1
 8004a2e:	f041 5100 	orr.w	r1, r1, #536870912	@ 0x20000000
 8004a32:	f501 2180 	add.w	r1, r1, #262144	@ 0x40000
 8004a36:	eb01 5146 	add.w	r1, r1, r6, lsl #21
 8004a3a:	ee37 6a65 	vsub.f32	s12, s14, s11
 8004a3e:	ee07 1a90 	vmov	s15, r1
 8004a42:	ee26 5a24 	vmul.f32	s10, s12, s9
 8004a46:	ee77 5ae5 	vsub.f32	s11, s15, s11
 8004a4a:	ee15 7a10 	vmov	r7, s10
 8004a4e:	401f      	ands	r7, r3
 8004a50:	ee06 7a90 	vmov	s13, r7
 8004a54:	eea6 6ae7 	vfms.f32	s12, s13, s15
 8004a58:	ee37 7a65 	vsub.f32	s14, s14, s11
 8004a5c:	ee65 7a05 	vmul.f32	s15, s10, s10
 8004a60:	eea6 6ac7 	vfms.f32	s12, s13, s14
 8004a64:	eddf 5a59 	vldr	s11, [pc, #356]	@ 8004bcc <__ieee754_powf+0x440>
 8004a68:	ed9f 7a59 	vldr	s14, [pc, #356]	@ 8004bd0 <__ieee754_powf+0x444>
 8004a6c:	eee7 5a87 	vfma.f32	s11, s15, s14
 8004a70:	ed9f 7a58 	vldr	s14, [pc, #352]	@ 8004bd4 <__ieee754_powf+0x448>
 8004a74:	eea5 7aa7 	vfma.f32	s14, s11, s15
 8004a78:	eddf 5a4b 	vldr	s11, [pc, #300]	@ 8004ba8 <__ieee754_powf+0x41c>
 8004a7c:	eee7 5a27 	vfma.f32	s11, s14, s15
 8004a80:	ed9f 7a55 	vldr	s14, [pc, #340]	@ 8004bd8 <__ieee754_powf+0x44c>
 8004a84:	eea5 7aa7 	vfma.f32	s14, s11, s15
 8004a88:	eddf 5a54 	vldr	s11, [pc, #336]	@ 8004bdc <__ieee754_powf+0x450>
 8004a8c:	ee26 6a24 	vmul.f32	s12, s12, s9
 8004a90:	eee7 5a27 	vfma.f32	s11, s14, s15
 8004a94:	ee35 7a26 	vadd.f32	s14, s10, s13
 8004a98:	ee67 4aa7 	vmul.f32	s9, s15, s15
 8004a9c:	ee27 7a06 	vmul.f32	s14, s14, s12
 8004aa0:	eef0 7a08 	vmov.f32	s15, #8	@ 0x40400000  3.0
 8004aa4:	eea4 7aa5 	vfma.f32	s14, s9, s11
 8004aa8:	eef0 5a67 	vmov.f32	s11, s15
 8004aac:	eee6 5aa6 	vfma.f32	s11, s13, s13
 8004ab0:	ee75 5a87 	vadd.f32	s11, s11, s14
 8004ab4:	ee15 1a90 	vmov	r1, s11
 8004ab8:	4019      	ands	r1, r3
 8004aba:	ee05 1a90 	vmov	s11, r1
 8004abe:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8004ac2:	eee6 7ae6 	vfms.f32	s15, s13, s13
 8004ac6:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004aca:	ee67 7a85 	vmul.f32	s15, s15, s10
 8004ace:	eee6 7a25 	vfma.f32	s15, s12, s11
 8004ad2:	eeb0 6a67 	vmov.f32	s12, s15
 8004ad6:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8004ada:	ee16 1a10 	vmov	r1, s12
 8004ade:	4019      	ands	r1, r3
 8004ae0:	ee06 1a10 	vmov	s12, r1
 8004ae4:	eeb0 7a46 	vmov.f32	s14, s12
 8004ae8:	eea6 7ae5 	vfms.f32	s14, s13, s11
 8004aec:	493c      	ldr	r1, [pc, #240]	@ (8004be0 <__ieee754_powf+0x454>)
 8004aee:	eb01 0186 	add.w	r1, r1, r6, lsl #2
 8004af2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8004af6:	ed9f 7a3b 	vldr	s14, [pc, #236]	@ 8004be4 <__ieee754_powf+0x458>
 8004afa:	eddf 5a3b 	vldr	s11, [pc, #236]	@ 8004be8 <__ieee754_powf+0x45c>
 8004afe:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004b02:	ed9f 7a3a 	vldr	s14, [pc, #232]	@ 8004bec <__ieee754_powf+0x460>
 8004b06:	eee6 7a07 	vfma.f32	s15, s12, s14
 8004b0a:	ed91 7a00 	vldr	s14, [r1]
 8004b0e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b12:	ee07 2a10 	vmov	s14, r2
 8004b16:	eef0 6a67 	vmov.f32	s13, s15
 8004b1a:	4a35      	ldr	r2, [pc, #212]	@ (8004bf0 <__ieee754_powf+0x464>)
 8004b1c:	eee6 6a25 	vfma.f32	s13, s12, s11
 8004b20:	eb02 0286 	add.w	r2, r2, r6, lsl #2
 8004b24:	ed92 5a00 	vldr	s10, [r2]
 8004b28:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8004b2c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8004b30:	ee76 6a87 	vadd.f32	s13, s13, s14
 8004b34:	ee16 2a90 	vmov	r2, s13
 8004b38:	4013      	ands	r3, r2
 8004b3a:	ee06 3a90 	vmov	s13, r3
 8004b3e:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8004b42:	ee37 7a45 	vsub.f32	s14, s14, s10
 8004b46:	eea6 7a65 	vfms.f32	s14, s12, s11
 8004b4a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8004b4e:	e70f      	b.n	8004970 <__ieee754_powf+0x1e4>
 8004b50:	2601      	movs	r6, #1
 8004b52:	e75d      	b.n	8004a10 <__ieee754_powf+0x284>
 8004b54:	d152      	bne.n	8004bfc <__ieee754_powf+0x470>
 8004b56:	eddf 6a27 	vldr	s13, [pc, #156]	@ 8004bf4 <__ieee754_powf+0x468>
 8004b5a:	ee37 7a67 	vsub.f32	s14, s14, s15
 8004b5e:	ee70 6aa6 	vadd.f32	s13, s1, s13
 8004b62:	eef4 6ac7 	vcmpe.f32	s13, s14
 8004b66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b6a:	f73f af29 	bgt.w	80049c0 <__ieee754_powf+0x234>
 8004b6e:	2386      	movs	r3, #134	@ 0x86
 8004b70:	e048      	b.n	8004c04 <__ieee754_powf+0x478>
 8004b72:	4a21      	ldr	r2, [pc, #132]	@ (8004bf8 <__ieee754_powf+0x46c>)
 8004b74:	4293      	cmp	r3, r2
 8004b76:	d907      	bls.n	8004b88 <__ieee754_powf+0x3fc>
 8004b78:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8004b7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b80:	bf4c      	ite	mi
 8004b82:	2001      	movmi	r0, #1
 8004b84:	2000      	movpl	r0, #0
 8004b86:	e6c1      	b.n	800490c <__ieee754_powf+0x180>
 8004b88:	d138      	bne.n	8004bfc <__ieee754_powf+0x470>
 8004b8a:	ee37 7a67 	vsub.f32	s14, s14, s15
 8004b8e:	eeb4 7ae0 	vcmpe.f32	s14, s1
 8004b92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b96:	dbea      	blt.n	8004b6e <__ieee754_powf+0x3e2>
 8004b98:	e7ee      	b.n	8004b78 <__ieee754_powf+0x3ec>
 8004b9a:	bf00      	nop
 8004b9c:	00000000 	.word	0x00000000
 8004ba0:	3f7ffff3 	.word	0x3f7ffff3
 8004ba4:	3f800007 	.word	0x3f800007
 8004ba8:	3eaaaaab 	.word	0x3eaaaaab
 8004bac:	3fb8aa3b 	.word	0x3fb8aa3b
 8004bb0:	36eca570 	.word	0x36eca570
 8004bb4:	3fb8aa00 	.word	0x3fb8aa00
 8004bb8:	4b800000 	.word	0x4b800000
 8004bbc:	001cc471 	.word	0x001cc471
 8004bc0:	005db3d6 	.word	0x005db3d6
 8004bc4:	08005228 	.word	0x08005228
 8004bc8:	fffff000 	.word	0xfffff000
 8004bcc:	3e6c3255 	.word	0x3e6c3255
 8004bd0:	3e53f142 	.word	0x3e53f142
 8004bd4:	3e8ba305 	.word	0x3e8ba305
 8004bd8:	3edb6db7 	.word	0x3edb6db7
 8004bdc:	3f19999a 	.word	0x3f19999a
 8004be0:	08005218 	.word	0x08005218
 8004be4:	3f76384f 	.word	0x3f76384f
 8004be8:	3f763800 	.word	0x3f763800
 8004bec:	369dc3a0 	.word	0x369dc3a0
 8004bf0:	08005220 	.word	0x08005220
 8004bf4:	3338aa3c 	.word	0x3338aa3c
 8004bf8:	43160000 	.word	0x43160000
 8004bfc:	f1b3 5f7c 	cmp.w	r3, #1056964608	@ 0x3f000000
 8004c00:	d971      	bls.n	8004ce6 <__ieee754_powf+0x55a>
 8004c02:	15db      	asrs	r3, r3, #23
 8004c04:	3b7e      	subs	r3, #126	@ 0x7e
 8004c06:	f44f 0000 	mov.w	r0, #8388608	@ 0x800000
 8004c0a:	4118      	asrs	r0, r3
 8004c0c:	4408      	add	r0, r1
 8004c0e:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 8004c12:	4a3c      	ldr	r2, [pc, #240]	@ (8004d04 <__ieee754_powf+0x578>)
 8004c14:	3b7f      	subs	r3, #127	@ 0x7f
 8004c16:	411a      	asrs	r2, r3
 8004c18:	4002      	ands	r2, r0
 8004c1a:	ee07 2a10 	vmov	s14, r2
 8004c1e:	f3c0 0016 	ubfx	r0, r0, #0, #23
 8004c22:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8004c26:	f1c3 0317 	rsb	r3, r3, #23
 8004c2a:	4118      	asrs	r0, r3
 8004c2c:	2900      	cmp	r1, #0
 8004c2e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8004c32:	bfb8      	it	lt
 8004c34:	4240      	neglt	r0, r0
 8004c36:	ee37 7aa0 	vadd.f32	s14, s15, s1
 8004c3a:	eddf 6a33 	vldr	s13, [pc, #204]	@ 8004d08 <__ieee754_powf+0x57c>
 8004c3e:	ed9f 6a33 	vldr	s12, [pc, #204]	@ 8004d0c <__ieee754_powf+0x580>
 8004c42:	ee17 3a10 	vmov	r3, s14
 8004c46:	f423 637f 	bic.w	r3, r3, #4080	@ 0xff0
 8004c4a:	f023 030f 	bic.w	r3, r3, #15
 8004c4e:	ee07 3a10 	vmov	s14, r3
 8004c52:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004c56:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8004c5a:	ee70 0ae7 	vsub.f32	s1, s1, s15
 8004c5e:	eddf 7a2c 	vldr	s15, [pc, #176]	@ 8004d10 <__ieee754_powf+0x584>
 8004c62:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004c66:	eee0 7aa6 	vfma.f32	s15, s1, s13
 8004c6a:	eef0 6a67 	vmov.f32	s13, s15
 8004c6e:	eee7 6a06 	vfma.f32	s13, s14, s12
 8004c72:	eef0 5a66 	vmov.f32	s11, s13
 8004c76:	eee7 5a46 	vfms.f32	s11, s14, s12
 8004c7a:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8004c7e:	ee77 7ae5 	vsub.f32	s15, s15, s11
 8004c82:	ed9f 6a24 	vldr	s12, [pc, #144]	@ 8004d14 <__ieee754_powf+0x588>
 8004c86:	eddf 5a24 	vldr	s11, [pc, #144]	@ 8004d18 <__ieee754_powf+0x58c>
 8004c8a:	eea7 6a25 	vfma.f32	s12, s14, s11
 8004c8e:	eddf 5a23 	vldr	s11, [pc, #140]	@ 8004d1c <__ieee754_powf+0x590>
 8004c92:	eee6 5a07 	vfma.f32	s11, s12, s14
 8004c96:	ed9f 6a22 	vldr	s12, [pc, #136]	@ 8004d20 <__ieee754_powf+0x594>
 8004c9a:	eea5 6a87 	vfma.f32	s12, s11, s14
 8004c9e:	eddf 5a21 	vldr	s11, [pc, #132]	@ 8004d24 <__ieee754_powf+0x598>
 8004ca2:	eee6 5a07 	vfma.f32	s11, s12, s14
 8004ca6:	eeb0 6a66 	vmov.f32	s12, s13
 8004caa:	eea5 6ac7 	vfms.f32	s12, s11, s14
 8004cae:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 8004cb2:	ee66 5a86 	vmul.f32	s11, s13, s12
 8004cb6:	ee36 6a47 	vsub.f32	s12, s12, s14
 8004cba:	eee6 7aa7 	vfma.f32	s15, s13, s15
 8004cbe:	ee85 7a86 	vdiv.f32	s14, s11, s12
 8004cc2:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004cc6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004cca:	ee30 0a67 	vsub.f32	s0, s0, s15
 8004cce:	ee10 3a10 	vmov	r3, s0
 8004cd2:	eb03 53c0 	add.w	r3, r3, r0, lsl #23
 8004cd6:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8004cda:	da06      	bge.n	8004cea <__ieee754_powf+0x55e>
 8004cdc:	f000 f82e 	bl	8004d3c <scalbnf>
 8004ce0:	ee20 0a08 	vmul.f32	s0, s0, s16
 8004ce4:	e56a      	b.n	80047bc <__ieee754_powf+0x30>
 8004ce6:	2000      	movs	r0, #0
 8004ce8:	e7a5      	b.n	8004c36 <__ieee754_powf+0x4aa>
 8004cea:	ee00 3a10 	vmov	s0, r3
 8004cee:	e7f7      	b.n	8004ce0 <__ieee754_powf+0x554>
 8004cf0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8004cf4:	e562      	b.n	80047bc <__ieee754_powf+0x30>
 8004cf6:	ed9f 0a0c 	vldr	s0, [pc, #48]	@ 8004d28 <__ieee754_powf+0x59c>
 8004cfa:	e55f      	b.n	80047bc <__ieee754_powf+0x30>
 8004cfc:	eeb0 0a48 	vmov.f32	s0, s16
 8004d00:	e55c      	b.n	80047bc <__ieee754_powf+0x30>
 8004d02:	bf00      	nop
 8004d04:	ff800000 	.word	0xff800000
 8004d08:	3f317218 	.word	0x3f317218
 8004d0c:	3f317200 	.word	0x3f317200
 8004d10:	35bfbe8c 	.word	0x35bfbe8c
 8004d14:	b5ddea0e 	.word	0xb5ddea0e
 8004d18:	3331bb4c 	.word	0x3331bb4c
 8004d1c:	388ab355 	.word	0x388ab355
 8004d20:	bb360b61 	.word	0xbb360b61
 8004d24:	3e2aaaab 	.word	0x3e2aaaab
 8004d28:	00000000 	.word	0x00000000

08004d2c <fabsf>:
 8004d2c:	ee10 3a10 	vmov	r3, s0
 8004d30:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8004d34:	ee00 3a10 	vmov	s0, r3
 8004d38:	4770      	bx	lr
	...

08004d3c <scalbnf>:
 8004d3c:	ee10 3a10 	vmov	r3, s0
 8004d40:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8004d44:	d02b      	beq.n	8004d9e <scalbnf+0x62>
 8004d46:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8004d4a:	d302      	bcc.n	8004d52 <scalbnf+0x16>
 8004d4c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8004d50:	4770      	bx	lr
 8004d52:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8004d56:	d123      	bne.n	8004da0 <scalbnf+0x64>
 8004d58:	4b24      	ldr	r3, [pc, #144]	@ (8004dec <scalbnf+0xb0>)
 8004d5a:	eddf 7a25 	vldr	s15, [pc, #148]	@ 8004df0 <scalbnf+0xb4>
 8004d5e:	4298      	cmp	r0, r3
 8004d60:	ee20 0a27 	vmul.f32	s0, s0, s15
 8004d64:	db17      	blt.n	8004d96 <scalbnf+0x5a>
 8004d66:	ee10 3a10 	vmov	r3, s0
 8004d6a:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8004d6e:	3a19      	subs	r2, #25
 8004d70:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8004d74:	4288      	cmp	r0, r1
 8004d76:	dd15      	ble.n	8004da4 <scalbnf+0x68>
 8004d78:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 8004df4 <scalbnf+0xb8>
 8004d7c:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 8004df8 <scalbnf+0xbc>
 8004d80:	ee10 3a10 	vmov	r3, s0
 8004d84:	eeb0 7a67 	vmov.f32	s14, s15
 8004d88:	2b00      	cmp	r3, #0
 8004d8a:	bfb8      	it	lt
 8004d8c:	eef0 7a66 	vmovlt.f32	s15, s13
 8004d90:	ee27 0a87 	vmul.f32	s0, s15, s14
 8004d94:	4770      	bx	lr
 8004d96:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8004dfc <scalbnf+0xc0>
 8004d9a:	ee27 0a80 	vmul.f32	s0, s15, s0
 8004d9e:	4770      	bx	lr
 8004da0:	0dd2      	lsrs	r2, r2, #23
 8004da2:	e7e5      	b.n	8004d70 <scalbnf+0x34>
 8004da4:	4410      	add	r0, r2
 8004da6:	28fe      	cmp	r0, #254	@ 0xfe
 8004da8:	dce6      	bgt.n	8004d78 <scalbnf+0x3c>
 8004daa:	2800      	cmp	r0, #0
 8004dac:	dd06      	ble.n	8004dbc <scalbnf+0x80>
 8004dae:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8004db2:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8004db6:	ee00 3a10 	vmov	s0, r3
 8004dba:	4770      	bx	lr
 8004dbc:	f110 0f16 	cmn.w	r0, #22
 8004dc0:	da09      	bge.n	8004dd6 <scalbnf+0x9a>
 8004dc2:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8004dfc <scalbnf+0xc0>
 8004dc6:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8004e00 <scalbnf+0xc4>
 8004dca:	ee10 3a10 	vmov	r3, s0
 8004dce:	eeb0 7a67 	vmov.f32	s14, s15
 8004dd2:	2b00      	cmp	r3, #0
 8004dd4:	e7d9      	b.n	8004d8a <scalbnf+0x4e>
 8004dd6:	3019      	adds	r0, #25
 8004dd8:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8004ddc:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8004de0:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8004e04 <scalbnf+0xc8>
 8004de4:	ee07 3a90 	vmov	s15, r3
 8004de8:	e7d7      	b.n	8004d9a <scalbnf+0x5e>
 8004dea:	bf00      	nop
 8004dec:	ffff3cb0 	.word	0xffff3cb0
 8004df0:	4c000000 	.word	0x4c000000
 8004df4:	7149f2ca 	.word	0x7149f2ca
 8004df8:	f149f2ca 	.word	0xf149f2ca
 8004dfc:	0da24260 	.word	0x0da24260
 8004e00:	8da24260 	.word	0x8da24260
 8004e04:	33000000 	.word	0x33000000

08004e08 <with_errnof>:
 8004e08:	b510      	push	{r4, lr}
 8004e0a:	ed2d 8b02 	vpush	{d8}
 8004e0e:	eeb0 8a40 	vmov.f32	s16, s0
 8004e12:	4604      	mov	r4, r0
 8004e14:	f7fd fbe0 	bl	80025d8 <__errno>
 8004e18:	eeb0 0a48 	vmov.f32	s0, s16
 8004e1c:	ecbd 8b02 	vpop	{d8}
 8004e20:	6004      	str	r4, [r0, #0]
 8004e22:	bd10      	pop	{r4, pc}

08004e24 <xflowf>:
 8004e24:	b130      	cbz	r0, 8004e34 <xflowf+0x10>
 8004e26:	eef1 7a40 	vneg.f32	s15, s0
 8004e2a:	ee27 0a80 	vmul.f32	s0, s15, s0
 8004e2e:	2022      	movs	r0, #34	@ 0x22
 8004e30:	f7ff bfea 	b.w	8004e08 <with_errnof>
 8004e34:	eef0 7a40 	vmov.f32	s15, s0
 8004e38:	e7f7      	b.n	8004e2a <xflowf+0x6>
	...

08004e3c <__math_uflowf>:
 8004e3c:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8004e44 <__math_uflowf+0x8>
 8004e40:	f7ff bff0 	b.w	8004e24 <xflowf>
 8004e44:	10000000 	.word	0x10000000

08004e48 <__math_oflowf>:
 8004e48:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8004e50 <__math_oflowf+0x8>
 8004e4c:	f7ff bfea 	b.w	8004e24 <xflowf>
 8004e50:	70000000 	.word	0x70000000

08004e54 <__ieee754_sqrtf>:
 8004e54:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8004e58:	4770      	bx	lr
	...

08004e5c <_init>:
 8004e5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004e5e:	bf00      	nop
 8004e60:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004e62:	bc08      	pop	{r3}
 8004e64:	469e      	mov	lr, r3
 8004e66:	4770      	bx	lr

08004e68 <_fini>:
 8004e68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004e6a:	bf00      	nop
 8004e6c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004e6e:	bc08      	pop	{r3}
 8004e70:	469e      	mov	lr, r3
 8004e72:	4770      	bx	lr
